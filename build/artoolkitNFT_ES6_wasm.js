
var Module = (() => {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  
  return (
function(Module = {})  {

var Module = typeof Module != "undefined" ? Module : {};

var readyPromiseResolve, readyPromiseReject;

Module["ready"] = new Promise(function(resolve, reject) {
 readyPromiseResolve = resolve;
 readyPromiseReject = reject;
});

[ "_main", "_fflush", "___getTypeName", "__embind_initialize_bindings", "__ZN6__asan9FakeStack17AddrIsInFakeStackEm", "__ZN6__asan9FakeStack8AllocateEmmm", "___set_stack_limits", "onRuntimeInitialized" ].forEach(prop => {
 if (!Object.getOwnPropertyDescriptor(Module["ready"], prop)) {
  Object.defineProperty(Module["ready"], prop, {
   get: () => abort("You are getting " + prop + " on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),
   set: () => abort("You are setting " + prop + " on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")
  });
 }
});

var moduleOverrides = Object.assign({}, Module);

var arguments_ = [];

var thisProgram = "./this.program";

var quit_ = (status, toThrow) => {
 throw toThrow;
};

var ENVIRONMENT_IS_WEB = true;

var ENVIRONMENT_IS_WORKER = false;

var ENVIRONMENT_IS_NODE = false;

var ENVIRONMENT_IS_SHELL = false;

if (Module["ENVIRONMENT"]) {
 throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");
}

var scriptDirectory = "";

function locateFile(path) {
 if (Module["locateFile"]) {
  return Module["locateFile"](path, scriptDirectory);
 }
 return scriptDirectory + path;
}

var read_, readAsync, readBinary, setWindowTitle;

function logExceptionOnExit(e) {
 if (e instanceof ExitStatus) return;
 let toLog = e;
 if (e && typeof e == "object" && e.stack) {
  toLog = [ e, e.stack ];
 }
 err("exiting due to exception: " + toLog);
}

if (ENVIRONMENT_IS_SHELL) {
 if (typeof process == "object" && typeof require === "function" || typeof window == "object" || typeof importScripts == "function") throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");
 if (typeof read != "undefined") {
  read_ = function shell_read(f) {
   const data = tryParseAsDataURI(f);
   if (data) {
    return intArrayToString(data);
   }
   return read(f);
  };
 }
 readBinary = function readBinary(f) {
  let data;
  data = tryParseAsDataURI(f);
  if (data) {
   return data;
  }
  if (typeof readbuffer == "function") {
   return new Uint8Array(readbuffer(f));
  }
  data = read(f, "binary");
  assert(typeof data == "object");
  return data;
 };
 readAsync = function readAsync(f, onload, onerror) {
  setTimeout(() => onload(readBinary(f)), 0);
 };
 if (typeof clearTimeout == "undefined") {
  globalThis.clearTimeout = id => {};
 }
 if (typeof scriptArgs != "undefined") {
  arguments_ = scriptArgs;
 } else if (typeof arguments != "undefined") {
  arguments_ = arguments;
 }
 if (typeof quit == "function") {
  quit_ = (status, toThrow) => {
   if (runtimeKeepaliveCounter) {
    throw toThrow;
   }
   logExceptionOnExit(toThrow);
   quit(status);
  };
 }
 if (typeof print != "undefined") {
  if (typeof console == "undefined") console = {};
  console.log = print;
  console.warn = console.error = typeof printErr != "undefined" ? printErr : print;
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 if (ENVIRONMENT_IS_WORKER) {
  scriptDirectory = self.location.href;
 } else if (typeof document != "undefined" && document.currentScript) {
  scriptDirectory = document.currentScript.src;
 }
 if (_scriptDir) {
  scriptDirectory = _scriptDir;
 }
 if (scriptDirectory.indexOf("blob:") !== 0) {
  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, "").lastIndexOf("/") + 1);
 } else {
  scriptDirectory = "";
 }
 if (!(typeof window == "object" || typeof importScripts == "function")) throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");
 {
  read_ = url => {
   try {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    xhr.send(null);
    return xhr.responseText;
   } catch (err) {
    var data = tryParseAsDataURI(url);
    if (data) {
     return intArrayToString(data);
    }
    throw err;
   }
  };
  if (ENVIRONMENT_IS_WORKER) {
   readBinary = url => {
    try {
     var xhr = new XMLHttpRequest();
     xhr.open("GET", url, false);
     xhr.responseType = "arraybuffer";
     xhr.send(null);
     return new Uint8Array(xhr.response);
    } catch (err) {
     var data = tryParseAsDataURI(url);
     if (data) {
      return data;
     }
     throw err;
    }
   };
  }
  readAsync = (url, onload, onerror) => {
   var xhr = new XMLHttpRequest();
   xhr.open("GET", url, true);
   xhr.responseType = "arraybuffer";
   xhr.onload = () => {
    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
     onload(xhr.response);
     return;
    }
    var data = tryParseAsDataURI(url);
    if (data) {
     onload(data.buffer);
     return;
    }
    onerror();
   };
   xhr.onerror = onerror;
   xhr.send(null);
  };
 }
 setWindowTitle = title => document.title = title;
} else {
 throw new Error("environment detection error");
}

var out = Module["print"] || console.log.bind(console);

var err = Module["printErr"] || console.warn.bind(console);

Object.assign(Module, moduleOverrides);

moduleOverrides = null;

checkIncomingModuleAPI();

if (Module["arguments"]) arguments_ = Module["arguments"];

legacyModuleProp("arguments", "arguments_");

if (Module["thisProgram"]) thisProgram = Module["thisProgram"];

legacyModuleProp("thisProgram", "thisProgram");

if (Module["quit"]) quit_ = Module["quit"];

legacyModuleProp("quit", "quit_");

assert(typeof Module["memoryInitializerPrefixURL"] == "undefined", "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["pthreadMainPrefixURL"] == "undefined", "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["cdInitializerPrefixURL"] == "undefined", "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["filePackagePrefixURL"] == "undefined", "Module.filePackagePrefixURL option was removed, use Module.locateFile instead");

assert(typeof Module["read"] == "undefined", "Module.read option was removed (modify read_ in JS)");

assert(typeof Module["readAsync"] == "undefined", "Module.readAsync option was removed (modify readAsync in JS)");

assert(typeof Module["readBinary"] == "undefined", "Module.readBinary option was removed (modify readBinary in JS)");

assert(typeof Module["setWindowTitle"] == "undefined", "Module.setWindowTitle option was removed (modify setWindowTitle in JS)");

assert(typeof Module["TOTAL_MEMORY"] == "undefined", "Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY");

legacyModuleProp("read", "read_");

legacyModuleProp("readAsync", "readAsync");

legacyModuleProp("readBinary", "readBinary");

legacyModuleProp("setWindowTitle", "setWindowTitle");

var IDBFS = "IDBFS is no longer included by default; build with -lidbfs.js";

var PROXYFS = "PROXYFS is no longer included by default; build with -lproxyfs.js";

var WORKERFS = "WORKERFS is no longer included by default; build with -lworkerfs.js";

var NODEFS = "NODEFS is no longer included by default; build with -lnodefs.js";

assert(!ENVIRONMENT_IS_WORKER, "worker environment detected but not enabled at build time.  Add 'worker' to `-sENVIRONMENT` to enable.");

assert(!ENVIRONMENT_IS_NODE, "node environment detected but not enabled at build time.  Add 'node' to `-sENVIRONMENT` to enable.");

assert(!ENVIRONMENT_IS_SHELL, "shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.");

var wasmBinary;

if (Module["wasmBinary"]) wasmBinary = Module["wasmBinary"];

legacyModuleProp("wasmBinary", "wasmBinary");

var noExitRuntime = Module["noExitRuntime"] || false;

legacyModuleProp("noExitRuntime", "noExitRuntime");

if (typeof WebAssembly != "object") {
 abort("no native wasm support detected");
}

function _asan_js_load_1(ptr) {
 if (runtimeInitialized) return __asan_c_load_1(ptr);
 return HEAP8[ptr];
}

function _asan_js_load_1u(ptr) {
 if (runtimeInitialized) return __asan_c_load_1u(ptr);
 return HEAPU8[ptr];
}

function _asan_js_load_2(ptr) {
 if (runtimeInitialized) return __asan_c_load_2(ptr);
 return HEAP16[ptr];
}

function _asan_js_load_2u(ptr) {
 if (runtimeInitialized) return __asan_c_load_2u(ptr);
 return HEAPU16[ptr];
}

function _asan_js_load_4(ptr) {
 if (runtimeInitialized) return __asan_c_load_4(ptr);
 return HEAP32[ptr];
}

function _asan_js_load_4u(ptr) {
 if (runtimeInitialized) return __asan_c_load_4u(ptr) >>> 0;
 return HEAPU32[ptr];
}

function _asan_js_load_f(ptr) {
 if (runtimeInitialized) return __asan_c_load_f(ptr);
 return HEAPF32[ptr];
}

function _asan_js_load_d(ptr) {
 if (runtimeInitialized) return __asan_c_load_d(ptr);
 return HEAPF64[ptr];
}

function _asan_js_store_1(ptr, val) {
 if (runtimeInitialized) return __asan_c_store_1(ptr, val);
 return HEAP8[ptr] = val;
}

function _asan_js_store_1u(ptr, val) {
 if (runtimeInitialized) return __asan_c_store_1u(ptr, val);
 return HEAPU8[ptr] = val;
}

function _asan_js_store_2(ptr, val) {
 if (runtimeInitialized) return __asan_c_store_2(ptr, val);
 return HEAP16[ptr] = val;
}

function _asan_js_store_2u(ptr, val) {
 if (runtimeInitialized) return __asan_c_store_2u(ptr, val);
 return HEAPU16[ptr] = val;
}

function _asan_js_store_4(ptr, val) {
 if (runtimeInitialized) return __asan_c_store_4(ptr, val);
 return HEAP32[ptr] = val;
}

function _asan_js_store_4u(ptr, val) {
 if (runtimeInitialized) return __asan_c_store_4u(ptr, val) >>> 0;
 return HEAPU32[ptr] = val;
}

function _asan_js_store_f(ptr, val) {
 if (runtimeInitialized) return __asan_c_store_f(ptr, val);
 return HEAPF32[ptr] = val;
}

function _asan_js_store_d(ptr, val) {
 if (runtimeInitialized) return __asan_c_store_d(ptr, val);
 return HEAPF64[ptr] = val;
}

var wasmMemory;

var ABORT = false;

var EXITSTATUS;

function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed" + (text ? ": " + text : ""));
 }
}

var UTF8Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf8") : undefined;

function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {
 var endIdx = idx + maxBytesToRead;
 var endPtr = idx;
 while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;
 if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
 }
 var str = "";
 while (idx < endPtr) {
  var u0 = heapOrArray[idx++];
  if (!(u0 & 128)) {
   str += String.fromCharCode(u0);
   continue;
  }
  var u1 = heapOrArray[idx++] & 63;
  if ((u0 & 224) == 192) {
   str += String.fromCharCode((u0 & 31) << 6 | u1);
   continue;
  }
  var u2 = heapOrArray[idx++] & 63;
  if ((u0 & 240) == 224) {
   u0 = (u0 & 15) << 12 | u1 << 6 | u2;
  } else {
   if ((u0 & 248) != 240) warnOnce("Invalid UTF-8 leading byte " + ptrToString(u0) + " encountered when deserializing a UTF-8 string in wasm memory to a JS string!");
   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;
  }
  if (u0 < 65536) {
   str += String.fromCharCode(u0);
  } else {
   var ch = u0 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  }
 }
 return str;
}

function UTF8ToString(ptr, maxBytesToRead) {
 assert(typeof ptr == "number");
 return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
}

function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) {
   var u1 = str.charCodeAt(++i);
   u = 65536 + ((u & 1023) << 10) | u1 & 1023;
  }
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   heap[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   heap[outIdx++] = 192 | u >> 6;
   heap[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   heap[outIdx++] = 224 | u >> 12;
   heap[outIdx++] = 128 | u >> 6 & 63;
   heap[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 3 >= endIdx) break;
   if (u > 1114111) warnOnce("Invalid Unicode code point " + ptrToString(u) + " encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).");
   heap[outIdx++] = 240 | u >> 18;
   heap[outIdx++] = 128 | u >> 12 & 63;
   heap[outIdx++] = 128 | u >> 6 & 63;
   heap[outIdx++] = 128 | u & 63;
  }
 }
 heap[outIdx] = 0;
 return outIdx - startIdx;
}

function stringToUTF8(str, outPtr, maxBytesToWrite) {
 assert(typeof maxBytesToWrite == "number", "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}

function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var c = str.charCodeAt(i);
  if (c <= 127) {
   len++;
  } else if (c <= 2047) {
   len += 2;
  } else if (c >= 55296 && c <= 57343) {
   len += 4;
   ++i;
  } else {
   len += 3;
  }
 }
 return len;
}

var HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateMemoryViews() {
 var b = wasmMemory.buffer;
 Module["HEAP8"] = HEAP8 = new Int8Array(b);
 Module["HEAP16"] = HEAP16 = new Int16Array(b);
 Module["HEAP32"] = HEAP32 = new Int32Array(b);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(b);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(b);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(b);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(b);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(b);
}

assert(!Module["STACK_SIZE"], "STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time");

assert(typeof Int32Array != "undefined" && typeof Float64Array !== "undefined" && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, "JS engine does not provide full typed array support");

assert(!Module["wasmMemory"], "Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally");

assert(!Module["INITIAL_MEMORY"], "Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically");

var wasmTable;

function writeStackCookie() {
 var max = _emscripten_stack_get_end();
 assert((max & 3) == 0);
 if (max == 0) {
  max += 4;
 }
 _asan_js_store_4u(max >> 2, 34821223);
 _asan_js_store_4u(max + 4 >> 2, 2310721022);
}

function checkStackCookie() {
 if (ABORT) return;
 var max = _emscripten_stack_get_end();
 if (max == 0) {
  max += 4;
 }
 var cookie1 = _asan_js_load_4u(max >> 2);
 var cookie2 = _asan_js_load_4u(max + 4 >> 2);
 if (cookie1 != 34821223 || cookie2 != 2310721022) {
  abort("Stack overflow! Stack cookie has been overwritten at " + ptrToString(max) + ", expected hex dwords 0x89BACDFE and 0x2135467, but received " + ptrToString(cookie2) + " " + ptrToString(cookie1));
 }
}

(function() {
 var h16 = new Int16Array(1);
 var h8 = new Int8Array(h16.buffer);
 h16[0] = 25459;
 if (h8[0] !== 115 || h8[1] !== 99) throw "Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)";
})();

var __ATPRERUN__ = [];

var __ATINIT__ = [];

var __ATEXIT__ = [];

var __ATPOSTRUN__ = [];

var runtimeInitialized = false;

var runtimeExited = false;

var runtimeKeepaliveCounter = 0;

function keepRuntimeAlive() {
 return noExitRuntime || runtimeKeepaliveCounter > 0;
}

function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}

function initRuntime() {
 assert(!runtimeInitialized);
 runtimeInitialized = true;
 checkStackCookie();
 ___set_stack_limits(_emscripten_stack_get_base(), _emscripten_stack_get_end());
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
 FS.ignorePermissions = false;
 TTY.init();
 callRuntimeCallbacks(__ATINIT__);
}

function exitRuntime() {
 checkStackCookie();
 ___funcs_on_exit();
 callRuntimeCallbacks(__ATEXIT__);
 FS.quit();
 TTY.shutdown();
 runtimeExited = true;
}

function postRun() {
 checkStackCookie();
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}

function addOnExit(cb) {
 __ATEXIT__.unshift(cb);
}

function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}

assert(Math.imul, "This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.fround, "This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.clz32, "This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

assert(Math.trunc, "This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");

var runDependencies = 0;

var runDependencyWatcher = null;

var dependenciesFulfilled = null;

var runDependencyTracking = {};

function getUniqueRunDependency(id) {
 var orig = id;
 while (1) {
  if (!runDependencyTracking[id]) return id;
  id = orig + Math.random();
 }
}

function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(!runDependencyTracking[id]);
  runDependencyTracking[id] = 1;
  if (runDependencyWatcher === null && typeof setInterval != "undefined") {
   runDependencyWatcher = setInterval(function() {
    if (ABORT) {
     clearInterval(runDependencyWatcher);
     runDependencyWatcher = null;
     return;
    }
    var shown = false;
    for (var dep in runDependencyTracking) {
     if (!shown) {
      shown = true;
      err("still waiting on run dependencies:");
     }
     err("dependency: " + dep);
    }
    if (shown) {
     err("(end of list)");
    }
   }, 1e4);
  }
 } else {
  err("warning: run dependency added without ID");
 }
}

function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(runDependencyTracking[id]);
  delete runDependencyTracking[id];
 } else {
  err("warning: run dependency removed without ID");
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}

function abort(what) {
 if (Module["onAbort"]) {
  Module["onAbort"](what);
 }
 what = "Aborted(" + what + ")";
 err(what);
 ABORT = true;
 EXITSTATUS = 1;
 var e = new WebAssembly.RuntimeError(what);
 readyPromiseReject(e);
 throw e;
}

var dataURIPrefix = "data:application/octet-stream;base64,";

function isDataURI(filename) {
 return filename.startsWith(dataURIPrefix);
}

function isFileURI(filename) {
 return filename.startsWith("file://");
}

function createExportWrapper(name, fixedasm) {
 return function() {
  var displayName = name;
  var asm = fixedasm;
  if (!fixedasm) {
   asm = Module["asm"];
  }
  assert(runtimeInitialized, "native function `" + displayName + "` called before runtime initialization");
  assert(!runtimeExited, "native function `" + displayName + "` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
  if (!asm[name]) {
   assert(asm[name], "exported native function `" + displayName + "` not found");
  }
  return asm[name].apply(null, arguments);
 };
}

var wasmBinaryFile;

wasmBinaryFile = "data:application/octet-stream;base64,AGFzbQEAAAAB7AVdYAF/AGABfwF/YAJ/fwBgAn9/AX9gA39/fwF/YAN/f38AYAV/f39/fwBgBH9/f38AYAR/f39/AX9gBn9/f39/fwF/YAAAYAV/f39/fwF/YAABf2AGf39/f39/AGAHf39/f39/fwBgCH9/f39/f39/AX9gB39/f39/f38Bf2ABfQF9YAh/f39/f39/fwBgA39+fwF+YAV/fn5+fgBgAn98AGAFf39/f34Bf2ADf39/AX1gCn9/f39/f39/f38Bf2ABfwF8YAJ/fwF+YAR/f39/AX5gCn9/f39/f39/f38AYAN/f38BfGABfwF9YAF8AXxgBH9+fn8AYAZ/f39/fn4Bf2AHf39/f39+fgF/YAN/f3wAYAABfGAJf39/f39/f39/AX9gBX99fX9/AX9gAn9/AXxgBn9/fX1/fwF/YAN/f30AYAF8AX1gAX8BfmACf30BfWACfH8BfGAGf3x/f39/AX9gBX9/fn9/AGAMf39/f39/f39/f39/AX9gBX9/f398AX9gC39/f39/f39/f39/AX9gD39/f39/f39/f39/f39/fwBgBn9/f39+fwF/YA1/f39/f39/f39/f39/AGAHf39/f3x/fwF/YA5/f39/f39/f39/fH9/fwF/YAR/fn9/AX9gDH9/f39/f39/f398fwF/YAZ/fHx/f38AYAV/f319fwF/YAN/f30BfWAFf399fX8AYAN/fX0BfWAGf39/f399AGAFf39/fX0AYAN/f30Bf2ACf38BfWAEf39/fQBgBX99fX9/AX1gB39/f39/f38BfWAHf39/f39/fQF9YAJ9fQF9YAJ8fAF8YAJ8fwF/YAN8fH8BfGACfX8Bf2ADf35/AGABfQF/YAJ+fwF/YAJ/fgBgA39/fgBgBH5+fn4Bf2ADfn5+AX9gAn5+AXxgAn5+AX1gBH9/f34BfmAAAX5gAX4AYAh/f35/f39/fwF/YAV/f39+fgBgAn98AXxgBH9/fn4AYAJ9fwF9AooQTANlbnYEZXhpdAAAA2VudglpbnZva2VfaWkAAwNlbnYJaW52b2tlX3ZpAAIDZW52DGludm9rZV92aWlpaQAGA2VudgtpbnZva2VfdmlpaQAHA2VudgppbnZva2VfdmlpAAUDZW52Cmludm9rZV9paWkABANlbnYLaW52b2tlX2lpaWkACANlbnYLX19jeGFfdGhyb3cABQNlbnYFYWJvcnQACgNlbnYIc3RyZnRpbWUACANlbnYYZW1zY3JpcHRlbl9hc21fY29uc3RfaW50AAQDZW52DV9lbXZhbF9kZWNyZWYAAANlbnYRX2VtdmFsX25ld19vYmplY3QADANlbnYQX2VtdmFsX25ld19hcnJheQAMA2VudhFfZW12YWxfdGFrZV92YWx1ZQADA2VudhJfZW12YWxfbmV3X2NzdHJpbmcAAQNlbnYTX2VtdmFsX3NldF9wcm9wZXJ0eQAFA2VudhZfZW1iaW5kX3JlZ2lzdGVyX2NsYXNzADUDZW52HV9lbWJpbmRfZmluYWxpemVfdmFsdWVfb2JqZWN0AAADZW52HV9lbWJpbmRfcmVnaXN0ZXJfdmFsdWVfb2JqZWN0AA0DZW52I19lbWJpbmRfcmVnaXN0ZXJfdmFsdWVfb2JqZWN0X2ZpZWxkABwDZW52GV9lbWJpbmRfcmVnaXN0ZXJfY29uc3RhbnQAIwNlbnYiX2VtYmluZF9yZWdpc3Rlcl9jbGFzc19jb25zdHJ1Y3RvcgANA2Vudh9fZW1iaW5kX3JlZ2lzdGVyX2NsYXNzX2Z1bmN0aW9uABIDZW52DV9lbXZhbF9pbmNyZWYAAANlbnYTX2VtdmFsX2dldF9wcm9wZXJ0eQADA2VudglfZW12YWxfYXMAHQNlbnYWX2VtdmFsX3J1bl9kZXN0cnVjdG9ycwAAA2VudhdfZW12YWxfY2FsbF92b2lkX21ldGhvZAAHA2VudhhfZW12YWxfZ2V0X21ldGhvZF9jYWxsZXIAAwNlbnYVX2VtYmluZF9yZWdpc3Rlcl92b2lkAAIDZW52FV9lbWJpbmRfcmVnaXN0ZXJfYm9vbAAGA2VudhhfZW1iaW5kX3JlZ2lzdGVyX2ludGVnZXIABgNlbnYWX2VtYmluZF9yZWdpc3Rlcl9mbG9hdAAFA2VudhtfZW1iaW5kX3JlZ2lzdGVyX3N0ZF9zdHJpbmcAAgNlbnYcX2VtYmluZF9yZWdpc3Rlcl9zdGRfd3N0cmluZwAFA2VudhZfZW1iaW5kX3JlZ2lzdGVyX2VtdmFsAAIDZW52HF9lbWJpbmRfcmVnaXN0ZXJfbWVtb3J5X3ZpZXcABQNlbnYJX3R6c2V0X2pzAAUDZW52DV9sb2NhbHRpbWVfanMAAgNlbnYTZW1zY3JpcHRlbl9kYXRlX25vdwAkA2VudiBfZW1zY3JpcHRlbl9nZXRfbm93X2lzX21vbm90b25pYwAMA2VudhJlbXNjcmlwdGVuX2dldF9ub3cAJANlbnYQX19zeXNjYWxsX29wZW5hdAAIA2VudhFfX3N5c2NhbGxfZmNudGw2NAAEA2Vudg9fX3N5c2NhbGxfaW9jdGwABBZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxB2ZkX3JlYWQACBZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxCGZkX3dyaXRlAAgWd2FzaV9zbmFwc2hvdF9wcmV2aWV3MQhmZF9jbG9zZQABFndhc2lfc25hcHNob3RfcHJldmlldzERZW52aXJvbl9zaXplc19nZXQAAxZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxC2Vudmlyb25fZ2V0AAMDZW52EV9fc3lzY2FsbF9ta2RpcmF0AAQDZW52EF9fc3lzY2FsbF9zdGF0NjQAAwNlbnYYZW1zY3JpcHRlbl9jb25zb2xlX2Vycm9yAAADZW52FmVtc2NyaXB0ZW5fcmVzaXplX2hlYXAAAQNlbnYZX2Vtc2NyaXB0ZW5fdGhyb3dfbG9uZ2ptcAAKA2VudgpzdHJmdGltZV9sAAsDZW52F2Vtc2NyaXB0ZW5fZ2V0X2hlYXBfbWF4AAwDZW52GWVtc2NyaXB0ZW5fcmV0dXJuX2FkZHJlc3MAAQNlbnYNX19hc3NlcnRfZmFpbAAHA2VudhtlbXNjcmlwdGVuX2FzbV9jb25zdF9kb3VibGUAHQNlbnYaZW1zY3JpcHRlbl9nZXRfbW9kdWxlX25hbWUAAwNlbnYKX211bm1hcF9qcwAJA2VudghfbW1hcF9qcwAQA2Vudg1fX3N5c2NhbGxfZHVwAAEWd2FzaV9zbmFwc2hvdF9wcmV2aWV3MQlwcm9jX2V4aXQAAANlbnYZZW1zY3JpcHRlbl9zdGFja19zbmFwc2hvdAAMA2Vudh5lbXNjcmlwdGVuX3N0YWNrX3Vud2luZF9idWZmZXIABANlbnYaZW1zY3JpcHRlbl9wY19nZXRfZnVuY3Rpb24AAQNlbnYWZW1zY3JpcHRlbl9wY19nZXRfZmlsZQABA2VudhZlbXNjcmlwdGVuX3BjX2dldF9saW5lAAEDZW52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AAt/AUEAC38BQQALB/0HMgZtZW1vcnkCABFfX3dhc21fY2FsbF9jdG9ycwBMBm1hbGxvYwCaCwRmcmVlAJkLEF9fZXJybm9fbG9jYXRpb24AgQUZX19pbmRpcmVjdF9mdW5jdGlvbl90YWJsZQEACnNhdmVTZXRqbXAApAYGZmZsdXNoAKAFDV9fZ2V0VHlwZU5hbWUA/QQbX2VtYmluZF9pbml0aWFsaXplX2JpbmRpbmdzAP4ED19fZnVuY3Nfb25fZXhpdACIBRllbXNjcmlwdGVuX2J1aWx0aW5fbWFsbG9jAJgGCG1lbWFsaWduAJ4LF2Vtc2NyaXB0ZW5fYnVpbHRpbl9mcmVlAJkGG2Vtc2NyaXB0ZW5fYnVpbHRpbl9tZW1hbGlnbgCaBghzZXRUaHJldwCjBhVlbXNjcmlwdGVuX3N0YWNrX2luaXQAgwwZZW1zY3JpcHRlbl9zdGFja19nZXRfZnJlZQCEDBllbXNjcmlwdGVuX3N0YWNrX2dldF9iYXNlAIUMGGVtc2NyaXB0ZW5fc3RhY2tfZ2V0X2VuZACGDAlzdGFja1NhdmUAiQ0Mc3RhY2tSZXN0b3JlAIoNCnN0YWNrQWxsb2MAiw0cZW1zY3JpcHRlbl9zdGFja19nZXRfY3VycmVudACJDRVfX2N4YV9pc19wb2ludGVyX3R5cGUAxAopX1pONl9fYXNhbjlGYWtlU3RhY2sxN0FkZHJJc0luRmFrZVN0YWNrRW0AygohX1pONl9fYXNhbjlGYWtlU3RhY2s4QWxsb2NhdGVFbW1tAIELDl9hc2FuX2NfbG9hZF8xAP0MD19hc2FuX2NfbG9hZF8xdQD+DA5fYXNhbl9jX2xvYWRfMgD/DA9fYXNhbl9jX2xvYWRfMnUAgA0OX2FzYW5fY19sb2FkXzQAgQ0PX2FzYW5fY19sb2FkXzR1AIENDl9hc2FuX2NfbG9hZF9mAIINDl9hc2FuX2NfbG9hZF9kAIMND19hc2FuX2Nfc3RvcmVfMQCEDRBfYXNhbl9jX3N0b3JlXzF1AIQND19hc2FuX2Nfc3RvcmVfMgCFDRBfYXNhbl9jX3N0b3JlXzJ1AIUND19hc2FuX2Nfc3RvcmVfNACGDRBfYXNhbl9jX3N0b3JlXzR1AIYND19hc2FuX2Nfc3RvcmVfZgCHDQ9fYXNhbl9jX3N0b3JlX2QAiA0SX19zZXRfc3RhY2tfbGltaXRzAIwNDGR5bkNhbGxfamlqaQCNDQ5keW5DYWxsX3ZpaWppaQCODQ5keW5DYWxsX2lpaWlpagCPDQ9keW5DYWxsX2lpaWlpamoAkA0QZHluQ2FsbF9paWlpaWlqagCRDQtkeW5DYWxsX2ppaQCSDQmQDQEAQQELxgZ3tQR55AN44wPpA+UD5wPmA+gDyAqtAs8B6gHJAdEByAHKAdIB0wGtAvAB8QHzAfAB8AGoAqkC8AHwAaoCqwLwAbcCuAK5AroCuwK8Ar0CvgK/AsACwQLCAsMCxALFAsYCxwLLAswCzQLOAtAC0wLUAtYC3QLeAt8C4ALhAuMC5ALlAuYC5wLrAuwC7QLIAsoCzwLXAtgC2QLaAtsC3ALiAugC/AL9Av4C/wKBA9IChAOGA+kCiAOJA/4C9wH5AdUCjQOPA+oCkQOSA/4C0QKUA5YDmAOaA7ED7gK2A+8CzgPwAs8D8QLQA/IC0QPzAtID9ALTA/UC1AP2AskD9wLVA/gC1gP5AtcDnAPwAfoCnQOfA7EDgAOyA4IDtQODA7YDhQO3A4cDuAOxA4oDuQOLA7oDjAO2A44DuwOQA7wDsQOTA8kDlQPKA5cDtgOZA8sDmwPNA6ADoQOiA6MDrgOwA70DvgO/A8gDtQLZA9oD2wPcA94D3QPfA+ADqALxA+oD6wPsA+0D7gPvA/AD8wP0A/UD9gP3A6gC+QP6A/sD/AP9A/8DgASBBIIEgwTEBMMEwgTBBMAEvwS+BMYExwTIBMkEygTLBMwEzQTOBM8E0ATRBNIE0wTUBNUE1gTXBNgE2QTaBNsE3ATFBL0EvAS7BKgChASFBIYEhwSIBIkEjASNBI4EjwSQBJEEkwSUBJcEmASZBJoEmwScBJ0EngSfBKAEoQSjBKQEpQSmBKcEqASpBKoEqwSsBK0ErgSvBLAEsQSyBLMEtAS2BLcEuAS5BLoE3QTeBN8E4AThBOIE4wTkBOUE5gTnBOkEqALqBOwE7QTuBO8E8ATxBPIE9AT1BKgC9gT3BP8EggWFBYcFiwWMBY4FjwWQBZIFlQWWBZoFnAWdBaEFowWkBaUFqAWmBacFqQWrBawFrgW4BbkFvQW/BcAFwQXEBcYFyAXLBcwFzgXPBdAF0gXVBdcF2QXaBd0F3gXfBeAF4QXiBeQFnATjBeoF7QXuBe8F8QXzBfQF+QX7BfwF/gX/BYAGgQaCBokGiwaMBo0GjwaQBpEGkwaUBrkGuga8Br0GvgbABpwEnATBBsQGxQbHBsgGxwbJBssGygbMBtgG2gbZBtsG4gbjBrwGvQa+BsAGnAScBOUGxAbnBscG6AbHBskGywbKBswG2AbaBtkG2wa3BrgGtwa4BqIHuAalB6gCsgezB7QHtQe3B7gHswe7B7wHvQe+B78HwAfBB8MHxAe/B8UHvAfGB8cHyAfLB84HzwfTB9QH1QfXB9gH2weZC6gCpwmpCeEJ4wnmCegJ6gnsCe4J8AnyCfQJ9gn4CfoJ/AmgCaMJqAm1CbYJtwm4CbkJugm1BrsJvAm9CZUJwQnCCcQJxgnHCZwEyQnKCdIJ0wnWCdcJ2AnaCd0J1AnVCbQIuQjZCdsJ3gmtAvAB8AGqCasJrAmtCa4JrwmwCbEJtQayCbMJtAnwAb4Jvgm/CZ4FngXACZ4F8AHLCcwJvwmcBJwEzQnOCfABywnMCb8JnAScBM0JzgnwAc8J0Am/CZwEnATRCc4J8AHPCdAJvwmcBJwE0QnOCa0C8AHcB90H3getAvAB3wfgB+IH8AHjB/AH9gf4B/oH+gf8B/4HggiECIYI8AGNCJEIlQiWCJcIlwiYCJkInAidCJ4I8AGkCKoIrwiwCLEIsgi3CLgI8AG6CL0IwAjBCMIIwwjFCMYIrQLwAcwIzQjOCM8I0QjTCNYI4AnlCekJ9Qn5Ce0J8QmtAvABzAjZCNoI2wjdCN8I4gjiCecJ6wn3CfsJ7wnzCf4J/QnjCP4J/QnmCPAB5wjnCOgI6AjoCOkInATqCOoI8AHnCOcI6AjoCOgI6QicBOoI6gjwAesI6wjoCOgI6AjsCJwE6gjqCPAB6wjrCOgI6AjoCOwInATqCOoI8AHtCPMI8AH9CIAJ8AGHCYwJ8AGNCZEJ8AGSCZMJvAbwAZIJlAm8BpoKrQqqCqsKrQLwAagCqAKuCvABsArDCsAKswrwAcIKvwq0CvABwQq8CrcK8AG4CvABxgrwAccK8AHFCskKlgrJCskKywrMCs0KzgrPCtAKgAX+CtEK1wvcC70LvguoC78LpwvAC8ULzAvUC6gCvAbKC7wGyQuoArwG2QvhC+IL4wvkC+UL6Av+C4AMgQyCDI4MjwyQDKAMoQyiDMwKowykDLQMxgzH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IA1qIgNBBGsgDzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCAAwFCyAEQQJrLwEAIgPBIQEgBC4BAiIEQQBKBEAgAUEASgRAIARBAnQgAGpBBGsoAgAiASADQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCiAMQQAgDEEAShshCyAAIQMDQCAKIAtGBEAgBCEBDAgLIAEgAygCAEYEQCADIAQ2AgALIApBAWohCiADQQRqIQMMAAsACyACIAE7AQAgASAETg0FQQAhCiAMQQAgDEEAShshCyAAIQMDQCAKIAtGDQYgBCADKAIARgRAIAMgATYCAAsgCkEBaiEKIANBBGohAwwACwALIAJBAmsuAQAiA0EASgRAIARBAnQgAGpBBGsoAgAiASADQf//A3FBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEKIAxBACAMQQBKGyELIAAhAwNAIAogC0YEQCAEIQEMBwsgASADKAIARgRAIAMgBDYCAAsgCkEBaiEKIANBBGohAwwACwALIAIgATsBACABIARODQRBACEKIAxBACAMQQBKGyELIAAhAwNAIAogC0YNBSAEIAMoAgBGBEAgAyABNgIACyAKQQFqIQogA0EEaiEDDAALAAsgAiAEOwEAIARBHGwgDWoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgCWo2AgAgA0EUayIBIAEoAgAgD2o2AgAgCSADQRBrIgEoAgBIBEAgASAJNgIACyADQQRrIA82AgAMBQsgAUEASgRAIAIgATsBACADQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIAIAkgA0EMayIBKAIASgRAIAEgCTYCAAsgA0EEayAPNgIADAULIAJBAmsvAQAiA8EiAUEASgRAIAIgATsBACADQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIAIANBDGsiASgCACAJTg0FIAEgCTYCAAwFCyAMQYCAAk4EQEEAQQNB/YOlkgFBABB4QX8hCgwJCyACIAxBAWoiATsBACAAIAxBAnRqIAHBNgIAIA0gDEEcbGoiAyAPNgIYIAMgDzYCFCADIAk2AhAgAyAJNgIMIAMgDzYCCCADIAk2AgQgA0EBNgIAIAEhDAwECyACQQA7AQAMAwsgAkEEaiECIBFBAmohCCAWQQJqIQ4gD0EBaiEPDAULIAHBQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIADAELIAHBQRxsIA1qIgNBBGsgDzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCAAsgAkECaiECIAhBAWohCCAOQQFqIQ4gCUEBaiEJDAALAAsLIAxBACAMQQBKG0EBaiECQQEhA0EBIQggACEJA0AgAiADRwRAAkAgAyAJKAIAIgFGBEAgCCIKQQFqIQgMAQsgAUECdCAAakEEaygCACEKCyAJIAo2AgAgCUEEaiEJIANBAWohAwwBCwsgByAIQQFrIgk2AghBACAJRQ0BGiAHQYyACGohCiAHQQxqQQAgCUECdBCXCyELIAdBkIAoakEAIAlBBHQQlwshCEEAIQMDQCADIAlOBEBBACEJIAxBACAMQQBKGyEEA0AgBCAJRgRAQQAhCiAHKAIIIgBBACAAQQBKGyEAQQAhAwNAIAAgA0YNBSAIIANBBHRqIgEgASsDACALIANBAnRqKAIAtyIXozkDACABIAErAwggF6M5AwggA0EBaiEDDAALAAsgCyAAIAlBAnRqKAIAQQFrIgJBAnQiA2oiASABKAIAIA0gCUEcbGoiBSgCAGo2AgAgCCACQQR0IgFqIgIgAisDACAFKAIEt6A5AwAgAiACKwMIIAUoAgi3oDkDCCAFKAIMIgIgASAKaiIBKAIASARAIAEgAjYCAAsgBSgCECICIAogA0ECdCIDQQRyaiIBKAIASgRAIAEgAjYCAAsgBSgCFCICIAogA0EIcmoiASgCAEgEQCABIAI2AgALIAUoAhgiAiAKIANBDHJqIgEoAgBKBEAgASACNgIACyAJQQFqIQkMAAsABSAKIANBBHRqIgEgBjYCACABQQA2AgQgASAFNgIIIAFBADYCDCADQQFqIQMgBygCCCEJDAELAAsACyAKCw8LIAZFBEACfyAAIQRBACEDIAEiCEEAIAFBAEobIQAgBygCACIBIAIiBkEBayIJIAhsQQF0aiELIAEhAgNAIAAgA0cEQCALQQA7AQAgAkEAOwEAIANBAWohAyACQQJqIQIgC0ECaiELDAELCyAGQQAgBkEAShshDCABIAhBAWsiCkEBdGohC0EAIQMgASECA0AgAyAMRwRAIAtBADsBACACQQA7AQAgA0EBaiEDIAsgCEEBdCIAaiELIAAgAmohAgwBCwtBASAJIAlBAUwbIRAgB0GQgNAAaiEOIAdBkIDIAGohACAEIAhBAWoiAmohDEEBIAogCkEBTBsiEkEBayEUIAEgAkEBdGohAkEAIAhrQQF0IRVBACEKQQEhDQJAA0AgDSAQRwRAIAwgFGohFkEBIQsDQAJAAkACQCALIBJHBEAgBSAMLQAATgRAIAIgFWoiBC8BACIDwSIBQQBKBEAgAiABOwEAIANBHGwgDmoiA0EEayANNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA1qNgIADAULIARBAmsvAQAiA8EhASAELgECIgRBAEoEQCABQQBKBEAgBEECdCAAakEEaygCACIBIANBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYEQCAEIQEMCAsgASADKAIARgRAIAMgBDYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgATsBACABIARODQVBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYNBiAEIAMoAgBGBEAgAyABNgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAkECay4BACIDQQBKBEAgBEECdCAAakEEaygCACIBIANB//8DcUECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRgRAIAQhAQwHCyABIAMoAgBGBEAgAyAENgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBEEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRg0FIAQgAygCAEYEQCADIAE2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAQ7AQAgBEEcbCAOaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACANajYCACALIANBEGsiASgCAEgEQCABIAs2AgALIANBBGsgDTYCAAwFCyABQQBKBEAgAiABOwEAIANBHGwgDmoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgDWo2AgAgCyADQQxrIgEoAgBKBEAgASALNgIACyADQQRrIA02AgAMBQsgAkECay8BACIDwSIBQQBKBEAgAiABOwEAIANBHGwgDmoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgDWo2AgAgA0EMayIBKAIAIAtODQUgASALNgIADAULIApBgIACTgRAQQBBA0H9g6WSAUEAEHhBfyEJDAkLIAIgCkEBaiIBOwEAIAAgCkECdGogAcE2AgAgDiAKQRxsaiIDIA02AhggAyANNgIUIAMgCzYCECADIAs2AgwgAyANNgIIIAMgCzYCBCADQQE2AgAgASEKDAQLIAJBADsBAAwDCyACQQRqIQIgFkECaiEMIA1BAWohDQwFCyABwUEcbCAOaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACANajYCAAwBCyABwUEcbCAOaiIDQQRrIA02AgAgA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgDWo2AgALIAJBAmohAiAMQQFqIQwgC0EBaiELDAALAAsLIApBACAKQQBKG0EBaiECQQEhA0EBIQwgACELA0AgAiADRwRAAkAgAyALKAIAIgFGBEAgDCIJQQFqIQwMAQsgAUECdCAAakEEaygCACEJCyALIAk2AgAgC0EEaiELIANBAWohAwwBCwsgByAMQQFrIgs2AghBACALRQ0BGiAHQYyACGohCSAHQQxqQQAgC0ECdBCXCyEMIAdBkIAoakEAIAtBBHQQlwshBUEAIQMDQCADIAtOBEBBACELIApBACAKQQBKGyEEA0AgBCALRgRAQQAhCSAHKAIIIgBBACAAQQBKGyEAQQAhAwNAIAAgA0YNBSAFIANBBHRqIgEgASsDACAMIANBAnRqKAIAtyIXozkDACABIAErAwggF6M5AwggA0EBaiEDDAALAAsgDCAAIAtBAnRq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IRYgCCAQaiERQQEhCQNAAkACQAJAIAkgFEcEQCAOLQAAIAgtAABLBEAgAiAVaiIELwEAIgPBIgFBAEoEQCACIAE7AQAgA0EcbCANaiIDQQRrIA82AgAgA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgCWo2AgAgA0EUayIBIAEoAgAgD2o2AgAMBQsgBEECay8BACIDwSEBIAQuAQIiBEEASgRAIAFBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0ECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQogDEEAIAxBAEobIQsgACEDA0AgCiALRgRAIAQhAQwICyABIAMoAgBGBEAgAyAENgIACyAKQQFqIQogA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBUEAIQogDEEAIAxBAEobIQsgACEDA0AgCiALRg0GIAQgAygCAEYEQCADIAE2AgALIApBAWohCiADQQRqIQMMAAsACyACQQJrLgEAIgNBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0H//wNxQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCiAMQQAgDEEAShshCyAAIQMDQCAKIAtGBEAgBCEBDAcLIAEgAygCAEYEQCADIAQ2AgALIApBAWohCiADQQRqIQMMAAsACyACIAE7AQAgASAETg0EQQAhCiAMQQAgDEEAShshCyAAIQMDQCAKIAtGDQUgBCADKAIARgRAIAMgATYCAAsgCkEBaiEKIANBBGohAwwACwALIAIgBDsBACAEQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIA9qNgIAIAkgA0EQayIBKAIASARAIAEgCTYCAAsgA0EEayAPNgIADAULIAFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCACAJIANBDGsiASgCAEoEQCABIAk2AgALIANBBGsgDzYCAAwFCyACQQJrLwEAIgPBIgFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCACADQQxrIgEoAgAgCU4NBSABIAk2AgAMBQsgDEGAgAJOBEBBAEEDQf2DpZIBQQAQeEF/IQoMCQsgAiAMQQFqIgE7AQAgACAMQQJ0aiABwTYCACANIAxBHGxqIgMgDzYCGCADIA82AhQgAyAJNgIQIAMgCTYCDCADIA82AgggAyAJNgIEIANBATYCACABIQwMBAsgAkEAOwEADAMLIAJBBGohAiARQQJqIQggFkECaiEOIA9BAWohDwwFCyABwUEcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACAPajYCAAwBCyABwUEcbCANaiIDQQRrIA82AgAgA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgCWo2AgAgA0EUayIBIAEoAgAgD2o2AgALIAJBAmohAiAIQQFqIQggDkEBaiEOIAlBAWohCQwACwALCyAMQQAgDEEAShtBAWohAkEBIQNBASEIIAAhCQNAIAIgA0cEQAJAIAMgCSgCACIBRgRAIAgiCkEBaiEIDAELIAFBAnQgAGpBBGsoAgAhCgsgCSAKNgIAIAlBBGohCSADQQFqIQMMAQsLIAcgCEEBayIJNgIIQQAgCUUNARogB0GMgAhqIQogB0EMakEAIAlBAnQQlwshCyAHQZCAKGpBACAJQQR0EJcLIQhBACEDA0AgAyAJTgRAQQAhCSAMQQAgDEEAShshBANAIAQgCUYEQEEAIQogBygCCCIAQQAgAEEAShshAEEAIQMDQCAAIANGDQUgCCADQQR0aiIBIAErAwAgCyADQQJ0aigCALciF6M5AwAgASABKwMIIBejOQMIIANBAWohAwwACwALIAsgACAJQQJ0aigCAEEBayICQQJ0IgNqIgEgASgCACANIAlBHGxqIgUoAgBqNgIAIAggAkEEdCIBaiICIAIrAwAgBSgCBLegOQMAIAIgAisDCCAFKAIIt6A5AwggBSgCDCICIAEgCmoiASgCAEgEQCABIAI2AgALIAUoAhAiAiAKIANBAnQiA0EEcmoiASgCAEoEQCABIAI2AgALIAUoAhQiAiAKIANBCHJqIgEoAgBIBEAgASACNgIACyAFKAIYIgIgCiADQQxyaiIBKAIASgRAIAEgAjYCAAsgCUEBaiEJDAALAAUgCiADQQR0aiIBIAY2AgAgAUEANgIEIAEgBTYCCCABQQA2AgwgA0EBaiEDIAcoAgghCQwBCwALAAsgCgsPCyAGRQRAAn8gACEEQQAhAyABIghBACABQQBKGyEAIAcoAgAiASACIgZBAWsiCSAIbEEBdGohCyABIQIDQCAAIANHBEAgC0EAOwEAIAJBADsBACADQQFqIQMgAkECaiECIAtBAmohCwwBCwsgBkEAIAZBAEobIQwgASAIQQFrIgpBAXRqIQtBACEDIAEhAgNAIAMgDEcEQCALQQA7AQAgAkEAOwEAIANBAWohAyALIAhBAXQiAGohCyAAIAJqIQIMAQsLQQEgCSAJQQFMGyEQIAdBkIDQAGohDiAHQZCAyABqIQAgBCAIQQFqIgJqIQxBASAKIApBAUwbIhJBAWshFCABIAJBAXRqIQJBACAIa0EBdCEVQQAhCkEBIQ0CQANAIA0gEEcEQCAMIBRqIRZBASELA0ACQAJAAkAgCyASRwRAIAUgDC0AAEgEQCACIBVqIgQvAQAiA8EiAUEASgRAIAIgATsBACADQRxsIA5qIgNBBGsgDTYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACANajYCAAwFCyAEQQJrLwEAIgPBIQEgBC4BAiIEQQBKBEAgAUEASgRAIARBAnQgAGpBBGsoAgAiASADQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGBEAgBCEBDAgLIAEgAygCAEYEQCADIAQ2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAE7AQAgASAETg0FQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGDQYgBCADKAIARgRAIAMgATYCAAsgCUEBaiEJIANBBGohAwwACwALIAJBAmsuAQAiA0EASgRAIARBAnQgAGpBBGsoAgAiASADQf//A3FBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYEQCAEIQEMBwsgASADKAIARgRAIAMgBDYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgATsBACABIARODQRBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYNBSAEIAMoAgBGBEAgAyABNgIACyAJQQFq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BEAgASADNgIACyAKQQFqIQogAUEEaiEBDAALAAsgBCACOwEAIAIgA04NBUEAIQogDEEAIAxBAEobIQsgACEBA0AgCiALRg0GIAMgASgCAEYEQCABIAI2AgALIApBAWohCiABQQRqIQEMAAsACyAEQQJrLgEAIgFBAEoEQCADQQJ0IABqQQRrKAIAIgIgAUH//wNxQQJ0IABqQQRrKAIAIgNKBEAgBCADOwEAQQAhCiAMQQAgDEEAShshCyAAIQEDQCAKIAtGBEAgAyECDAcLIAIgASgCAEYEQCABIAM2AgALIApBAWohCiABQQRqIQEMAAsACyAEIAI7AQAgAiADTg0EQQAhCiAMQQAgDEEAShshCyAAIQEDQCAKIAtGDQUgAyABKAIARgRAIAEgAjYCAAsgCkEBaiEKIAFBBGohAQwACwALIAQgAzsBACADQRxsIBBqIgJBHGsiASABKAIAQQFqNgIAIAJBGGsiASABKAIAIAlqNgIAIAJBFGsiASABKAIAIA5qNgIAIAkgAkEQayIBKAIASARAIAEgCTYCAAsgAkEEayAONgIADAULIAJBAEoEQCAEIAI7AQAgAUEcbCAQaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCACAJIAJBDGsiASgCAEoEQCABIAk2AgALIAJBBGsgDjYCAAwFCyAEQQJrLwEAIgLBIgFBAEoEQCAEIAE7AQAgAkEcbCAQaiICQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCACACQQxrIgEoAgAgCU4NBSABIAk2AgAMBQsgDEGAgAJOBEBBAEEDQf2DpZIBQQAQeEF/IQoMCQsgBCAMQQFqIgE7AQAgACAMQQJ0aiABwTYCACAQIAxBHGxqIgIgDjYCGCACIA42AhQgAiAJNgIQIAIgCTYCDCACIA42AgggAiAJNgIEIAJBATYCACABIQwMBAsgBEEAOwEADAMLIARBBGohBCAOQQFqIQ4gBiAIakEEaiEGDAULIALBQRxsIBBqIgJBHGsiASABKAIAQQFqNgIAIAJBGGsiASABKAIAIAlqNgIAIAJBFGsiASABKAIAIA5qNgIADAELIALBQRxsIBBqIgJBBGsgDjYCACACQRxrIgEgASgCAEEBajYCACACQRhrIgEgASgCACAJajYCACACQRRrIgEgASgCACAOajYCAAsgBEECaiEEIAZBAmohBiAJQQFqIQkMAAsACwsgDEEAIAxBAEobQQFqIQNBASEBQQEhBiAAIQkDQCABIANHBEACQCABIAkoAgAiAkYEQCAGIgpBAWohBgwBCyACQQJ0IABqQQRrKAIAIQoLIAkgCjYCACAJQQRqIQkgAUEBaiEBDAELCyAHIAZBAWsiCTYCCEEAIAlFDQEaIAdBjIAIaiEIIAdBDGpBACAJQQJ0EJcLIQYgB0GQgChqQQAgCUEEdBCXCyEFQQAhAQNAIAEgCU4EQEEAIQkgDEEAIAxBAEobIQQDQCAEIAlGBEBBACEKIAcoAggiAEEAIABBAEobIQBBACEBA0AgACABRg0FIAUgAUEEdGoiAiACKwMAIAYgAUECdGooAgC3IhejOQMAIAIgAisDCCAXozkDCCABQQFqIQEMAAsACyAGIAAgCUECdGooAgBBAWsiAkECdCIDaiIBIAEoAgAgECAJQRxsaiIMKAIAajYCACAFIAJBBHQiAWoiAiACKwMAIAwoAgS3oDkDACACIAIrAwggDCgCCLegOQMIIAwoAgwiAiABIAhqIgEoAgBIBEAgASACNgIACyAMKAIQIgIgCCADQQJ0IgNBBHJqIgEoAgBKBEAgASACNgIACyAMKAIUIgIgCCADQQhyaiIBKAIASARAIAEgAjYCAAsgDCgCGCICIAggA0EMcmoiASgCAEoEQCABIAI2AgALIAlBAWohCQwACwAFIAggAUEEdGoiAiASNgIAIAJBADYCBCACIBQ2AgggAkEANgIMIAFBAWohASAHKAIIIQkMAQsACwALIAoLDwsgBEEBRgRAIAgEQAJ/IAAhBEEAIQMgASIGQQAgAUEAShshACAHIgwoAgAiASACIgVBAWsiCyAGbEEBdGohCSABIQIDQCAAIANHBEAgCUEAOwEAIAJBADsBACADQQFqIQMgAkECaiECIAlBAmohCQwBCwsgBUEAIAVBAEobIQcgASAGQQFrIgpBAXRqIQlBACEDIAEhAgNAIAMgB0cEQCAJQQA7AQAgAkEAOwEAIANBAWohAyAJIAZBAXQiAGohCSAAIAJqIQIMAQsLQQEgCyALQQFMGyESIAxBkIDQAGohDyAMQZCAyABqIQAgCCAGQQFqIgJqIQcgAiAEaiEOIAwoAgQgAmohDUEBIAogCkEBTBsiFEEBayEQIAEgAkEBdGohAkEAIAZrQQF0IRVBACEIQQEhEwJAA0AgEiATRwRAIA4gEGohFiAHIBBqIRFBASEJA0ACQAJAAkAgCSAURwRAIA4tAAAgBy0AAE0EQCANQf8BOgAAIAIgFWoiBC8BACIDwSIBQQBKBEAgAiABOwEAIANBHGwgD2oiA0EEayATNgIAIANBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAlqNgIAIANBFGsiASABKAIAIBNqNgIADAULIARBAmsvAQAiA8EhASAELgECIgRBAEoEQCABQQBKBEAgBEECdCAAakEEaygCACIBIANBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEKIAhBACAIQQBKGyELIAAhAwNAIAogC0YEQCAEIQEMCAsgASADKAIARgRAIAMgBDYCAAsgCkEBaiEKIANBBGohAwwACwALIAIgATsBACABIARODQVBACEKIAhBACAIQQBKGyELIAAhAwNAIAogC0YNBiAEIAMoAgBGBEAgAyABNgIACyAKQQFqIQogA0EEaiEDDAALAAsgAkECay4BACIDQQBKBEAgBEECdCAAakEEaygCACIBIANB//8DcUECdCAAakEEaygCACIESgRAIAIgBDsBAEEAIQogCEEAIAhBAEobIQsgACEDA0AgCiALRgRAIAQhAQwHCyABIAMoAgBGBEAgAyAENgIACyAKQQFqIQogA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBEEAIQogCEEAIAhBAEobIQsgACEDA0AgCiALRg0FIAQgAygCAEYEQCADIAE2AgALIApBAWohCiADQQRqIQMMAAsACyACIAQ7AQAgBEEcbCAPaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCACAJIANBEGsiASgCAEgEQCABIAk2AgALIANBBGsgEzYCAAwFCyABQQBKBEAgAiABOwEAIANBHGwgD2oiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgCWo2AgAgA0EUayIBIAEoAgAgE2o2AgAgCSADQQxrIgEoAgBKBEAgASAJNgIACyADQQRrIBM2AgAMBQsgAkECay8BACIDwSIBQQBKBEAgAiABOwEAIANBHGwgD2oiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgCWo2AgAgA0EUayIBIAEoAgAgE2o2AgAgA0EMayIBKAIAIAlODQUgASAJNgIADAULIAhBgIACTgRAQQBBA0H9g6WSAUEAEHhBfyEKDAkLIAIgCEEBaiIBOwEAIAAgCEECdGogAcE2AgAgDyAIQRxsaiIDIBM2AhggAyATNgIUIAMgCTYCECADIAk2AgwgAyATNgIIIAMgCTYCBCADQQE2AgAgASEIDAQLIAJBADsBACANQQA6AAAMAwsgDUECaiENIAJBBGohAiARQQJqIQcgFkECaiEOIBNBAWohEwwFCyABwUEcbCAPaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACAJajYCACADQRRrIgEgASgCACATajYCAAwBCyABwUEcbCAPaiIDQQRrIBM2AgAgA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgCWo2AgAgA0EUayIBIAEoAgAgE2o2AgALIA1BAWohDSACQQJqIQIgB0EBaiEHIA5BAWohDiAJQQFqIQkMAAsACwsgCEEAIAhBAEobQQFqIQJBASEDQQEhByAAIQkDQCACIANHBEACQCADIAkoAgAiAUYEQCAHIgpBAWohBwwBCyABQQJ0IABqQQRrKAIAIQoLIAkgCjYCACAJQQRqIQkgA0EBaiEDDAELCyAMIAdBAWsiCTYCCEEAIAlFDQEaIAxBjIAIaiEKIAxBDGpBACAJQQJ0EJcLIQsgDEGQgChqQQAgCUEEdBCXCyEHQQAhAwNAIAMgCU4EQEEAIQkgCEEAIAhBAEobIQQDQCAEIAlGBEBBACEKIAwoAggiAEEAIABBAEobIQBBACEDA0AgACADRg0FIAcgA0EEdGoiASABKwMAIAsgA0ECdGooAgC3IhejOQMAIAEgASsDCCAXozkDCCADQQFqIQMMAAsACyALIAAgCUECdGooAgBBAWsiAkECdCIDaiIBIAEoAgAgDyAJQRxsaiIFKAIAajYCACAHIAJBBHQiAWoiAiACKwMAIAUoAgS3oDkDACACIAIrAwggBSgCCLegOQMIIAUoAgwiAiABIApqIgEoAgBIBEAgASACNgIACyAFKAIQIgIgCiADQQJ0IgNBBHJqIgEoAgBKBEAgASACNgIACyAFKAIUIgIgCiADQQhyaiIBKAIASARAIAEgAjYCAAsgBSgCGCICIAogA0EMcmoiASgCAEoEQCABIAI2AgALIAlBAWohCQwACwAFIAogA0EEdGoiASAGNgIAIAFBADYCBCABIAU2AgggAUEANgIMIANBAWohAyAMKAIIIQkMAQsACwALIAoLDwsgBkUEQAJ/IAAhBEEAIQMgASIIQQAgAUEAShshACAHIgwoAgAiASACIgZBAWsiCSAIbEEBdGohCyABIQIDQCAAIANHBEAgC0EAOwEAIAJBADsBACADQQFqIQMgAkECaiECIAtBAmohCwwBCwsgBkEAIAZBAEobIQcgASAIQQFrIgpBAXRqIQtBACEDIAEhAgNAIAMgB0cEQCALQQA7AQAgAkEAOwEAIANBAWohAyALIAhBAXQiAGohCyAAIAJqIQIMAQsLQQEgCSAJQQFMGyEQIAxBkIDQAGohDSAMQZCAyABqIQAgBCAIQQFqIgJqIQcgDCgCBCACaiEOQQEgCiAKQQFMGyISQQFrIRQgASACQQF0aiECQQAgCGtBAXQhFUEAIQpBASEPAkADQCAPIBBHBEAgByAUaiEWQQEhCwNAAkACQAJAIAsgEkcEQCAFIActAABOBEAgDkH/AToAACACIBVqIgQvAQAiA8EiAUEASgRAIAIgATsBACADQRxsIA1qIgNBBGsgDzYCACADQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCAAwFCyAEQQJrLwEAIgPBIQEgBC4BAiIEQQBKBEAgAUEASgRAIARBAnQgAGpBBGsoAgAiASADQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGBEAgBCEBDAgLIAEgAygCAEYEQCADIAQ2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAE7AQAgASAETg0FQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGDQYgBCADKAIARgRAIAMgATYCAAsgCUEBaiEJIANBBGohAwwACwALIAJBAmsuAQAiA0EASgRAIARBAnQgAGpBBGsoAgAiASADQf//A3FBAnQgAGpBBGsoAgAiBEoEQCACIAQ7AQBBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYEQCAEIQEMBwsgASADKAIARgRAIAMgBDYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgATsBACABIARODQRBACEJIApBACAKQQBKGyERIAAhAwNAIAkgEUYNBSAEIAMoAgBGBEAgAyABNgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiAEOwEAIARBHGwgDWoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgD2o2AgAgCyADQRBrIgEoAgBIBEAgASALNgIACyADQQRrIA82AgAMBQsgAUEASgRAIAIgATsBACADQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIAIAsgA0EMayIBKAIASgRAIAEgCzYCAAsgA0EEayAPNgIADAULIAJBAmsvAQAiA8EiAUEASgRAIAIgATsBACADQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIAIANBDGsiASgCACALTg0FIAEgCzYCAAwFCyAKQYCAAk4EQEEAQQNB/YOlkgFBABB4QX8hCQwJCyACIApBAWoiATsBACAAIApBAnRqIAHBNgIAIA0gCkEcbGoiAyAPNgIYIAMgDzYCFCADIAs2AhAgAyALNgIMIAMgDzYCCCADIAs2AgQgA0EBNgIAIAEhCgwECyACQQA7AQAgDkEAOgAADAMLIA5BAmohDiACQQRqIQIgFkECaiEHIA9BAWohDwwFCyABwUEcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCAAwBCyABwUEcbCANaiIDQQRrIA82AgAgA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIBIAEoAgAgD2o2AgALIA5BAWohDiACQQJqIQIgB0EBaiEHIAtBAWohCwwACwALCyAKQQAgCkEAShtBAWohAkEBIQNBASEHIAAhCwNAIAIgA0cEQAJAIAMgCygCACIBRgRAIAciCUEBaiEHDAELIAFBAnQgAGpBBGso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ACEDA0AgCSARRgRAIAQhAQwICyABIAMoAgBGBEAgAyAENgIACyAJQQFqIQkgA0EEaiEDDAALAAsgAiABOwEAIAEgBE4NBUEAIQkgCkEAIApBAEobIREgACEDA0AgCSARRg0GIAQgAygCAEYEQCADIAE2AgALIAlBAWohCSADQQRqIQMMAAsACyACQQJrLgEAIgNBAEoEQCAEQQJ0IABqQQRrKAIAIgEgA0H//wNxQQJ0IABqQQRrKAIAIgRKBEAgAiAEOwEAQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGBEAgBCEBDAcLIAEgAygCAEYEQCADIAQ2AgALIAlBAWohCSADQQRqIQMMAAsACyACIAE7AQAgASAETg0EQQAhCSAKQQAgCkEAShshESAAIQMDQCAJIBFGDQUgBCADKAIARgRAIAMgATYCAAsgCUEBaiEJIANBBGohAwwACwALIAIgBDsBACAEQRxsIA1qIgNBHGsiASABKAIAQQFqNgIAIANBGGsiASABKAIAIAtqNgIAIANBFGsiASABKAIAIA9qNgIAIAsgA0EQayIBKAIASARAIAEgCzYCAAsgA0EEayAPNgIADAULIAFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCACALIANBDGsiASgCAEoEQCABIAs2AgALIANBBGsgDzYCAAwFCyACQQJrLwEAIgPBIgFBAEoEQCACIAE7AQAgA0EcbCANaiIDQRxrIgEgASgCAEEBajYCACADQRhrIgEgASgCACALajYCACADQRRrIgEgASgCACAPajYCACADQQxrIgEoAgAgC04NBSABIAs2AgAMBQsgCkGAgAJOBEBBAEEDQf2DpZIBQQAQeEF/IQkMCQsgAiAKQQFqIgE7AQAgACAKQQJ0aiABwTYCACANIApBHGxqIgMgDzYCGCADIA82AhQgAyALNgIQIAMgCzYCDCADIA82AgggAyALNgIEIANBATYCACABIQoMBAsgAkEAOwEAIA5BADoAAAwDCyAOQQJqIQ4gAkEEaiECIBZBAmohByAPQQFqIQ8MBQsgAcFBHGwgDWoiA0EcayIBIAEoAgBBAWo2AgAgA0EYayIBIAEoAgAgC2o2AgAgA0EUayIB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ASABGyKTAaIgigEgggEgARsihAEghwEgjgEgARsikgGioSGNASCLASCKASABGyGCASCOASCGASABGyGDASCPAUQAAAAAAAAAAGELIQMgjQFEAAAAAAAAAABhDQMgkgEgggGiIIMBIIwBoqEgjQGjIooBIIcBIIUBoiCGASCJAaIgiAEgjgGioKAiiwGaIIsBIIsBRAAAAAAAAAAAYxsiiwFEAAAAAAAA8D+gn0QAAAAAAADwPyCLAaGfoEQAAAAAAADgP6IimQEgjAGiII0BoyKPAaIgmQEghAGiIIQBIJIBoiCMASCTAaKhIosBoyKRASCTASCCAaIggwEghAGioSCLAaMigwGioCKQASCQAaIgjwEgjwGiIJEBIJEBoqBEAAAAAAAA8L+gIIoBIIoBoiCDASCDAaKgRAAAAAAAAPA/oCKNAaKhIosBRAAAAAAAAAAAYw0DIIMBIJABmiCLAZ8ilQGhII0BoyKSAaIgkQGgIZMBIIoBIJIBoiCPAaAhiwEggwEglQEgkAGhII0BoyKDAaIgkQGgIZABIIoBIIMBoiCPAaAhigECfCABBEAgjAEhjQEgggEhjAEghAEhggEgigEhjwEggwEhkQEgkAEhigEgiwEhkAEgkwEhiwEgkgEMAQsgA0UEQCCCASGNASCEASGCASCKASGPASCQASGRASCDASGKASCLASGQASCSASGLASCTAQwBCyCEASGNASCDASGPASCQASGRASCSASGQASCTAQshlQFBACEBAn8gjAEgiQGiIIIBIIgBoqEilAFEAAAAAAAAAABiBEAghQEhkgEgiAEhkwEgiQEhmgEgjAEhhAEgggEhgwFBAAwBCyCNASCMASCNASCJAaIgggEghQGioSKbAUQAAAAAAAAAAGIiARsihAEgiQEghQEgARsimgGiIIIBII0BIAEbIoMBIIUBIIgBIAEbIpMBoqEhlAEgjAEgggEgARshjQEgiAEgiQEgARshkgEgmwFEAAAAAAAAAABhCyEDIJQBRAAAAAAAAAAAYQ0DIJMBII0BoiCSASCEAaKhIJQBoyKMASCZASCEAaIglAGjIpQBoiCZASCDAaIggwEgkwGiIIQBIJoBoqEiggGjIoQBIJoBII0BoiCSASCDAaKhIIIBoyKCAaKgIo0BII0BoiCUASCUAaIghAEghAGioEQAAAAAAADwv6Ag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IAEgAjYCCCAAKAIIIQIgACABKAIMNgIIIAEgAjYCDCABIAEoAgQ2AgALCQAgAEEEEJ4NCxoAIABBgICAgARPBEAQkQEACyAAQQJ0EJsKCz0BAX8gACgCBCICIAFBDGxqIQEDQCABIAJGBEAgACABNgIEBSACQQA2AgggAkIANwIAIAJBDGohAgwBCwsLQQEBfyABQdaq1aoBTwRAELMBAAtB1arVqgEgACgCCCAAKAIAa0EMbSIAQQF0IgIgASABIAJJGyAAQarVqtUATxsLPQEBfyAAKAIIIgIgAUEMbGohAQNAIAEgAkZFBEAgAkEANgIIIAJCADcCACACQQxqIQIMAQsLIAAgATYCCAuNAQEDfyAAKAIEIQMgACgCACEEIAEoAgQhAgNAIAMgBEcEQCACQQxrIANBDGsiAxDAASECDAELCyABIAI2AgQgACgCACEDIAAgAjYCACABIAM2AgQgACgCBCECIAAgASgCCDYCBCABIAI2AgggACgCCCECIAAgASgCDDYCCCABIAI2AgwgASABKAIENgIACz4AIABBADYCCCAAQgA3AgAgACABKAIANgIAIAAgASgCBDYCBCAAIAEoAgg2AgggAUEANgIIIAFCADcCACAACz4BAX8gAUHI4/E4TwRAELMBAAtBx+PxOCAAKAIIIAAoAgBrQSRtIgBBAXQiAiABIAEgAkkbIABB4/G4HE8bC0oBAX8gAEEANgIMIAAgAzYCECABBEAgARDFASEECyAAIAQ2AgAgACAEIAJBA3RqIgI2AgggACAEIAFBA3RqNgIMIAAgAjYCBCAAC5EBAQN/IAEoAgQhAiAAKAIAIQQgACgCBCEDA0AgAyAERkUEQCACQQhrIgIgA0EIayIDKQIANwIADAELCyABIAI2AgQgACgCACEDIAAgAjYCACABIAM2AgQgACgCBCECIAAgASgCCDYCBCABIAI2AgggACgCCCECIAAgASgCDDYCCCABIAI2AgwgASABKAIENgIACwkAIABBCBCeDQsaACAAQYCAgIACTwRAEJEBAAsgAEEDdBCbCgswAQJ9An9BASAAKgIAIgIgASoCACIDXQ0AGkEAIAIgA14NABogACgCBCABKAIESQsLvgICAn8BfSAAIAEQxgEhAyABIAIQxgEhBAJAAn8CfyADRQRAQQAhAyAERQ0DIAEqAgAhBSAB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AAuJAQECfyMAQSBrIgIjBEsgAiMFSXIEQCACEEkLIAIkAAJAIAEgACgCCCAAKAIAIgNrQQN1SwRAIAFBgICAgAJPDQEgACACQQxqIAEgACgCBCADa0EDdSAAQQhqEMIBIgAQuQEgABDEAQsgAkEgaiIAIwRLIAAjBUlyBEAgABBJCyAAJAAPCxDnAQALMAEBfyAAKAIEIgIgACgCCEkEQCACIAEpAgA3AgAgACACQQhqNgIEDwsgACABEIsCC5wBAQJ/IwBBEGsiAiMESyACIwVJcgRAIAIQSQsgAiQAIABBADYCCCAAQgA3AgAgAiAANgIIIAEEQCABQYCAgIAETwRAELMBAAsgACABELsBIgM2AgQgACADNgIAIAAgAyABQQJ0ajYCCCAAIAEQtgELIAJBAToADCACQQhqEOsBIAJBEGoiASMESyABIwVJcgRAIAEQSQsgASQAIAALMAEBfyAAKAIEIgIgACgCCEcEQCACIAEpAgA3AgAgACACQQhqNgIEDwsgACABEIsCC6IBAQJ/IwBBEGsiAiMESyACIwVJcgRAIAIQSQsgAiQAIABBADYCCCAAQgA3AgAgAiAANgIIIAEEQCABQYCAgIACTwRAQfSXppIBEJABAAsgACABEMUBIgM2AgQgACADNgIAIAAgAyABQQN0ajYCCCAAIAEQ5QELIAJBAToADCACQQhqEOsBIAJBEGoiASMESyABIwVJcgRAIAEQSQsgASQAIAALWQEBfSAAIAIqAgggAioCACADlCACKgIEIASUkpIgAioCICACKgIYIAOUIAIqAhwgBJSSkiIFlTgCACABIAIqAhQgAioCDCADlCACKgIQIASUkpIgBZU4AgALtwIBAX8gAiABEJECIgKLYCIDRQRAIABDAACAPyAClSICIAEqAhAgASoCIJQgASoCHCABKgIUlJOUOAIAIAAgAiABKgIIIAEqAhyUIAEqAiAgASoCBJSTlDgCBCAAIAIgASoCBCABKgIUlCABKgIQIAEqAgiUk5Q4AgggACACIAEqAhQgASoCGJQgASoCICABKgIMlJOUOAIMIAAgAiABKgIAIAEqAiCUIAEqAhggASoCCJSTlDgCECAAIAIgASoCCCABKgIMlCABKgIUIAEqAgCUk5Q4AhQgACACIAEqAgwgASoCHJQgASoCGCABKgIQlJOUOAIYIAAgAiABKgIEIAEqAhiUIAEqAhwgASoCAJSTlDgCHCAAIAIgASoCACABKgIQlCABKgIMIAEqAgSUk5Q4AiALIANFC6ECAgp/AX4gACgCACEEIAAoAgQhBSMAQRBrIgYjBEsgBiMFSXIEQCAGEEkLIAYkACAFIARrQQN1IghBAk8EQAJAIAQpAgAhCyAEIQEgCEECa0EBdiEJA0AgAkEBdCIKQQFyIQcgASACQQFqQQN0aiEDAkAgCCAKQQJqIgJMBEAgByECDAELIAIgByADKAIEIAMoAgxLIgcbIQIgA0EIaiADIAcbIQMLIAEgAykCADcCACADIQEgAiAJTA0ACyAFQQhrIgUgAUYEQCABIAs3AgAMAQsgASAFKQIANwIAIAUgCzcCACAEIAFBCGoiASABIARrQQN1EIwCCwsgBkEQaiIBIwRLIAEjBUlyBEAgARBJCyABJAAgACAAKAIEQQhrNgIEC9oMAQt/IwBBEGsiCSMESyAJIwVJcgRAIAkQSQsgCSQAAkAgAi0AZARAIAAoAkwhAyACKAJ0IQQgAigCeCECIwBBIGsiCyIBIwRLIAEjBUlyBEAgARBJCyAAQcgAaiEAIAEkAAJAIAIgBGsiAUEATA0AIAFBAnUiByAAKAIIIAAoAgQiBWtBAnVMBEACQCAFIANrIg1BAnUiASAHTgRAIAIhAQwBCyAEIAFBAnRqIgEhBiAAKAIEIQgDQCACIAZHBEAgCCAGKAIANgIAIAhBBGohCCAGQQRqIQYMAQsLIAAgCDYCBCANQQBMDQILIAAoAgQiCCECIAMgCCADIAdBAnRqa2oiByEGA0AgBSAGTQRAIAAgAjYCBCADIAdHBEAgCCAHIANrIgBrIAMgABCYCxoLBSACIAYoAgA2AgAgAkEEaiECIAZBBGohBgwBCwsgASAERg0BIAMgBCABIARrEJgLGgwBCyALQQxqIAAgBSAAKAIAa0ECdSAHahDvASADIAAoAgBrQQJ1IABBCGoQtwEiASgCCCIHIAIgBGtqIQIDQCACIAdHBEAgByAEKAIANgIAIARBBGohBCAHQQRqIQcMAQsLIAEgAjYCCCABIAEoAgQgAyAAKAIAIgJrIgZrIAIgBhCYCzYCBCABIAEoAgggAyAAKAIEIANrIgIQmAsgAmo2AgggACgCACECIAAgASgCBDYCACABIAI2AgQgACgCBCECIAAgASgCCDYCBCABIAI2AgggACgCCCECIAAgASgCDDYCCCABIAI2AgwgASABKAIENgIAIAEQugELIAtBIGoiACMESyAAIwVJcgRAIAAQSQsgACQADAELIAlBADYCDCAJQgA3AgQjAEEQayINIgYjBEsgBiMFSXIEQCAGEEkLIAYkAEF/IQggAigCbCACKAJoa0ECdSEFIwBBEGsiBCMESyAEIwVJcgRAIAQQSQsgBCQAIA1BBGoiBkEANgIIIAZCADcCACAEIAY2AgggBQRAIAVBgICAgAJPBEAQ5wEACyAGIAUQxQEiDDYCBCAGIAw2AgAgBiAMIAVBA3RqNgIIIAYgBRDlAQsgBEEBOgAMIARBCGoQ6wEgBEEQaiIEIwRLIAQjBUlyBEAgBBBJCyAJQQRqIQwgBCQAQX8hBAJAA0AgBigCBCAGKAIAa0EDdSAHTQRAIAhBf0cEQCAMIAIoAmggCEECdGoQ+AFBACEHA0AgByAGKAIEIAYoAgAiBWtBA3VPDQQCQCAHIAhGDQAgBSAHQQN0aiIEKAIEIAUgCEEDdGooAgRGBEAgDCACKAJoIAdBAnRqEPgBDAELAkAgASgCBCIFIAEoAghHBEAgBSAEKQIANwIAIAEgBUEIajYCBAwBCyMAQSBrIgoiBSMESyAFIwVJcgRAIAUQSQsgBSQAIApBDGogASABKAIEIAEoAgBrQQN1QQFqEOYBIAEoAgQgASgCAGtBA3UgAUEIahDCASIFKAIIIAQpAgA3AgAgBSAFKAIIQQhqNgIIIAEgBRDDASAFEMQBIApBIGoiBCMESyAEIwVJcgRAIAQQSQsgBCQACyABKAIAIQUgASgCBCEKIwBBEGsiBCMESyAEIwVJcgRAIAQQSQsgBCQAIAUgCiAKIAVrQQN1EIwCIARBEGoiBCMESyAEIwVJcgRAIAQQSQsgBCQACyAHQQFqIQcMAAsACwUgB0ECdCIKIAIoAmhqKAIAQQRqIAMQ/AEhBSACKAJoIApqKAIAIQogBigCACAHQQN0aiIOIAU2AgQgDiAKNgIAIAUgBCAEIAVLIgUbIQQgByAIIAUbIQggB0EBaiEHDAELC0G8ja6SAUGlpqaSARCJAUGH9KWSARCJAUG4x6WSARCJAUGbARDgBkHXy6WSARCJAUH9pqaSARCJARCiARAJAAsgBhCGARogDUEQaiICIwRLIAIjBUlyBEAgAhBJCyACJAADQCAJKAIIIAkoAgQiAmtBAnUgC00EQAJAIAAoAmQgACgCaE4NACABKAIAIgIgASgCBEYNACACKAIAIQIgARCJAiAAIAAoAmRBAWo2AmQgACABIAIgAxCKAgsgCUEEahCGARoFIAAgASACIAtBAnRqKAIAIAMQigIgC0EBaiELDAELCwsgCUEQaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALkwEBAn8jAEEgayIDIgIjBEsgAiMFSXIEQCACEEkLIAIkACADQQxqIAAgACgCBCAAKAIAa0EDdUEBahDmASAAKAIEIAAoAgBrQQN1IABBCGoQwgEiAigCCCABKQIANwIAIAIgAigCCEEIajYCCCAAIAIQuQEgAhDEASADQSBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAt8AgF+AX8CQCACQQJIDQAgACACQQJrQQF2IgJBA3RqKAIEIAFBBGsoAgBNDQAgAUEIayIBKQIAIgNCIIinIQQDQAJAIAEgACACQQN0aiIBKQIANwIAIAJFDQAgACACQQFrQQF2IgJBA3RqKAIEIARLDQELCyABIAM3AgALC2kBAn0gACABKgIIIAEqAgAgAioCACIDlCACKgIEIgQgASoCBJSSkiABKgIgIAEqAhggA5QgASoCHCAElJKSIgOVOAIAIAAgASoCFCABKgIMIAIqAgCUIAEqAhAgAioCBJSSkiADlTgCBAsxAQJ9IAEqAgAgACoCACIDkyACKgIEIAAqAgQiBJOUIAIqAgAgA5MgASoCBCAEk5STC9gCAQp9IAUgBioCACAHKgIAkiAIKgIAkiAJKgIAkkMAAIA+lCIKOAIAIAUgBioCBCAHKgIEkiAIKgIEkiAJKgIEkkMAAIA+lCILOAIEIAYqAgAgCpMiDCAMlCAGKgIEIAuTIg0gDZSSkSAHKgIAIAqTIg4gDpQgByoCBCALkyIPIA+UkpGSIAgqAgAgCpMiECAQlCAIKgIEIAuTIhEgEZSSkZIgCSoCACAKkyIKIAqUIAkqAgQgC5MiCyALlJKRkkMAAIA+lCISQwAAAABcBEAgBEMAAIA/IBKVu0TNO39mnqD2P6K2IhM4AgAgACAMIBOUOAIAIAAgDSAEKgIAlDgCBCABIA4gBCoCAJQ4AgAgASAPIAQqAgCUOAIEIAIgECAEKgIAlDgCACACIBEgBCoCAJQ4AgQgAyAKIAQqAgCUOAIAIAMgCyAEKgIAlDgCBAsgEkMAAAAAXAsiACAAIAEgAhCOAkMAAAAAXiADIAQgBRCOAkMAAAAAXnNFC1cBBH0gACoCCCAAKgIMIgMgACoCHCIBlCAAKgIYIgQgACoCECIClJOUIAAqAgAgAiAAKgIgIgKUIAEgACoCFCIBlJOUIAMgApQgBCABlJMgACoCBJSTkgvCAQEBfSAAIAEqAgCMOAIAIAEqAgQhAyAAQgA3AgwgAEGAgID8ezYCCCAAQQA2AhQgACADjDgCBCAAIAIqAgAgASoCAJQ4AhggACACKgIAIAEqAgSUOAIcIAIqAgAhAyAAQgA3AiQgACADOAIgIABBADYCLCAAIAEqAgCMOAIwIAEqAgQhAyAAQYCAgPx7NgI4IAAgA4w4AjQgACACKgIEIAEqAgCUOAI8IAAgAioCBCABKgIElDgCQCAAIAIqAgQ4AkQLCQAgACAAEJgCC9wBAQF9IAAqAgAhAiAAIAEqAgA4AgAgASACOAIAIAAqAgQhAiAAIAEqAgQ4AgQgASACOAIEIAAqAgghAiAAIAEqAgg4AgggASACOAIIIAAqAgwhAiAAIAEqAgw4AgwgASACOAIMIAAqAhAhAiAAIAEqAhA4AhAgASACOAIQIAAqAhQhAiAAIAEqAhQ4AhQgASACOAIUIAAqAhghAiAAIAEqAhg4AhggASACOAIYIAAqAhwhAiAAIAEqAhw4AhwgASACOAIcIAAqAiAhAiAAIAEqAiA4AiAgASACOAIgC3cAIAAgASoCACAClDgCACAAIAEqAgQgApQ4AgQgACABKgIIIAKUOAIIIAAgASoCDCAClDgCDCAAIAEqAhAgApQ4AhAgACABKgIUIAKUOAIUIAAgASoCGCAClDgCGCAAIAEqAhwgApQ4AhwgACABKgIgIAKUOAIgC7gBAQF9IAIgARCYAiEDIAAgACoCACADIAEqAgCUkzgCACAAIAAqAgQgAyABKgIElJM4AgQgACAAKgIIIAMgASoCCJSTOAIIIAAgACoCDCADIAEqAgyUkzgCDCAAIAAqAhAgAyABKgIQlJM4AhAgACAAKgIUIAMgASoCFJSTOAIUIAAgACoCGCADIAEqAhiUkzgCGCAAIAAqAhwgAyABKgIclJM4AhwgACAAKgIgIAMgASoCIJSTOAIgC9ABAgF/An0gACABIAEgAkECdCIDaiICKgIAjBCVAiAAIANqIgMgAyoCAEMAAIA/kjgCACAAIAFBJGogAioCJIwQmQIgACABQcgAaiACKgJIjBCZAiAAIAFB7ABqIAIqAmyMEJkCIAAgAUGQAWogAioCkAGMEJkCIAAgAUG0AWogAioCtAGMEJkCIAAgAUHYAWogAioC2AGMEJkCIAAgAUH8AWogAioC/AGMEJkCIAAQkwIiBUMAAAAAXARAIAAgAEMAAIA/IAWRIgSVEJUCCyAEC20AIAAqAiAgASoCIJQgACoCHCABKgIclCAAKgIYIAEqAhiUIAAqAhQgASoCFJQgACoCECABKgIQlCAAKgIMIAEqAgyUIAAqAgggASoCCJQgACoCACABKgIAlCAAKgIEIAEqAgSUkpKSkpKSkpILrQEAIAAgASoCACAClCAAKgIAkjgCACAAIAEqAgQgApQgACoCBJI4AgQgACABKgIIIAKUIAAqAgiSOAIIIAAgASoCDCAClCAAKgIMkjgCDCAAIAEqAhAgApQgACoCEJI4AhAgACABKgIUIAKUIAAqAhSSOAIUIAAgASoCGCAClCAAKgIYkjgCGCAAIAEqAhwgApQgACoCHJI4AhwgACABKgIgIAKUIAAqAiCSOAIgC04BAn8gACgCDARAIAAoAggQngIgAEEANgIIIAAoAgQhAgNAIAEgAkYEQCAAQQA2AgwFIAAoAgAgAUECdGpBADYCACABQQFqIQEMAQsLCwvOBQEDfwJAAkACQAJAAkACQAJAAkACQCABQQBOBEAgACgCNCIFIAFMDQEgAkEASA0CIAAoAjgiBiACTA0DIANBAEgNBCAAKAI8IgcgA0wNBSAEQQBIDQYgACgCQCAETA0HIAIgBWwgAWoiASAAKAJUIANsaiAAKAJYIARsaiIAIAQgB2wgA2ogBSAGbGwgAWpKDQggAA8LQbyNrpIBQdX3pZIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQaUBEOAGQcyVpZIBEIkBQZz5pZIBEIkBEKIBDAgLQbyNrpIBQYH7pZIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQaYBEOAGQcyVpZIBEIkBQZz5pZIBEIkBEKIBDAcLQbyNrpIBQar9pZIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQacBEOAGQcyVpZIBEIkBQfb9pZIBEIkBEKIBDAYLQbyNrpIBQbaAppIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQagBEOAGQcyVpZIBEIkBQfb9pZIBEIkBEKIBDAULQbyNrpIBQeWCppIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQakBEOAGQcyVpZIBEIkBQdmEppIBEIkBEKIBDAQLQbyNrpIBQZeGppIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQaoBEOAGQcyVpZIBEIkBQdmEppIBEIkBEKIBDAMLQbyNrpIBQZGJppIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQasBEOAGQcyVpZIBEIkBQaOKppIBEIkBEKIBDAILQbyNrpIBQeeLppIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQawBEOAGQcyVpZIBEIkBQaOKppIBEIkBEKIBDAELQbyNrpIBQZiPppIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQbABEOAGQcyVpZIBEIkBQdD1pZIBEIkBEKIBCxAJAAuuBwIKfwJ9IwBBEGsiBiMESyAGIwVJcgRAIAYQSQsgBiQAIAFBAE4EQCAGIAE2AggCQCAAQdwAaiIEIAZBCGoQ1gEiAEUEQCAGQQE2AgwgBiABNgIIIwBBEGsiByMESyAHIwVJcgRAIAcQSQsgByQAQQAhASMAQRBrIgUiACMESyAAIwVJcgRAIAAQSQsgACQAIAZBCGoiCSgCACEAIAcCfwJAIAQoAgQiAkUNACAEKAIAAn8gAkEBayAAcSACaSIIQQFNDQAaIAAgACACSQ0AGiAAIAJwCyIBQQJ0aigCACIDRQ0AIAJBAWshCiAIQQFLIQsDQCADKAIAIgNFDQEgACADKAIEIghHBEACQCALRQRAIAggCnEhCAwBCyACIAhLDQAgCCACcCEICyABIAhHDQILIAMoAgggAEcNAAtBAAwBC0EQEJsKIQMgBSAEQQhqNgIIIAUgAzYCBCADIAkoAgA2AgggAyAJKAIENgIMIAVBAToADCADQQA2AgAgAyAANgIEAkBBACACIAQoAgxBAWqzIgwgBCoCECINIAKzlF4bDQAgBCACIAJBAWtxQQBHIAJBA0lyIAJBAXRyIgECfyAMIA2VjSIMQwAAgE9dIAxDAAAAAGBxBEAgDKkMAQtBAAsiAiABIAJLGxDsASAEKAIEIgIgAkEBa3FFBEAgAkEBayAAcSEBDAELIAAgAkkEQCAAIQEMAQsgACACcCEBCwJAIAFBAnQiASAEKAIAaigCACIARQRAIAUoAgQgBCgCCDYCACAEIAUoAgQ2AgggBCgCACABaiAEQQhqNgIAIAUoAgQiACgCACIBRQ0BIAEoAgQhAwJAIAIgAkEBayIBcUUEQCABIANxIQMMAQsgAiADSw0AIAMgAnAhAwsgBCgCACADQQJ0aiAANgIADAELIAUoAgQgACgCADYCACAAIAUoAgQ2AgALIAUoAgQhAyAFQQA2AgQgBCAEKAIMQQFqNgIMIAVBBGoQnQJBAQs6AAwgByADNgIIIAVBEGoiACMESyAAIwVJcgRAIAAQSQsgACQAIAYgBygCCDYCACAGIActAAw6AAQgB0EQaiIAIwRLIAAjBUlyBEAgABBJCyAAJAAMAQsgACAAKAIMQQFqNgIMCyAGQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAA8LQbyNrpIBQY7zpZIBEIkBQdHvpZIBEIkBQZGRpZIBEIkBQaICEOAGQcyVpZIBEIkBQdD1pZIBEIkBEKIBEAkACwkAIABBABDtAQseAQF/A0AgAARAIAAoAgAhASAAEJkLIAEhAAwBCwsL+wIBB38jAEEQayIGIwRLIAYjBUlyBEAgBhBJCyAGJAAgACgCACECIAZBADoADyAGQQ9qIQgCQCAAQQRqIgMoAgQgAygCACIEayIFIAEgAmwiAkkEQCACIAVrIQQjAEEgayIFIwRLIAUjBUlyBEAgBRBJCyAFJAACQCAEIAMoAgggAygCBCICa00EQCAEIAMoAgQiAmohBANAIAIgBEYEQCADIAQ2AgQFIAIgCC0AADoAACACQQFqIQIMAQsLDAELIAQgBUEMaiADIAIgBGogAygCAGsQnAEgAygCBCADKAIAayADQQhqEJ0BIgcoAggiAmohBANAIAIgBEcEQCACIAgtAAA6AAAgAkEBaiECDAELCyAHIAQ2AgggAyAHEJ4BIAcQnwELIAVBIGoiAyMESyADIwVJcgRAIAMQSQsgAyQADAELIAIgBUkEQCADIAIgBGo2AgQLCyAAQRBqIAEQ2QEgBkEQaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALhAQCAn8BfSABAn8gAxDDBUMYcjE/lY4iBotDAAAAT10EQCAGqAwBC0GAgICAeAsiBDYCACACAn8gACoCHCADQQEgBHSylRDDBZRDAAAAP5KOIgOLQwAAAE9dBEAgA6gMAQtBgICAgHgLIgQ2AgAgBCAAKAIUQQFrRgRAIAEgASgCAEEBajYCACACQQA2AgBBACEECwJAIAICfyABKAIAIgJBAEgEQCABQQA2AgBBAAwBCyACIAAoAhAiBUgNASABIAVBAWs2AgAgACgCFEEBawsiBDYCAAsCQAJAAkAgASgCACIBQQBOBEAgASAAKAIQTg0BIARBAEgNAiAEIAAoAhRODQMPC0G8ja6SAUHGwaWSARCJAUGCxaWSARCJAUGulaWSARCJAUGMAhDgBkG0mqWSARCJAUHryaWSARCJARCiARAJAAtBvI2ukgFBjs6lkgEQiQFBgsWlkgEQiQFBrpWlkgEQiQFBjQIQ4AZBtJqlkgEQiQFB4N2lkgEQiQEQogEQCQALQbyNrpIBQbTjpZIBEIkBQYLFpZIBEIkBQa6VpZIBEIkBQY4CEOAGQbSapZIBEIkBQfTkpZIBEIkBEKIBEAkAC0G8ja6SAUHE6aWSARCJAUGCxaWSARCJAUGulaWSARCJAUGPAhDgBkG0mqWSARCJAUHW6qWSARCJARCiARAJAAucAQECfSAAIAMgBBCgASEAIAFDAACAP0EBIAN0spUiAZQgAUMAAAA/lEMAAAC/kiIGkiEFIAIgAZQgBpIhBkMAAAAAIQFDAAAAACECAkAgBUMAAAAAXQ0AIAUiAiAAKAIEQQJrsyIFXkUNACAFIQILAkAgBkMAAAAAXQ0AIAYiASAAKAIIQQJrsyIFXkUNACAFIQELIAAgAiABEK4BC+YCAQV/IwBBkAJrIgEjBEsgASMFSXIEQCABEEkLIAEkACABQYgCaiICEJcFGiABQYACQbqApZIBAn9B4OStkgEtAABBAXFFBEBB4OStkgEtAABBAXFFBEBBhOStkgFBiOStkgFBjOStkgEQJ0Hg5K2SAUEBOgAACwsgAkHA7a2SARAoAkACQAJAQdzdpRIsAAAiAkEAIAJBA0wbRQRAQeDtrZIBKAIAIQJBwdylEiwAACIDQQAgA0EHTBsNAUGM5K2SASgCACEDQcLcpRIsAAAiBEEAIARBA0wbDQJBkOStkgEoAgAhBEHd3aUSLAAAIgVBACAFQQNMGw0DQejtrZIBIAQgAyACGzYCAEHA7a2SAQwEC0Hg7a2SARC0CwALQYzkrZIBELQLAAtBkOStkgEQtAsAC0Ho7a2SARC5CwALEAoaIAAgARDNARogAUGQAmoiACMESyAAIwVJcgRAIAAQSQsgACQACyAAIABCADcCACAAQgA3AhggAEIANwIQIABCADcCCCAAC9MEAQZ/AkACQAJAIAIEQCADRQ0BIARFDQIgACABEKUCIAIgBGxsIgU2AgwgAyAFbCIKIAAoAhRHBEAgChCbCiEFIwBBEGsiByMESyAHIwVJcgRAIAcQSQsgByQAIAdBCGohCCMAQRBrIgYjBEsgBiMFSXIEQCAGEEkLIAYkACAIIAU2AgBBEBCbCiIJIAU2AgwgCUH0yKaSATYCACAJQgA3AgQgCCAJNgIEIAZBADYCDCAGQQxqEJ0CIAZBEGoiBSMESyAFIwVJcgRAIAUQSQsgBSQAIAgiBSgCACEGIAUgACgCGDYCACAAIAY2AhggBSgCBCEGIAUgACgCHDYCBCAAIAY2AhwgBRDcARogB0EQaiIFIwRLIAUjBUlyBEAgBRBJCyAFJAAgACgCGEUNBAsgACAKNgIUIAAgBDYCECAAIAM2AgggACACNgIEIAAgATYCAA8LQbyNrpIBQb+BpZIBEIkBQZKKpZIBEIkBQZGRpZIBEIkBQf8AEOAGQcyVpZIBEIkBQYmYpZIBEIkBEKIBEAkAC0G8ja6SAUHMn6WSARCJAUGSiqWSARCJAUGRkaWSARCJAUGAARDgBkHMlaWSARCJAUHLo6WSARCJARCiARAJAAtBvI2ukgFB6LalkgEQiQFBkoqlkgEQiQFBkZGlkgEQiQFBggEQ4AZBzJWlkgEQiQFBh7qlkgEQiQEQogEQCQALQbyNrpIBQbrCpZIBEIkBQZKKpZIBEIkBQZGRpZIBEIkBQZYBEOAGQcyVpZIBEIkBQaPGpZIBEIkBEKIBEAkAC3QBAX8jAEEQayIBIwRLIAEjBUlyBEAgARBJCyABJAACQAJAAkAgAEEBaw4CAgEAC0EQEKwKIAFBBGpBzM2lkgEQzQEQzgFBiMCmkgFBDhAIAAtBBCEACyABQRBqIgEjBEsgASMFSXIEQCABEEkLIAEkACAAC24AIABBATYCECAAIAQ2AgggACADNgIEIAAgAjYCACAAIAQgBWw2AhQgACABNgIYQRAQmwoiBCABNgIMIARB6MemkgE2AgAgBEIANwIEIAAgBDYCHCAAIAVBAEgEfyACEKUCIANsBSAFCzYCDCAACw0AIABBGGoQ3AEaIAALAwABCxYAIABBDGpBACABKAIEQdTIppIBRhsLCgAgACgCDBCZCwsWACAAQQxqQQAgASgCBEH8yaaSAUYbC4QCAQN/IwBBIGsiAyMESyADIwVJcgRAIAMQSQsgAyQAIAMgAjYCHCADQRBqIQIgA0EEaiABEM0BIQUgAygCHCEEIwBBgBBrIgEjBEsgASMFSXIEQCABEEkLIAEkACABQYAQIAUoAgAgBSAFLAALQQBIGyAEEP8FGiACIAEQzQEaIAFBgBBqIgEjBEsgASMFSXIEQCABEEkLIAEkAEEAIQEDQCABIAAoAgQgACgCACIEa0EDdUkEQCAEIAFBA3RqKAIAIgRBCCACIAQoAgAoAggRBQAgAUEBaiEBDAELCyACEJ8KGiAFEJ8KGiADQSBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAsEACAAC4YBACAAQoCAgICAgID4v383AwggAEKAgICAgICA+L9/NwMAIABBEGogARDNARojAEEQayIBIwRLIAEjBUlyBEAgARBJCyABJAAgARCZBSAAIAEoAgi3RI3ttaD3xrA+oiABKQMAuaA5AwAgAUEQaiIBIwRLIAEjBUlyBEAgARBJCyABJAAgAAukBAIHfwJ8IwBBMGsiAiMESyACIwVJcgRAIAIQSQsgAiQAIwBBEGsiASMESyABIwVJcgRAIAEQSQsgASQAIAArAwBEAAAAAAAAAABmRQRAQbyNrpIBQYuCpZIBEIkBQcSHpZIBEIkBQZGRpZIBEIkBQcMAEOAGQcyVpZIBEIkBQeiYpZIBEIkBEKIBEAkACyABEJkFIAAgASgCCLdEje21oPfGsD6iIAEpAwC5oDkDCCABQRBqIgEjBEsgASMFSXIEQCABEEkLIAEkABDpASEDIAJBJGoiARCiAiAAKAIQIQQgACwAGyEFIAIoAiQhBiACLAAvIQcgAgJ8AkAgACsDACIIRAAAAAAAAAAAZgRAIAArAwgiCUQAAAAAAAAAAGZFDQEgCSAIoQwCC0G8ja6SAUGLgqWSARCJAUHEh6WSARCJAUGRkaWSARCJAUHQABDgBkHMlaWSARCJAUHomKWSARCJARCiARAJAAtBvI2ukgFBtqClkgEQiQFBxIelkgEQiQFBkZGlkgEQiQFB0QAQ4AZBzJWlkgEQiQFBqaSlkgEQiQEQogEQCQALRAAAAAAAQI9AojkDECACQbXKppIBNgIIIAJBlbOlkgE2AgAgAiAEIABBEGoiACAFQQBIGzYCDCACIAYgASAHQQBIGzYCBCADQYSqpZIBIAIQrAIgARCfChogABCfChogAkEwaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALGQAgAEHdwq2SAUGIxaySAUGExaySARCqDQshACAAIAFB3cqmkgFB/setkgFBiMWskgFBhMWskgEQqw0LIQAgACABQeLKppIBQbDJrZIBQYjFrJIBQYTFrJIBEKsNCxkAIABBv8qtkgFBkMWskgFBjMWskgEQqg0LIQAgACABQd3KppIBQfDPrZIBQZDFrJIBQYzFrJIBEKsNCwsAQcDerZIBELYCC9QBAQN/IABBCGoiAUEDdiwAACICRSABQQdxQQNqIAJIckUEQCABELQLAAsgACgCCCEBAkACQANAIAEEQCABQQN2LAAAIgJBACABQQdxQQNqIAJOGw0CIAEoAgAhAiABEJkLIAIhAQwBCwsMAQsgARC0CwALAkACQCAAQQN2IgEsAAAiAkEAIABBB3FBA2ogAk4bRQRAIAAoAgAhAyABLAAAIgJBACAAQQdxQQNqIAJOGw0BIABBADYCACADBEAgAxCZCwsMAgsgABC0CwALIAAQuQsACwu3BgEGfyMAIgVBIGtBYHEiASMESyABIwVJcgRAIAEQSQsgASQAQYTLuJIBKAIABEAQgwshBgsgBiIDRQRAIAFBMGtBYHEiAyMESyADIwVJcgRAIAMQSQsgAyQACyABIAM2AhwgA0EjNgIIIANBl5SokgE2AgQgA0GzldaNBDYCACADQQN2IgRB8+cDOwAEIARB8ePjRzYAAAJAAkACQCAAQQN2LAAAIgFBACAAQQdxQQNqIAFOG0UEQCAAQQA2AgAgAEHAAWpBAEEsEJcLGiAAQfABaiIBQQN2LQAADQIgAEKAgICAgICAp8AANwPwASAAQfgBaiIBQQN2LQAADQIgAEKAgICAgICAr8AANwP4ASAAQYACaiICQQN2LAAAIgFBACACQQdxQQNqIAFOGw0DIABBfjYCgAIgAEGEAmoiAkEDdiwAACIBQQAgAkEHcUEDaiABThsNAyAAQQA2AoQCIABB2AJqQQBBEBCXCxogAEHoAmoiAkEDdiwAACIBQQAgAkEHcUEDaiABThsNAyAAQYCAgPwDNgLoAiAAQfwCaiICQQN2LAAAIgFBACACQQdxQQNqIAFOGw0DIABBADYC/AIgAEGAA2oiAkEDdiwAACIBQQAgAkEHcUEDaiABThsNAyAAQQA2AoADIABBhANqIgJBA3YsAAAiAUEAIAJBB3FBA2ogAU4bDQMgAEEANgKEAyAAQYgDaiIBQQN2LQAADQIgAEKthvHYrtyNjT83A4gDIABBkANqIgFBA3YtAAANAiAAQoCAgICAgNDHwAA3A5ADIABBmANqIgJBA3YsAAAiAUEAIAJBB3FBA2ogAU4bDQMgAEEANgKYAyAAQaAEaiICQQN2LAAAIgFBACACQQdxQQNqIAFOGw0DIAJBAjYCACAEQYAIOwACIANBEGpBgMumkgEQzQEiARCwAiABEJ8KGiAEQfjxAzsAAiADQY7sgK8ENgIAAkAgBgRAIARC9evXr9++/fp1NwAAIAYoAjxBADoAAAwBCyAEQQA2AAAgBEEAOwAECyMEIAVJIAUjBUlyBEAgBRBJCyAFJAAgAA8LIAAQuQsACwALIAEQugsACyACELkLAAvbBAEIfyMAIglBIGtBYHEiBSMESyAFIwVJcgRAIAUQSQsgBSQAQYTLuJIBKAIABEAQhAshCgsgCiIDRQRAIAVB0ABrQWBxIgMjBEsgAyMFSXIEQCADEEkLIAMkAAsgBSADNgIcIANBJDYCCCADQYOsqJIBNgIEIANBs5XWjQQ2AgAgA0EDdiIEQvHj48ev3rz8eDcAACAEQfPnAzsACCAEQYAIOwACIANBEGoiBiABELkCIARBgAg7AAYgA0EwaiIHIAIQuQICQAJAAkACQCAAQcQBaiICQQN2LAAAIgFBACACQQdxQQNqIAFOG0UEQCACKAIAIQUgBkEDdiwAACIBQQAgBkEHcUEDaiABThsNASAGKAIAIQIgAEHIAWoiCEEDdiwAACIBQQAgCEEHcUEDaiABThsNAiAFIAIgACgCyAEQlQsaIABBzAFqIgFBA3YsAAAiAEEAIAFBB3FBA2ogAE4bDQMgASgCACECIAdBA3YsAAAiAEEAIAdBB3FBA2ogAE4bDQQgBygCACEBIAhBA3YsAAAiAEEAIAhBB3FBA2ogAE4bDQIgAiABIAgoAgBBAnYQlQsaIAcQhgEaIARB+PEDOwAGIAYQhgEaIARB+PEDOwACIANBjuyArwQ2AgACQCAKBEAgBEL169ev3779+nU3AAAgBEL169ev3779+nU3AAggCigCfEEAOgAADAELIARCADcAACAEQQA7AAgLIwQgCUkgCSMFSXIEQCAJEEkLIAkkAEEADwsgAhC0CwALIAYQtAsACyAIELQLAAsgARC0CwALIAcQtAsAC8IGAQh/IwAiB0Ega0FgcSICIwRLIAIjBUlyBEAgAhBJCyACJABBhMu4kgEoAgAEQBCECyEJCyAJIgRFBEAgAkHQAGtBYHEiBCMESyAEIwVJcgRAIAQQSQsgBCQACyACIAQ2AhwgBEElNgIIIARBobaokgE2AgQgBEGzldaNBDYCACAEQQN2IgVC8ePjl4/fvPxzNwAAIAVB8+cDOwAIIAVBBDoAAiAEQRBqIQMCQAJAIAFBA3YsAAAiAkEAIAFBB3FBA2ogAk4bRQRAIAEoAgBBgIinkgEQECIIEBohBiADQQN2LAAAIgJBACADQQdxQQNqIAJOGw0BIAMgBjYCACAIEAwMAgsgARC0CwALIAMQuQsACyADELoCIQgCQAJAAkACQAJAAkACQCADQQN2LAAAIgJBACADQQdxQQNqIAJOG0UEQCADKAIAEAwgBUH4AToAAiAAQQN2LAAAIgJBACAAQQdxQQNqIAJOGw0BIABBADYCACAAQQRqIgZBA3YsAAAiAkEAIAZBB3FBA2ogAk4bDQIgAEEANgIEIABBCGoiBkEDdiwAACICQQAgBkEHcUEDaiACThsNAyAAQQA2AgggACAIENoBIAVBADoABiAFQQQ6AAQgAEEDdiwAACICQQAgAEEHcUEDaiACThsNBCAAKAIAIQIgBEEwaiIDQQN2LAAAIgBBACADQQdxQQNqIABOGw0FIAMgCDYCACADQQRqIgZBA3YsAAAiAEEAIAZBB3FBA2ogAE4bDQYgAyACNgIEIARBIGogAxC7AiECIAVB+AE6AAYgAkEDdiwAACIAQQAgAkEHcUEDaiAAThsNByACKAIAQcD8ppIBIAEQvAIgAkEDdiwAACIAQQAgAkEHcUEDaiAAThsNByACKAIAEAwgBUH4AToABCAEQY7sgK8ENgIAAkAgCQRAIAVC9evXr9++/fp1NwAAIAVC9evXr9++/fp1NwAIIAkoAnxBADoAAAwBCyAFQgA3AAAgBUEAOwAICyMEIAdJIAcjBUlyBEAgBxBJCyAHJAAPCyADELQLAAsgABC5CwALIAYQuQsACyAGELkLAAsgABC0CwALIAMQuQsACyAGELkLAAsgAhC0CwAL+AICBX8BfCMAIgNBIGtBYHEiAiMESyACIwVJcgRAIAIQSQsgAiQAQYTLuJIBKAIABEAQgwshBAsgBCIBRQRAIAJBIGtBYHEiASMESyABIwVJcgRAIAEQSQsgASQACyACIAE2AhwgAUEmNgIIIAFBvLSokgE2AgQgAUGzldaNBDYCACABQQN2IgVB8ePjn382AAAgBUEEOgACAkAgAEEDdiwAACICQQAgAEEHcUEDaiACThtFBEAgACgCAEGwtaySASABQRBqIgIQGyEGIAJBA3YsAAAiAEEAIAJBB3FBA2ogAE4bDQEgASgCEBAcIAVB+AE6AAIgAUGO7ICvBDYCAAJ/IAZEAAAAAAAA8EFjIAZEAAAAAAAAAABmcQRAIAarDAELQQALIQECQCAEBEAgBUL169ev3779+nU3AAAgBCgCPEEAOgAADAELIAVBADYAAAsjBCADSSADIwVJcgRAIAMQSQsgAyQAIAEPCyAAELQLAAsgAhC0CwAL6AMBB38jACIGQSBrQWBxIgIjBEsgAiMFSXIEQCACEEkLIAIkAEGEy7iSASgCAARAEIMLIQcLIAciA0UEQCACQTBrQWBxIgMjBEsgAyMFSXIEQCADEEkLIAMkAAsgAiADNgIcIANBJzYCCCADQYmlqJIBNgIEIANBs5XWjQQ2AgAgA0EDdiIEQfHj459/NgAAIARB8+cDOwAEIARBADoAAgJAAkACQAJAIAFBA3YsAAAiAkEAIAFBB3FBA2ogAk4bRQRAIAEoAgAhCCABQQRqIgJBA3YsAAAiAUEAIAJBB3FBA2ogAU4bDQEgAigCACECIANBEGoiBUEDdiwAACIBQQAgBUEHcUEDaiABThsNAiAFIAg2AgAgBUEEaiIIQQN2LAAAIgFBACAIQQdxQQNqIAFOGw0DIAUgAjYCBEHAiKeSASAFEA8hAiAAQQN2LAAAIgFBACAAQQdxQQNqIAFOGw0EIAAgAjYCACAEQfgBOgACIANBjuyArwQ2AgACQCAHBEAgBEL169ev3779+nU3AAAgBygCPEEAOgAADAELIARBADYAACAEQQA7AAQLIwQgBkkgBiMFSXIEQCAGEEkLIAYkACAADwsgARC0CwALIAIQtAsACyAFELkLAAsgCBC5CwALIAAQuQsAC4UEAQd/IwAiB0Ega0FgcSIDIwRLIAMjBUlyBEAgAxBJCyADJABBhMu4kgEoAgAEQBCDCyEICyAIIgRFBEAgA0Ewa0FgcSIEIwRLIAQjBUlyBEAgBBBJCyAEJAALIAMgBDYCHCAEQSg2AgggBEG2oqiSATYCBCAEQbOV1o0ENgIAIARBA3YiBkHz5wM7AAQgBkHx4+OffzYAAAJ/AkACQEHk362SAS0AAEEBcUUEQEECQciIp5IBEB4hBUH826USLAAAIgNBACADQQNMGw0BQeDfrZIBIAU2AgBB5N+tkgFBAToAAAtB/NulEiwAACIDQQAgA0EDTBsNAUHg362SASgCAAwCC0Hg362SARC5CwALQeDfrZIBELQLAAshCSAGQQA6AAICfwJAIAJBA3YiBSwAACIDQQAgAkEHcUEDaiADThsNACACKAIAEBkgBSwAACIDQQAgAkEHcUEDaiADThsNACACKAIADAELIAIQtAsACyEDIARBEGoiBUEDdiwAACICQQAgBUEHcUEDaiACThtFBEAgBSADNgIAIAkgACABIAUQHSAGQfgBOgACIARBjuyArwQ2AgACQCAIBEAgBkL169ev3779+nU3AAAgCCgCPEEAOgAADAELIAZBADYAACAGQQA7AAQLIwQgB0kgByMFSXIEQCAHEEkLIAckAA8LIAUQuQsAC+cgAxN/DXwBfiMAIgMhFCADQUBqQWBxIgMhESMEIANJIAMjBUlyBEAgAxBJCyADJABBhMu4kgEoAgAEQBCHCyESCyASIgZFBEAgA0GgBGtBYHEiBiMESyAGIwVJcgRAIAYQSQsgBiQACyARIAY2AjwgBkEpNgIIIAZBqbuokgE2AgQgBkGzldaNBDYCACAGQQN2IgVBQGtB+OXjn382AAAgBUL48cuXj9+8/HI3ADggBULy5eOXj5+++XI3ADAgBUL48ePHj5+++XI3ACggBULy5ePHj5++/Hg3ACAgBUL48ePHj5+++XI3ABggBULy5ePHj5++/Hg3ABAgBUL48ePHj5+++XI3AAggBULx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AgQCQEGMiKiSARC6BSIDRQ0AIAJB+AA6AAsgAiACQQxqNgIAIAIgAkELajYCBCADQeaDqJIBIAIQ4QVBAEwNACABIAIoAgwiAUHoB2wgASACLQALQd8BcUHNAEYbQegHbDYCLAsgAkEQaiIBIwRLIAEjBUlyBEAgARBJCyABJAAgAEEANgK4AiAAQQA2AhggAEEANgIIIABCADcCpAEgAEIANwKsASAAQgA3ArQBIABCADcCvAEgAEIANwLEASAAQgA3AswBIAAgAEEAQawBIAAoAgQoAgARBAAiATYC0AMgAUIANwJgIAFByQE2AhwgAUHKATYCCCABQcsBNgIEIAFBzAE2AgAgAUEANgJoIAFByQE2AiQgAUHJATYCKCABQgA3AmwgAUHJATYCLCABQckBNgIwIAFCADcCdCABQckBNgI0IAFByQE2AjggAUIANwJ8IAFByQE2AjwgAUEANgKEASABQUBrQckBNgIAIAFCADcCiAEgAUHJATYCRCABQckBNgJIIAFByQE2AkwgAUHJATYCUCABQgA3ApABIAFByQE2AlQgAUIANwKYASABQQA2AqABIAFByQE2AlwgAUHNATYCICABQc0BNgJYIABBADYCuAMgAEEANgKQASAAQQA2AtgBIAAoAtADIgFBADYCpAEgAUEANgIYIAFCADcCDCAAIABBAEEcIAAoAgQoAgARBAAiATYCzAMgAUEBNgIYIAFCADcCECABQcUBNgIMIAFBxgE2AgggAUHHATYCBCABQcgBNgIAIABByAE2AhQLBwAgABDiAwucBgEFfyAAKAIUIgNBfnFByAFHBEAgACgCACICIAM2AhggAkEVNgIUIAAgACgCACgCABEAAAsCf0EBIQICQAJAAkACQAJAIAAoAhQiA0HIAWsOCwABBAICAgICAgMCAwsgACAAKALMAygCBBEAACAAIAAoAhgoAggRAAAgAEHJATYCFAsgACAAKALMAygCABEBACICQQFHDQIgACgCJCICIQUCQAJAAkACQCACQQFrDgQDAgABAgsgACgC2AEiAygCsAEhBEECIQUgAygCACIGQQFHIgIgAygCWCIDQQJHciAEQQNHckUEQEEDIQIMAwsgAiADQSJHckUEQEEHIQIgBEEjRg0DCyAGQdIARyADQccAR3IgBEHCAEdyRQRAQQIhAgwDCyAGQfIA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AWsiBAR/IANBAWoFIAAgAigCDBEBAEUEQEEAIQEMBAsgAigCBCEEIAIoAgALIgFBAWohAyAFQf8BRiABLQAAIgFB2AFGcUUEQCAAKAIAIgYgBTYCGCAGQTc2AhQgACgCACABNgIcIAAgACgCACgCABEAAAsgACABNgK4AyACIARBAWs2AgQgAiADNgIADAELIAAQ8gNFBEBBACEBDAILIAAoArgDIQELAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCABQQFrDv4BDxERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERESAQIFCQUFBQUDBAUIBQUFDw8PDw8PDw8ABwYKEAsREQ0NDQ0NDQ0NDQ0NDQ0NDQ0REREREREREQwREREREQ4RCyAAKAIAIgJB6AA2AhQgAEEBIAIoAgQRAgAgACgC0AMiASgCDARAIAAoAgAiAkHAADYCFCAAIAIoAgARAAAgACgC0AMhAQsgAEIANwDoASAAQgA3APABIABCgYKEiJCgwIABNwCAAiAAQoGChIiQoMCAATcA+AEgAEKFipSo0KDBggU3AJACIABChYqUqNCgwYIFNwCIAiAAQgA3A7ACIABBADYCKCAAQgA3A5gCIABBADoArAIgAEKBgAQ3AqQCIABBADoAogIgAEGBAjsBoAIgAUEBNgIMDBQLQQAhASAAQQBBAEEAEPgDDRMMEgtBACEBIABBAEEBQQAQ+AMNEgwRC0EAIQEgAEEAQQBBARD4Aw0RDBALQQAhASAAQQBBAUEBEPgDDRAMDwsgACgCACICIAE2AhggAkE/NgIUIAAgACgCACgCABEAAAwPCyAAKAIYIgYoAgQhASAGKAIAIQMgACgC0AMoAhBFBEAgACgCACICQTw2AhQgAkEYakGovKqSAUHQABCVCxogACAAKAIAKAIAEQAACyABRQRAIAAgBigCDBEBAEUEQEEA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KAIkQQNIDQAgA0UEQCAAIAEoAgwRAQBFBEBBACEBDAsLIAEoAgQhAyABKAIAIQILIAItAAAhBCADQQFrIgMEfyACQQFqBSAAIAEoAgwRAQBFBEBBACEBDAsLIAEoAgQhAyABKAIACyECIANBAWshAyACLQAAIARBCHRyQRhHBEAgACgCACIEQQw2AhQgACAEKAIAEQAACyADBH8gAkEBagUgACABKAIMEQEARQRAQQAhAQwLCyABKAIEIQMgASgCAAshAiADQQFrIQMgAi0AAEENRwRAIAAoAgAiBEHGADYCFCAEIAAoArgDNgIYIAAgACgCACgCABEAAAsgAwR/IAJBAWoFIAAgASgCDBEBAEUEQEEAIQEMCwsgASgCBCEDIAEoAgALIgItAAAhBCADQQFrIgMEfyACQQFqBSAAIAEoAgwRAQBFBEBBACEBDAsLIAEoAgQhAyABKAIACyIFQQFqIQIgA0EBayEDIAUtAAAgBEEIdHJB/wFHDQAgA0UEQCAAIAEoAgwRAQBFBEBBACEBDAsLIAEoAgQhAyABKAIAIQILIAJBAWohBCADQQFrIQMgAi0AAEEDRwRAIAQhAgwBCyADRQRAIAAgASgCDBEBAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhBAsgBEEBaiECIANBAWshAyAAKALYASIHKAJYIAQtAABHDQAgA0UEQCAAIAEoAgwRAQBFBEBBACEBDAsLIAAoAtgBIQcgASgCBCEDIAEoAgAhAgsgAkEBaiEEIANBAWshAyAHKAIAIAItAABHBEAgBCECDAELIANFBEAgACABKAIMEQEARQRAQQAhAQwLCyAAKALYASEHIAEoAgQhAyABKAIAIQQLIARBAWohAiADQQFrIQMgBygCsAEgBC0AAEcNACADRQRAIAAgASgCDBEBAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhAgsgAkEBaiEEIANBAWshAyACLQAAQYABRwRAIAQhAgwBCyADRQRAIAAgASgCDBEBAEUEQEEAIQEMCwsgASgCBCEDIAEoAgAhBAsgBC0AACEFIANBAWsiAwR/IARBAWoFIAAgASgCDBEBAEUEQEEAIQEMCwsgASgCBCEDIAEoAgALIgRBAWohAiADQQFrIQMgBC0AACAFQQh0cg0AIANFBEAgACABKAIMEQEARQRAQQAhAQwL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AgAhBiADKAIAIQRBACELQQAhAEEAIQcgCEEETwRAA0AgBCAAIAZqLQAAIgU6AAEgBCAFOgACIAQgBToAACAEIAYgAEEBcmotAAAiBToABCAEIAU6AAUgBCAFOgADIAQgBiAAQQJyai0AACIFOgAHIAQgBToACCAEIAU6AAYgBCAGIABBA3JqLQAAIgU6AAogBCAFOgALIAQgBToACSAAQQRqIQAgBEEMaiEEIAdBBGoiByAMRw0ACwsgCUUNAANAIAQgACAGai0AACIHOgABIAQgBzoAAiAEIAc6AAAgAEEBaiEAIARBA2ohBCALQQFqIgsgCUcNAAsLIANBBGohAyACQQFqIQIgCkEBayEEIApBAk4NAAsLC6ICAQ1/IARBAEoEQCAAKALQAiEFIAAoAnAhByAAKALgAyIAKAIUIQogACgCECELIAAoAgwhDCAAKAIIIQ0DQCAEIQggBwRAIAJBAnQiACABKAIIaigCACEOIAEoAgQgAGooAgAhDyABKAIAIABqKAIAIRAgAygCACEEQQAhAANAIAAgD2otAAAhBiAEIAUgACAQai0AACIJIA0gACAOai0AAEECdCIRaigCAGpqLQAAOgAAIAQgBSAJIAsgEWooAgAgCiAGQQJ0IgZqKAIAakEQdWpqLQAAOgABIAQgBSAJIAYgDGooAgBqai0AADoAAiAEQQNqIQQgAEEBaiIAIAdHDQALCyADQQRqIQMgAkEBaiECIAhBAWshBCAIQQJODQALCwvzAQEGfyAAKALgAyIBIABBAUGACCAAKAIEKAIAEQQANgIIIAEgAEEBQYAIIAAoAgQoAgARBAA2AgwgASAAQQFBgAggACgCBCgCABEEADYCECABIABBAUGACCAAKAIEKAIAEQQAIgM2AhQgASgCECEEIAEoAgwhBSABKAIIIQZBACEBQYB/IQADQCAGIAFBAnQiAmogAEHpzQVsQYCAAmpBEHU2AgAgAiAFaiAAQaKLB2xBgIACakEQdTYCACACIARqIABBrpJ9bDYCACACIANqIABB589+bEGAgAJqNgIAIABBAWohACABQQFqIgFBgAJHDQALC6kCAQl/IARBAEoEQCAAKAJwIgVBfnEhDCAFQQFxIQ0DQCAEIQkCQCAFRQ0AIAJBAnQiACABKAIIaigCACEGIAEoAgQgAGooAgAhByABKAIAIABqKAIAIQggAygCACEEQQAhAEEAIQogBUEBRwRAA0AgBCAAIAhqLQAAOgAAIAQgACAHai0AADoAASAEIAAgBmotAAA6AAIgBCAIIABBAXIiC2otAAA6AAMgBCAHIAtqLQAAOgAEIAQgBiALai0AADoABSAAQQJqIQAgBEEGaiEEIApBAmoiCiAMRw0ACwsgDUUNACAEIAAgCGotAAA6AAAgBCAAIAdqLQAAOgABIAQgACAGai0AADoAAgsgA0EEaiEDIAJBAWohAiAJQQFrIQQgCUECTg0ACwsL8QIBC38gBEEASgRAIAAoAnAiCEF+cSEOIAhBAXEhDwNAIAQhDAJAIAhFDQAgAkECdCIAIAEoAghqKAIAIQYgASgCBCAAaigCACEJIAEoAgAgAGooAgAhByADKAIAIQRBACEAQQAhDSAIQQFHBEADQCAAIAdqLQAAIQogACAGai0AACELIAQgACAJai0AACIFOgABIAQgBSALakGAAXM6AAIgBCAFIApqQYABczoAACAHIABBAXIiBWotAAAhCiAFIAZqLQAAIQsgBCAFIAlqLQAAIgU6AAQgBCAFIAtqQYABczoABSAEIAUgCmpBgAFzOgADIABBAmohACAEQQZqIQQgDUECaiINIA5HDQALCyAPRQ0AIAAgB2otAAAhByAAIAZqLQAAIQYgBCAAIAlqLQAAIgA6AAEgBCAAIAZqQYABczoAAiAEIAAgB2pBgAFzOgAACyADQQRqIQMgAkEBaiECIAxBAWshBCAMQQJODQALCwvAAgEOfyAEQQBKBEAgACgC0AIhBSAAKAJwIQcgACgC4AMiACgCFCEKIAAoAhAhCyAAKAIMIQwgACgCCCENA0AgBCEIIAcEQCACQQJ0IgAgASgCDGooAgAhDiABKAIIIABqKAIAIQ8gASgCBCAAaigCACEQIAEoAgAgAGooAgAhESADKAIAIQRBACEAA0AgACAQai0AACEGIAQgBSAAIBFqLQAAQf8BcyIJIA0gACAPai0AAEECdCISaigCAGtqLQAAOgAAIAQgBSAJIAsgEmooAgAgCiAGQQJ0IgZqKAIAakEQdWtqLQAAOgABIAQgBSAJIAYgDGooAgBrai0AADoAAiAEIAAgDmotAAA6AAMgBEEEaiEEIABBAWoiACAHRw0ACwsgA0EEaiEDIAJBAWohAiAIQQFrIQQgCEECTg0ACwsLpAIBCX8gBEEASgRAIAAoAnAiCUF8cSELIAlBA3EhCiAAKAIkIgZBAEwhDCAJQQRJIQ0DQEEAIQggDEUEQANAAkAgCUUNACABIAhBAnRqKAIAIAJBAnRqKAIAIQAgAygCACAIaiEFQQAhByANRQRAA0AgBSAALQAAOgAAIAUgBmoiBSAALQABOgAAIAUgBmoiBSAALQACOgAAIAUgBmoiBSAALQADOgAAIABBBGohACAFIAZqIQUgB0EEaiIHIAtHDQALC0EAIQcgCkUNAANAIAUgAC0AADoAACAFIAZqIQUgAEEBaiEAIAdBAWoiByAKRw0ACwsgCEEBaiIIIAZHDQALCyADQQRqIQMgAkEBaiECIARBAUohACAEQQFrIQQgAA0ACwsLsw0CCn8BfCAAKAIkQQBKBEAgACgC2AMhCiAAKALYASEHA0AgASEGIAIhBAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAHKAIoIAcoAiQiCEEIdGoiA0GDEEwEQCADQYEITARAAkAgA0GBBGsOBBcDIh4AC0HZASEBQQAhAgJAIANBgQJrDgImHwALIANBgwZrDgQDISEcIQsgA0GCDEwEQAJAIANBgghrDgcWIgUiIiIcAAsgA0GFCmsOBgUhISEhGiELAkAgA0GDDGsOChQhIQYhISEhIRkACyADQYcOaw4IBiAgICAgIBcgCyADQYUYTARAIANBhBRMBEAgA0GEEGsODRMhISEfISEhISEhIRcgCyADQYUUaw4GESAgICAHCAsgA0GGHEwEQCADQYYYaw4HECAgICAgCQoLAkAgA0GHHGsOCA8gICAgICALAAsgA0GIIGsOCQ0fHx8fHx8fDAsLQdoBIQFBACECDCILQdsBIQEMIQtB3AEhAUEAIQIMIAtB3QEhAUEAIQIMHwtB3gEhAUEAIQIMHgtB3wEhAUEAIQIMHQtB4AEhAUEAIQIMHAsgA0GLFkcNF0HhASEBQQAhAgwbC0HiASEBQQAhAgwaCyADQY0aRw0VQeMBIQFBACECDBkLQeQBIQFBACECDBgLIANBjx5HDRNB5QEhAUEAIQIMFwtB5gEhAUEAIQIMFgtB5wEhAUEAIQIMFQtB6AEhAUEAIQIMFAtB6QEhAUEAIQIMEwtB6gEhAUEAIQIMEgtB6wEhAUEAIQIMEQtB7AEhAUEAIQIMEAtB7QEhAUEAIQIMDwtB7gEhAUEAIQIMDgtB7wEhAUEAIQIMDQtB8AEhAUEAIQIMDAtB8QEhAUEAIQIMCwtB8gEhAUEAIQIMCgtB8wEhAUEAIQIMCQtB9AEhAQwIC0H1ASEBQQAhAgwHC0H2ASEBDAYLIAAoAkgiAkEDSQ0CIAAoAgAiAUExNgIUIAAgASgCABEAAAwDCyADQYkSRg0DCyAAKAIAIgEgCDYCGCABQQc2AhQgACgCACAHKAIoNgIcIAAgACgCACgCABEAAAwBCyACQQJ0QZC/qpIBaigCACEBDAILIAYhASAEIQIMAQtB9wEhAUEAIQILIAogCUECdGoiBCABNgIEAkAgBygCNEUNACAEKAIsIAJGDQAgBygCUCIDRQ0AIAQgAjYCLAJAAkACQAJAIAIOAwABAgMLIAcoAlQhBkEAIQUDQCAGIAVBAnRqIAMgBUEBdGovAQA2AgAgBiAFQQFyIgRBAnRqIAMgBEEBdGovAQA2AgAgBiAFQQJyIgRBAnRqIAMgBEEBdGovAQA2AgAgBiAFQQNyIgRBAnRqIAMgBEEBdGovAQA2AgAgBUEEaiIFQcAARw0ACwwDCyAHKAJUIQZBACEFA0AgBiAFQQJ0aiAFQQF0IgRB0L2qkgFqLgEAIAMgBGovAQBsQYAQakEMdTYCACAGIAVBAXIiBEECdGogBEEBdCIEQdC9qpIBai4BACADIARqLwEAbEGAEGpBDHU2AgAgBUECaiIFQcAARw0ACwwCCyAHKAJUIQhBACEGQQAhBQNAIAggBUECdGogBkEDdEHQvqqSAWorAwAiCyADIAVBAXRqLwEAuKJEAAAAAAAAwD+itjgCACAIIAVBAXIiBEECdGogCyADIARBAXRqLwEAuKJE72FIsVAx9j+iRAAAAAAAAMA/orY4AgAgCCAFQQJyIgRBAnRqIAsgAyAEQQF0ai8BALiiRMpvTZGu5/Q/okQAAAAAAADAP6K2OAIAIAggBUEDciIEQQJ0aiALIAMgBEEBdGovAQC4okSqEWzvYtDyP6JEAAAAAAAAwD+itjgCACAIIAVBBHIiBEECdGogCyADIARBAXRqLwEAuKJEAAAAAAAAwD+itjgCACAIIAVBBXIiBEECdGogCyADIARBAXRqLwEAuKJEO7+nwGkk6T+iRAAAAAAAAMA/orY4AgAgCCAFQQZyIgRBAnRqIAsgAyAEQQF0ai8BALiiRLsgx3t6UeE/okQAAAAAAADAP6K2OAIAIAggBUEHciIEQQJ0aiALIAMgBEEBdGovAQC4okRdq3LeVajRP6JEAAAAAAAAwD+itjgCACAFQQhqIQUgBkEBaiIGQQhHDQALDAELIAAoAgAiBEExNgIUIAAgBCgCABEAAAsgB0HYAGohByAJQQFqIgkgACgCJEgNAAsLC5gIAQd/IAAoApwDIQIgACgC1AMhAwJAIAAoAuABBEAgACgCoAMhAQJAAkACQCACRQRAIAFFDQEMAgsgASACSA0BIAEgACgCtANKDQEgACgC1AJBAUcNAQsCQCAAKAKkAyIBRQRAIAAoAqgDIQQMAQsgAUEBayIEIAAoAqgDRw0BCyAEQQ5IDQELIAAoAgAiASACNgIYIAFBETYCFCAAKAIAIAAoAqADNgIcIAAoAgAgACgCpAM2AiAgACgCACAAKAKoAzYCJCAAIAAoAgAoAgARAAALIAAoAtQCIgJBAEoEQANAIAAoAqABIAAgBkECdGooAtgCKAIEIgRBCHRqIQUCf0EAIAAoApwDIgFFDQAaIAEgBSgCAEEATg0AGiAAKAIAIgEgBDYCGCABQfYANgIUIAAoAgBBADYCHCAAQX8gACgCACgCBBECACAAKAKcAwsiAiAAKAKgA0wEQANAIAAoAqQDIAUgAkECdGoiBygCACIBQQAgAUEAShtHBEAgACgCACIBIAQ2AhggAUH2ADYCFCAAKAIAIAI2AhwgAEF/IAAoAgAoAgQRAgALIAcgACgCqAM2AgAgAiAAKAKgA0ghASACQQFqIQIgAQ0ACwsgBkEBaiIGIAAoAtQCIgJIDQALCyAAKAKcAyEBIAAoAqQDRQRAIAFFBEAgA0H9ATYCBAwDCyADQf4BNgIEDAILIAFFBEAgA0H/ATYCBAwCCyADQYACNgIEDAELAkACQCACDQAgACgCpAMNACAAKAKoAw0AIAAoAqADIgFBP0oNASABIAAoArQDRg0BCyAAKAIAIgFB/QA2AhQgAEF/IAEoAgQRAgALIANBgQI2AgQgACgC1AIhAgsgAkEASgRAQQAhBANAIAAgBEECdCIHaigC2AIhBQJAAkAgACgC4AEEQCAAKAKcAw0BIAAoAqQDDQILIAUoAhQiAkEQTwRAIAAoAgAiASACNgIYIAFBMjYCFCAAIAAoAgAoAgARAAALIAMgAkECdGoiAUE8aigCACICRQRAIAEgAEEBQcAAIAAoAgQoAgARBAAiAjYCPAsgAkIANwAAIAJCADcAOCACQgA3ADAgAkIANwAoIAJCADcAICACQgA3ABggAkIANwAQIAJCADcACCADIAdqIgFBADYCKCABQQA2AhggACgC4AFFBEAgACgCtAMNAQwCCyAAKAKcA0UNAQsgBSgCGCICQRBPBEAgACgCACIBIAI2AhggAUEyNgIUIAAgACgCACgCABEAAAsgAyACQQJ0aiIBQfwAaigCACICRQRAIAEgAEEBQYACIAAoAgQoAgARBAAiAjYCfAsgAkEAQYACEJcLGgsgBEEBaiIEIAAoAtQCSA0ACwsgA0FwNgIUIANCADcCDCADIAAoApgCNgI4C6EGAQt/IAAoAtQDIQUgACgCmAIEQCAFIAUoAjgiAgR/IAIFIAAQigQgBSgCOAtBAWs2AjgLAkACQCAFKAIUQX9GDQAgACgC8AJBAEwNAANAIAEgCUECdCICaigCACEMAkAgACAFIAAgACACaigC9AJBAnQiAmooAtgCKAIUIgpBAnRqIgRBPGooAgAgAiAFaiIGQShqKAIAaiIDEIsERQRAIAZBADYCKCAGKAIYIQIMAQtBASEHQQAhCEEAIQICQCAAIAMgACADQQFqEIsEIgtqQQJqIgMQiwRFDQAgACAEKAI8IgRBFGoiAxCLBEUEQEEBIQIMAQtBACEHIAAgBEEVaiIDEIsERQRAQQIhAgwBCyAAIARBFmoiAxCLBEUEQEEEIQIMAQsgACAEQRdqIgMQiwRFBEBBCCECDAELIAAgBEEYaiIDEIsERQRAQRAhAgwBCyAAIARBGWoiAxCLBEUEQEEgIQIMAQsgACAEQRpqIgMQiwRFBEBBwAAhAgwBCyAAIARBG2oiAxCLBEUEQEGAASECDAELIAAgBEEcaiIDEIsERQRAQYACIQIMAQsgACAEQR1qIgMQiwRFBEBBgAQhAgwBCyAAIARBHmoiAxCLBEUEQEGACCECDAELIAAgBEEfaiIDEIsERQRAQYAQIQIMAQsgACAEQSBqIgMQiwRFBEBBgCAhAgwBCyAAIARBIWoiAxCLBEUEQEGAwAAhAgwBC0GAgAEhAiAAIARBImoiAxCLBA0ECwJAIAJBASAAIApqIgotAOgBdEEBdUgNACALQQJ0IQRBASAKLQD4AXRBAXUgAkgEQCAEQQxqIQgMAQsgBEEEaiEICyAGIAg2AigCQCAHBEAgAiEDDAELIANBDmohByACIQMDQCACQQF2IgRBACAAIAcQiwQbIANyIQMgAkEDSyEIIAQhAiAIDQALCyAGIAYoAhggA0F/cyADQQFqIAsbaiICNgIYCyAMIAIgACgCqAN0OwEAIAlBAWoiCSAAKALwAkgNAAsLQQEPCyAAKAIAIgFB9QA2AhQgAEF/IAEoAgQRAgAgBUF/NgIUQQEL1QUBDH8gACgC1AMhAyAAKAKYAgRAIAMgAygCOCIEBH8gBAUgABCKBCADKAI4C0EBazYCOAsCQAJAIAMoAhRBf0YNACADQbwBaiEGIAAoApwDQQFrIQQgACAAKALYAigCGCICaiEHIAMgAkECdGohBSABKAIAIQggACgCsAMhCQNAIAAgBSgCfCAEIgJBA2xqIgEQiwQNAQNAAkAgAkEBaiEEIAAgAUEBahCLBA0AIAFBA2ohASAEIgIgACgCoANIDQEMBAsLIAAgBhCLBCEKAkAgACABQQJqIgEQiwRFBEBBACECDAELIAAgARCLBEUEQEEBIQIMAQsCQCAAIAUoAnxBvQFB2QEgAiAHLQCIAkgbaiICEIsERQRAQQIhAQwBCyAAIAJBAWoiAhCLBEUEQEEEIQEMAQsgACACQQFqIgIQiwRFBEBBCCEBDAELIAAgAkEBaiICEIsERQRAQRAhAQwBCyAAIAJBAWoiAhCLBEUEQEEgIQEMAQsgACACQQFqIgIQiwRFBEBBwAAhAQwBCyAAIAJBAWoiAhCLBEUEQEGAASEBDAELIAAgAkEBaiICEIsERQRAQYACIQEMAQsgACACQQFqIgIQiwRFBEBBgAQhAQwBCyAAIAJBAWoiAhCLBEUEQEGACCEBDAELIAAgAkEBaiICEIsERQRAQYAQIQEMAQsgACACQQFqIgIQiwRFBEBBgCAhAQwBCyAAIAJBAWoiAhCLBEUEQEGAwAAhAQwBC0GAgAEhASAAIAJBAWoiAhCLBA0ECyACQQ5qIQsgASECA0AgAUEBdiIMQQAgACALEIsEGyACciECIAFBA0shDSAMIQEgDQ0ACwsgCCAJIARBAnRqKAIAQQF0aiACQX9zIAJBAWogChsgACgCqAN0OwEAIAQgACgCoANIDQALC0EBDwsgACgCACIBQfUANgIUIABBfyABKAIEEQIAIANBfzYCFEEBC44BAQR/IAAoAtQDIQIgACgCmAIEQCACIAIoAjgiAwR/IAMFIAAQigQgAigCOAtBAWs2AjgLIAAoAvACQQBKBEAgAkG8AWohA0EBIAAoAqgDdCEEQQAhAgNAIAAgAxCLBARAIAEgAkECdGooAgAiBSAFLwEAIARyOwEACyACQQFqIgIgACgC8AJIDQALC0EBC5MDAQp/IAAoAtQDIQMgACgCmAIEQCADIAMoAjgiAgR/IAIFIAAQigQgAygCOAtBAWs2AjgLAkAgAygCFEF/Rg0AQX8gACgCqAMiAnQhBUEBIAJ0IQYgACgCoAMhBCABKAIAIQcgACgCsAMhCCAAKALYAigCGCECAkADQCAHIAggBEECdGooAgBBAXRqLwEADQEgBEEBayIEDQALQQAhBAsgA0G8AWohCiAAKAKcA0EBayEBIAMgAkECdGohCwNAIAsoAnwgAUEDbGohAiABIAROBEAgACACEIsEDQILAkACfwJAA0AgByAIIAFBAWoiAUECdGooAgBBAXRqIgkvAQAEQCAAIAJBAmoQiwRFDQQgCS4BACICQQBODQIgAiAFagwDCyAAIAJBAWoQiwQEQCAFIAYgACAKEIsEGwwDCyACQQNqIQIgASAAKAKgA0gNAAsgACgCACIBQfUANgIUIABBfyABKAIEEQIAIANBfzYCFEEBDwsgAiAGagshAiAJIAI7AQALIAEgACgCoANIDQALC0EBC/sKAQ5/IAAoAtQDIQUgACgCmAIEQCAFIAUoAjgiBAR/IAQFIAAQigQgBSgCOAtBAWs2AjgLAkACQCAFKAIUQX9GDQAgACgC8AJBAEwNACAAKAKwAyEOIAVBvAFqIQ8DQCABIAtBAnQiBGooAgAhDQJAIAAgBSAAIAAgBGooAvQCQQJ0IgRqKALYAiIMKAIUIglBAnRqIgJBPGooAgAgBCAFaiIHQShqKAIAaiIDEIsERQRAIAdBADYCKCAHKAIYIQQMAQtBASEGQQAhCEEAIQQCQCAAIAMgACADQQFqEIsEIgpqQQJqIgMQiwRFDQAgACACKAI8IgJBFGoiAxCLBEUEQEEBIQQMAQtBACEGIAAgAkEVaiIDEIsERQRAQQIhBAwBCyAAIAJBFmoiAxCLBEUEQEEEIQQMAQsgACACQRdqIgMQiwRFBEBBCCEEDAELIAAgAkEYaiIDEIsERQRAQRAhBAwBCyAAIAJBGWoiAxCLBEUEQEEgIQQMAQsgACACQRpqIgMQiwRFBEBBwAAhBAwBCyAAIAJBG2oiAxCLBEUEQEGAASEEDAELIAAgAkEcaiIDEIsERQRAQYACIQQMAQsgACACQR1qIgMQiwRFBEBBgAQhBAwBCyAAIAJBHmoiAxCLBEUEQEGACCEEDAELIAAgAkEfaiIDEIsERQRAQYAQIQQMAQsgACACQSBqIgMQiwRFBEBBgCAhBAwBCyAAIAJBIWoiAxCLBEUEQEGAwAAhBAwBC0GAgAEhBCAAIAJBImoiAxCLBA0ECwJAIARBASAAIAlqIgktAOgBdEEBdUgNACAKQQJ0IQJBASAJLQD4AXRBAXUgBEgEQCACQQxqIQgMAQsgAkEEaiEICyAHIAg2AigCQCAGBEAgBCEDDAELIANBDmohBiAEIQMDQCAEQQF2IgJBACAAIAYQiwQbIANyIQMgBEEDSyEIIAIhBCAIDQALCyAHIAcoAhggA0F/cyADQQFqIAobaiIENgIYCyANIAQ7AQACQCAAKAK0A0UNACAAIAwoAhgiBGohCCAFIARBAnRqIQZBACEEA0AgACAGKAJ8IAQiAkEDbGoiAxCLBA0BA0ACQCACQQFqIQQgACADQQFqEIsEDQAgA0EDaiEDIAQiAiAAKAK0A0gNAQwGCwsgACAPEIsEIQoCQCAAIANBAmoiAxCLBEUEQEEAIQIMAQsgACADEIsERQRAQQEhAgwBCwJAIAAgBigCfEG9AUHZASACIAgtAIgCSBtqIgIQiwRFBEBBAiEDDAELIAAgAkEBaiICEIsERQRAQQQhAwwBCyAAIAJBAWoiAhCLBEUEQEEIIQMMAQsgACACQQFqIgIQiwRFBEBBECEDDAELIAAgAkEBaiICEIsERQRAQSAhAwwBCyAAIAJBAWoiAhCLBEUEQEHAACEDDAELIAAgAkEBaiICEIsERQRAQYABIQMMAQsgACACQQFqIgIQiwRFBEBBgAIhAwwBCyAAIAJBAWoiAhCLBEUEQEGABCEDDAELIAAgAkEBaiICEIsERQRAQYAIIQMMAQsgACACQQFqIgIQiwRFBEBBgBAhAwwBCyAAIAJBAWoiAhCLBEUEQEGAICEDDAELIAAgAkEBaiICEIsERQRAQYDAACEDDAELQYCAASEDIAAgAkEBaiICEIsEDQYLIAJBDmohDCADIQIDQCADQQF2IgdBACAAIAwQiwQbIAJyIQIgA0EDSyEJIAchAyAJDQALCyANIA4gBEECdGooAgBBAXRqIAJBf3MgAkEBaiAKGzsBACAEIAAoArQDSA0ACwsgC0EBaiILIAAoAvACSA0ACwtBAQ8LIAAoAgAiAUH1ADYCFCAAQX8gASgCBBECACAFQX82AhRBAQuoAgEFfyAAKALUAyECIAAgACgC0AMoAggRAQBFBEAgACgCACIBQRk2AhQgACABKAIAEQAACyAAKALUAkEASgRAA0AgACADQQJ0IgVqKALYAiEEAkACQCAAKALgAQRAIAAoApwDDQEgACgCpAMNAgsgAiAEKAIUQQJ0aigCPCIBQgA3AAAgAUIANwA4IAFCADcAMCABQgA3ACggAUIANwAgIAFCADcAGCABQgA3ABAgAUIANwAIIAIgBWoiAUEANgIoIAFBADYCGCAAKALgAUUEQCAAKAK0Aw0BDAILIAAoApwDRQ0BCyACIAQoAhhBAnRqKAJ8QQBBgAIQlwsaCyADQQFqIgMgACgC1AJIDQALCyACQXA2AhQgAkIANwIMIAIgACgCmAI2AjgLywQBB38CQCAAKALUAyIEKAIQIgJBgIACTgRAIAQoAhQhAwwBCyAEKAIUIQMDQCAEIANBAWsiAjYCFAJAIANBAEoEQCACIQMMAQtBACEFIAAoArgDRQRAAkAgACgCGCICKAIEDQAgACACKAIMEQEADQAgACgCACIDQRk2AhQgACADKAIAEQAACyACIAIoAgRBAWs2AgQgAiACKAIAIgJBAWo2AgACQCACLQAAIgVB/wFHDQADQAJAIAAoAhgiAigCBA0AIAAgAigCDBEBAA0AIAAoAgAiA0EZNgIUIAAgAygCABEAAAsgAiACKAIEQQFrNgIEIAIgAigCACICQQFqNgIAQf8BIQUgAi0AACICQf8BRg0ACyACRQ0AIAAgAjYCuANBACEFCyAEKAIUIQILIAQgAkEIaiIDNgIUIAQgBCgCDEEIdCAFcjYCDCACQXdKDQAgBCACQQlqIgM2AhQgAw0AIARBgIACNgIQQQAhAwsgBCAEKAIQQQF0IgI2AhAgAkGAgAJIDQALCyAEIAIgAS0AACIAQf8AcUECdEHguKqSAWooAgAiBUEQdSIGayICNgIQIAVBCHUhBwJAIAQoAgwiCCACIAN0IgNOBEAgBCAGNgIQIAQgCCADazYCDCAAQYABcSEDIAIgBkgEQCABIAMgB3M6AAAMAgsgASADIAVzOgAAIABBgAFzIQAMAQsgAkH//wFLDQAgAEGAAXEhAyACIAZIBEAgASADIAVzOgAAIABBgAFzIQAMAQsgASADIAdzOgAACyAAQQd2Cy0BAX8gACgC0AMiASABKAIYIAAoAtQDIgBBEGooAgBBCG1qNgIYIABBADYCEAvSCwEHfyAAKAKcAyECIAAoAtQDIQQCQCAAKALgAQRAIAAoAqADIQECQAJAAkAgAkUEQCABRQ0BDAILIAEgAkgNASABIAAoArQDSg0BIAAoAtQCQQFHDQELAkAgACgCpAMiAUUEQCAAKAKoAyEFDAELIAFBAWsiBSAAKAKoA0cNAQsgBUEOSA0BCyAAKAIAIgEgAjYCGCABQRE2AhQgACgCACAAKAKgAzYCHCAAKAIAIAAoAqQDNgIgIAAoAgAgACgCqAM2AiQgACAAKAIAKAIAEQAACyAAKALUAiICQQBKBEADQCAAKAKgASAAIAdBAnRqKALYAigCBCIDQQh0aiEFAn9BACAAKAKcAyIBRQ0AGiABIAUoAgBBAE4NABogACgCACIBIAM2AhggAUH2ADYCFCAAKAIAQQA2AhwgAEF/IAAoAgAoAgQRAgAgACgCnAMLIgIgACgCoANMBEADQCAAKAKkAyAFIAJBAnRqIgYoAgAiAUEAIAFBAEobRwRAIAAoAgAiASADNgIYIAFB9gA2AhQgACgCACACNgIcIABBfyAAKAIAKAIEEQIACyAGIAAoAqgDNgIAIAIgACgCoANIIQEgAkEBaiECIAENAAsLIAdBAWoiByAAKALUAiICSA0ACwsgBEGEAkGFAiAAKAKcAyIBG0GGAkGHAiABGyAAKAKkAxs2AgQgAkEASgRAQQAhAgNAIAAgAkECdCIGaigC2AIhAQJAIAAoApwDRQRAIAAoAqQDDQEgAEEBIAEoAhQiASAEIAFBAnRqQTBqEJIEDAELIABBACABKAIYIgEgBCABQQJ0aiIBQTBqEJIEIAQgASgCMDYCQAsgBCAGakEANgIYIAJBAWoiAiAAKALUAkgNAAsLIARBADYCFAwBCwJAAkAgAg0AIAAoAqQDDQAgACgCqAMNACAAKALcAUUgACgCoAMiAUE/SnENASABIAAoArQDRg0BCyAAKAIAIgFB/QA2AhQgAEF/IAEoAgQRAgALIARBiAJBiQIgACgCtANBP0YbNgIEQQAhAiAAKALUAkEASgRAA0AgAEEBIAAgAkECdCIFaigC2AIiBigCFCIBIAQgAUECdGpBxABqEJIEIAAoArQDBEAgAEEAIAYoAhgiASAEIAFBAnRqQdQAahCSBAsgBCAFakEANgIYIAJBAWoiAiAAKALUAkgNAAsLQQAhBSAAKALwAkEATA0AA0AgBCAFQQJ0IgFqIgYgBCAAIAAgAWooAvQCQQJ0aigC2AIiASgCFEECdGooAkQ2AmQgBiAEIAEoAhhBAnRqKAJUNgKMAQJAIAEoAjRFBEBBACECDAELIAEoAiQhAyABKAIoIQFBASECAn8CQAJAAkACQAJAAkACQCAAKAK0Aw4xCAYGAAYGBgYBBgYGBgYGAgYGBgYGBgYGAwYGBgYGBgYGBgYEBgYGBgYGBgYGBgYGBQYLQQEgAUEBayABQQNrQX5JG0EDdEEBIANBAWsgA0EDa0F+SRtBAnRqQaC/qpIBagwGC0ECIAFBAWsgAUEEa0F9SRtBDGxBAiADQQFrIANBBGtBfUkbQQJ0akGwv6qSAWoMBQtBAyABQQFrIAFBBWtBfEkbQQR0QQMgA0EBayADQQVrQXxJG0ECdGpB4L+qkgFqDAQLQQQgAUEBayABQQZrQXtJG0EUbEEEIANBAWsgA0EGa0F7SRtBAnRqQaDAqpIBagwDC0EFIAFBAWsgAUEHa0F6SRtBGGxBBSADQQFrIANBB2tBekkbQQJ0akGQwaqSAWoMAgtBBiABQQFrIAFBCGtBeUkbQRxsQQYgA0EBayADQQhrQXlJG0ECdGpBoMKqkgFqDAELQQcgAUEBayABQQlrQXhJG0EFdEEHIANBAWsgA0EJa0F4SRtBAnRqQfDDqpIBagsoAgBBAWohAgsgBiACNgK0ASAFQQFqIgUgACgC8AJIDQALCyAEQQA2AiggBEIANwIMIAQgACgCmAI2AiwL7AoBEX8jAEGgAmsiBCICIwRLIAIjBUlyBEAgAhBJCyACJAAgACgC1AMhBwJAAkAgACgCmAJFDQAgBygCLA0AIAAoAtADIgIgAigCGCAHKAIQQQhtajYCGCAHQQA2AhAgACACKAIIEQEARQ0BIAAoAtQCQQBKBEBBACECA0AgByACQQJ0akEANgIYIAJBAWoiAiAAKALUAkgNAAsLIAdBADYCFCAHIAAoApgCNgIsIAAoArgDDQAgB0EANgIoCwJAIAcoAihFBEAgACgCsAMhDSAAKAKgAyELIAAoAqgDIQIgBCAANgKcAiAEIAAoAhgiAygCADYCjAIgBCADKAIENgKQAkF/IAJ0IQ5BASACdCEMIAcoAhAhAiAAKAKcAyEFIAEoAgAhCSAHKAIMIQYCfwJAIAcoAhQiCgRAQQAhAQwBCyAHKAJAIQ9BACEBA0ACfwJAAn8gAkEHTARAIARBjAJqIAYgAkEAEJUERQ0IIAQoApQCIQZBASAEKAKYAiICQQhIDQEaCyAPIAYgAkEIa3VB/wFxIgNBAnRqKAKQASIKDQFBCQshAyAEQYwCaiAGIAIgDyADEJYEIgNBAEgNBiAEKAKUAiEGIAQoApgCDAELIAMgD2pBkAlqLQAAIQMgAiAKawshAiADQQR2IQgCQAJAAkACQAJAIANBD3EOAgIBAAsgACgCACIDQfkANgIUIABBfyADKAIEEQIACyACQQBMBEAgBEGMAmogBiACQQEQlQRFDQggBCgClAIhBiAEKAKYAiECCyAMIA4gBiACQQFrIgJ2QQFxGyEQDAELQQAhECAIQQ9GDQBBASAIdCEKIANBEEkNAyACIAhIBEAgBEGMAmogBiACIAgQlQRFDQcgBCgClAIhBiAEKAKYAiECCyAIQQJ0QfDFqpIBaigCACAGIAIgCGsiAnVxIApqIgoNAwwBCyAFIAsgBSALShsiEkEBaiEKAkADQAJAIAkgDSAFIgNBAnRqKAIAQQF0aiIFLwEABEAgAkEATARAIARBjAJqIAYgAkEBEJUERQ0KIAQoApQCIQYgBCgCmAIhAgsgBiACQQFrIgJ2QQFxRQ0BIAwgBS4BACIRcQ0BIAUgESAOIAwgEUEASBtqOwEADAELIAhBAEwNAiAIQQFrIQgLIANBAWohBSADIBJHDQALIAohAwsgEARAIAkgDSADQQJ0aigCACIFQQF0aiAQOwEAIAQgAUECdGogBTYCACABQQFqIQELIANBAWohBSADIAtIDQELC0EADAELIAUgCyAFIAtKGyELA0ACQCAJIA0gBSIDQQJ0aigCAEEBdGoiBS8BAEUNACACQQBMBEAgBEGMAmogBiACQQEQlQRFDQUgBCgClAIhBiAEKAKYAiECCyAGIAJBAWsiAnZBAXFFDQAgDCAFLgEAIghxDQAgBSAIIA4gDCAIQQBIG2o7AQALIANBAWohBSADIAtHDQALIApBAWsLIQMgACgCGCIAIAQoAowCNgIAIAAgBCgCkAI2AgQgByADNgIUIAcgAjYCECAHIAY2AgwLIAcgBygCLEEBazYCLEEBIQMMAQsgAUUEQEEAIQMMAQsgASICQQNxIgAEQEEAIQUDQCAJIAQgAkEBayICQQJ0aigCAEEBdGpBADsBACAFQQFqIgUgAEcNAAsLQQAhAyABQQRJDQADQCAJIAJBAnQgBGoiAEEEaygCAEEBdGpBADsBACAJIABBCGsoAgBBAXRqQQA7AQAgCSAAQQxrKAIAQQF0akEAOwEAIAkgBCACQQRrIgJBAnRqKAIAQQF0akEAOwEAIAINAAsLIARBoAJqIgAjBEsgACMFSXIEQCAAEEkLIAAkACADC9IDAQh/IwBBIGsiBCICIwRLIAIjBUlyBEAgAhBJCyACJAAgACgC1AMhAgJAAkAgACgCmAJFDQAgAigCLA0AIAAoAtADIgMgAygCGCACKAIQQQhtajYCGCACQQA2AhAgACADKAIIEQEARQ0BIAAoAtQCQQBKBEBBACEDA0AgAiADQQJ0akEANgIYIANBAWoiAyAAKALUAkgNAAsLIAJBADYCFCACIAAoApgCNgIsIAAoArgDDQAgAkEANgIoCyAEIAA2AhwgBCAAKAIYIgUoAgAiBjYCDCAEIAUoAgQiBzYCEEEBIQkgAigCECEDIAIoAgwhCCAAKALwAkEASgRAQQEgACgCqAN0IQZBACEFA0AgA0EATARAIARBDGogCCADQQEQlQRFBEBBACEJDAQLIAQoAhQhCCAEKAIYIQMLIAggA0EBayIDdkEBcQRAIAEgBUECdGooAgAiByAHLwEAIAZyOwEACyAFQQFqIgUgACgC8AJIDQALIAQoAhAhByAEKAIMIQYgACgCGCEFCyAFIAc2AgQgBSAGNgIAIAIgAzYCECACIAg2AgwgAiACKAIsQQFrNgIsCyAEQSBqIgAjBEsgACMFSXIEQCAAEEkLIAAkACAJC8YGAQx/IwBBIGsiAyICIwRLIAIjBUlyBEAgAhBJCyACJAAgACgC1AMhBAJ/AkAgACgCmAJFDQAgBCgCLA0AIAAoAtADIgIgAigCGCAEKAIQQQhtajYCGCAEQQA2AhBBACAAIAIoAggRAQBFDQEaIAAoAtQCQQBKBEBBACECA0AgBCACQQJ0akEANgIYIAJBAWoiAiAAKALUAkgNAAsLIARBADYCFCAEIAAoApgCNgIsIAAoArgDDQAgBEEANgIoCyAEKAIoRQRAAkAgBCgCFCICBEAgAkEBayEFDAELIAMgADYCHCADIAAoAhgiAigCADYCDCADIAIoAgQ2AhAgBCgCECECIAQoAgwhBgJ/QQAgACgCnAMiCCAAKAKgAyIKSg0AGiAEKAJAIQkgASgCACELIAAoArADIQwgACgCqAMhDQNAAn8CQAJ/IAJBB0wEQEEAIANBDGogBiACQQAQlQRFDQgaIAMoAhQhBkEBIAMoAhgiAkEISA0BGgsgCSAGIAJBCGt1Qf8BcSIBQQJ0aigCkAEiBQ0BQQkLIQFBACADQQxqIAYgAiAJIAEQlgQiAUEASA0GGiADKAIUIQYgAygCGAwBCyABIAlqQZAJai0AACEBIAIgBWsLIQIgAUEEdiEHAkAgAUEPcSIFBEAgAiAFSARAQQAgA0EMaiAGIAIgBRCVBEUNBxogAygCFCEGIAMoAhghAgsgCyAMIAcgCGoiAUECdGooAgBBAXRqIAVBAnQiB0HwxaqSAWooAgAiCCAGIAIgBWsiAnVxIgUgCEEAIAUgB0HsxaqSAWooAgBMG2sgDXQ7AQAMAQsgB0EPRwRAQQAgAUEQSQ0DGiACIAdIBEBBACADQQxqIAYgAiAHEJUERQ0HGiADKAIUIQYgAygCGCECCyAHQQJ0QfDFqpIBaigCACAGIAIgB2siAnVxQX8gB3RBf3NqDAMLIAhBD2ohAQsgAUEBaiEIIAEgCkgNAAtBAAshBSAAKAIYIgAgAygCDDYCACAAIAMoAhA2AgQgBCACNgIQIAQgBjYCDAsgBCAFNgIUCyAEIAQoAixBAWs2AixBAQshBSADQSBqIgAjBEsgACMFSXIEQCAAEEkLIAAkACAFC5MGAQt/IwBBMGsiAiMESyACIwVJcgRAIAIQSQsgAiQAIAAoAqgDIQogACgC1AMhBAJ/AkAgACgCmAJFDQAgBCgCLA0AIAAoAtADIgUgBSgCGCAEKAIQQQhtajYCGCAEQQA2AhBBACAAIAUoAggRAQBFDQEaIAAoAtQCQQBKBEBBACEFA0AgBCAFQQJ0akEANgIYIAVBAWoiBSAAKALUAkgNAAsLIARBADYCFCAEIAAoApgCNgIsIAAoArgDDQAgBEEANgIoCyAEKAIoRQRAIAIgADYCLCACIAAoAhgiAygCACIINgIcIAIgAygCBCIGNgIgIAQoAhAhBSAEKAIMIQcgAiAEKAIkNgIYIAIgBCkCHDcDECACIAQpAhQ3AwggACgC8AJBAEoEQEEAIQgDQCABIAhBAnQiA2ooAgAhCyAEIAAgACADaigC9AJBAnQiDGooAtgCKAIUQQJ0aigCMCEDAn8CQAJ/IAVBB0wEQEEAIAJBHGogByAFQQAQlQRFDQcaIAIoAiQhB0EBIAIoAigiBUEISA0BGgsgAyAHIAVBCGt1Qf8BcSIGQQJ0aigCkAEiCQ0BQQkLIQlBACACQRxqIAcgBSADIAkQlgQiA0EASA0FGiACKAIkIQcgAigCKAwBCyADIAZqQZAJai0AACEDIAUgCWsLIQUgAwR/IAMgBUoEQEEAIAJBHGogByAFIAMQlQRFDQUaIAIoAiQhByACKAIoIQULIANBAnQiBkHwxaqSAWooAgAiCSAHIAUgA2siBXVxIgMgCUEAIAMgBkHsxaqSAWooAgBMG2sFQQALIQYgAiAMaiIDQQxqIAMoAgwgBmoiAzYCACALIAMgCnQ7AQAgCEEBaiIIIAAoAvACSA0ACyACKAIgIQYgAigCHCEIIAAoAhghAwsgAyAGNgIEIAMgCDYCACAEIAU2AhAgBCAHNgIMIAQgAigCGDYCJCAEIAIpAxA3AhwgBCACKQMINwIUCyAEIAQoAixBAWs2AixBAQshBiACQTBqIgAjBEsgACMFSXIEQCAAEEkLIAAkACAGC5UHAQx/IwBBoAprIgciBCMESyAEIwVJcgRAIAQQSQsgBCQAIAJBBE8EQCAAKAIAIgQgAjYCGCAEQTQ2AhQgACAAKAIAKAIAEQAACyAAQbQBQcQBIAEbaiACQQJ0aigCACIIRQRAIAAoAgAiBCACNgIYIARBNDYCFCAAIAAoAgAoAgARAAALIAMoAgAiCUUEQCADIABBAUGQCyAAKAIEKAIAEQQAIgk2AgALIAkgCDYCjAFBACEEQQEhAgNAIAQgAiAIai0AACIFaiIDQYECTgRAIAAoAgAiBkEJNgIUIAAgBigCABEAAAsgBQRAIAdBkAhqIARqIAIgBRCXCxogAyEECyACQQFqIgJBEUcNAAtBACEDIAdBkAhqIARqQQA6AAAgBy0AkAgiBgRAIAbAIQVBACECA0AgBsAgBUYEQANAIAcgA0ECdGogAjYCACACQQFqIQIgBSADQQFqIgMgB0GQCGpqLAAAIgZGDQALC0EBIAV0IAJMBEAgACgCACIKQQk2AhQgACAKKAIAEQAACyAFQQFqIQUgAkEBdCECIAZB/wFxDQALC0EAIQNBASECA0AgCSACQQJ0aiACIAhqIgUtAAAEfyAJIAJBAnRqIAMgByADQQJ0aigCAGs2AkggAyAFLQAAaiIDQQJ0IAdqQQRrKAIABUF/CzYCACACQQFqIgJBEUcNAAsgCUH//z82AkRBACEKIAlBkAFqQQBBgAgQlwsaQQEhBgNAIAYgCGoiDC0AAARAQQEhC0EBQQggBmsiDXQhBQNAIAggCmohDiAHIApBAnRqKAIAIA10IQIgBSEDA0AgCSACQQJ0aiAGNgKQASACIAlqQZAJaiAOLQAROgAAIAJBAWohAiADQQFKIQ8gA0EBayEDIA8NAAsgCkEBaiEKIAsgDC0AAEkhAiALQQFqIQsgAg0ACwsgBkEBaiIGQQlHDQALAkAgAUUgBEEATHINAEEAIQIgBEEBRwRAIARBfnEhAUEAIQMDQCACIAhqLQARQRBPBEAgACgCACIFQQk2AhQgACAFKAIAEQAACyAIIAJBAXJqLQARQRBPBEAgACgCACIFQQk2AhQgACAFKAIAEQAACyACQQJqIQIgA0ECaiIDIAFHDQALCyAEQQFxRQ0AIAIgCGotABFBEEkNACAAKAIAIgFBCTYCFCAAIAEoAgARAAALIAdBoApqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAueCwEMfyMAQTBrIgQiAiMESyACIwVJcgRAIAIQSQsgAiQAIAAoAtQDIQYCfwJAIAAoApgCRQ0AIAYoAiwNACAAKALQAyICIAIoAhggBigCEEEIbWo2AhggBkEANgIQQQAgACACKAIIEQEARQ0BGiAAKALUAkEASgRAQQAhAgNAIAYgAkECdGpBADYCGCACQQFqIgIgACgC1AJIDQALCyAGQQA2AhQgBiAAKAKYAjYCLCAAKAK4Aw0AIAZBADYCKAsgBigCKEUEQCAEIAA2AiwgBCAAKAIYIgMoAgAiCDYCHCAEIAMoAgQiCTYCICAGKAIQIQIgBigCDCEFIAQgBigCJDYCGCAEIAYpAhw3AxAgBCAGKQIUNwMIIAAoAvACQQBKBEADQCABIAtBAnQiCmooAgAhDCAGIApqIggoAmQhAwJ/AkACfyACQQdMBEBBACAEQRxqIAUgAkEAEJUERQ0HGiAEKAIkIQVBASAEKAIoIgJBCEgNARoLIAMgBSACQQhrdUH/AXEiB0ECdGooApABIgkNAUEJCyEJQQAgBEEcaiAFIAIgAyAJEJYEIgNBAEgNBRogBCgCJCEFIAQoAigMAQsgAyAHakGQCWotAAAhAyACIAlrCyECIAgoAowBIQkCQAJAIAgoArQBIg0EQCADBH8gAiADSARAQQAgBEEcaiAFIAIgAxCVBEUNCBogBCgCJCEFIAQoAighAgsgA0ECdCIHQfDFqpIBaigCACIIIAUgAiADayICdXEiAyAIQQAgAyAHQezFqpIBaigCAEwbawVBAAshCCAAIApqKAL0AkECdCAEaiIDQQxqIAMoAgwgCGoiAzYCACAMIAM7AQBBASEIIA1BAkgNAQNAAn8CQAJ/IAJBB0wEQEEAIARBHGogBSACQQAQlQRFDQsaIAQoAiQhBUEBIAQoAigiAkEISA0BGgsgCSAFIAJBCGt1Qf8BcSIDQQJ0aigCkAEiBw0BQQkLIQNBACAEQRxqIAUgAiAJIAMQlgQiA0EASA0JGiAEKAIkIQUgBCgCKAwBCyADIAlqQZAJai0AACEDIAIgB2sLIQIgA0EEdiEHAkAgA0EPcSIDBEAgAiADSARAQQAgBEEcaiAFIAIgAxCVBEUNChogBCgCJCEFIAQoAighAgsgDCAHIAhqIgdBAnRB8MyqkgFqKAIAQQF0aiADQQJ0IghB8MWqkgFqKAIAIgogBSACIANrIgJ1cSIDIApBACADIAhB7MWqkgFqKAIATBtrOwEADAELIAdBD0cNBCAIQQ9qIQcLIAdBAWoiCCANSA0ACyAHQT5MDQEMAgtBASEIIANFDQAgAiADSAR/QQAgBEEcaiAFIAIgAxCVBEUNBhogBCgCJCEFIAQoAigFIAILIANrIQILA0ACfwJAAn8gAkEHTARAQQAgBEEcaiAFIAJBABCVBEUNCRogBCgCJCEFQQEgBCgCKCICQQhIDQEaCyAJIAUgAkEIa3VB/wFxIgNBAnRqKAKQASIHDQFBCQshA0EAIARBHGogBSACIAkgAxCWBCIDQQBIDQcaIAQoAiQhBSAEKAIoDAELIAMgCWpBkAlqLQAAIQMgAiAHawshAiADQQR2IQcCQCADQQ9xIgMEQCACIANIBH9BACAEQRxqIAUgAiADEJUERQ0IGiAEKAIkIQUgBCgCKAUgAgsgA2shAgwBCyAHQQ9HDQILIAcgCGpBAWoiCEHAAEgNAAsLIAtBAWoiCyAAKALwAkgNAAsgBCgCICEJIAQoAhwhCCAAKAIYIQMLIAMgCTYCBCADIAg2AgAgBiACNgIQIAYgBTYCDCAGIAQoAhg2AiQgBiAEKQMQNwIcIAYgBCkDCDcCFAsgBiAGKAIsQQFrNgIsQQELIQcgBEEwaiIAIwRLIAAjBUlyBEAgABBJCyAAJAAgBwupCwEOfyMAQTBrIgQiAiMESyACIwVJcgRAIAIQSQsgAiQAIAAoAtQDIQcCfwJAIAAoApgCRQ0AIAcoAiwNACAAKALQAyICIAIoAhggBygCEEEIbWo2AhggB0EANgIQQQAgACACKAIIEQEARQ0BGiAAKALUAkEASgRAQQAhAgNAIAcgAkECdGpBADYCGCACQQFqIgIgACgC1AJIDQALCyAHQQA2AhQgByAAKAKYAjYCLCAAKAK4Aw0AIAdBADYCKAsgBygCKEUEQCAAKAK0AyENIAAoArADIQ8gBCAANgIsIAQgACgCGCIGKAIAIgg2AhwgBCAGKAIEIgM2AiAgBygCECECIAcoAgwhBSAEIAcoAiQ2AhggBCAHKQIcNwMQIAQgBykCFDcDCCAAKALwAkEASgRAA0AgASAMQQJ0IgtqKAIAIQ4gByALaiIKKAJkIQYCfwJAAn8gAkEHTARAQQAgBEEcaiAFIAJBABCVBEUNBxogBCgCJCEFQQEgBCgCKCICQQhIDQEaCyAGIAUgAkEIa3VB/wFxIgNBAnRqKAKQASIIDQFBCQshA0EAIARBHGogBSACIAYgAxCWBCIDQQBIDQUaIAQoAiQhBSAEKAIoDAELIAMgBmpBkAlqLQAAIQMgAiAIawshAiAKKAKMASEJAkACQCAKKAK0ASIKBEAgAwR/IAIgA0gEQEEAIARBHGogBSACIAMQlQRFDQgaIAQoAiQhBSAEKAIoIQILIANBAnQiBkHwxaqSAWooAgAiCCAFIAIgA2siAnVxIgMgCEEAIAMgBkHsxaqSAWooAgBMG2sFQQALIQMgACALaigC9AJBAnQgBGoiBkEMaiAGKAIMIANqIgM2AgAgDiADOwEAQQEhBiAKQQJIDQEDQAJ/AkACfyACQQdMBEBBACAEQRxqIAUgAkEAEJUERQ0LGiAEKAIkIQVBASAEKAIoIgJBCEgNARoLIAkgBSACQQhrdUH/AXEiA0ECdGooApABIggNAUEJCyEDQQAgBEEcaiAFIAIgCSADEJYEIgNBAEgNCRogBCgCJCEFIAQoAigMAQsgAyAJakGQCWotAAAhAyACIAhrCyECIANBBHYhCAJAIANBD3EiAwRAIAIgA0gEQEEAIARBHGogBSACIAMQlQRFDQoaIAQoAiQhBSAEKAIoIQILIA4gDyAGIAhqIgZBAnRqKAIAQQF0aiADQQJ0IghB8MWqkgFqKAIAIgsgBSACIANrIgJ1cSIDIAtBACADIAhB7MWqkgFqKAIATBtrOwEADAELIAhBD0cNBCAGQQ9qIQYLIAZBAWoiBiAKSA0ACwwBC0EBIQYgA0UNACACIANIBH9BACAEQRxqIAUgAiADEJUERQ0GGiAEKAIkIQUgBCgCKAUgAgsgA2shAgsgBiANSg0AA0ACfwJAAn8gAkEHTARAQQAgBEEcaiAFIAJBABCVBEUNCRogBCgCJCEFQQEgBCgCKCICQQhIDQEaCyAJIAUgAkEIa3VB/wFxIgNBAnRqKAKQASIIDQFBCQshA0EAIARBHGogBSACIAkgAxCWBCIDQQBIDQcaIAQoAiQhBSAEKAIoDAELIAMgCWpBkAlqLQAAIQMgAiAIawshAiADQQR2IQgCQCADQQ9xIgMEQCACIANIBH9BACAEQRxqIAUgAiADEJUERQ0IGiAEKAIkIQUgBCgCKAUgAgsgA2shAgwBCyAIQQ9HDQILIAYgCGpBAWoiBiANTA0ACwsgDEEBaiIMIAAoAvACSA0ACyAAKAIYIQYgBCgCHCEIIAQoAiAhAwsgBiADNgIEIAYgCDYCACAHIAI2AhAgByAFNgIMIAcgBCgCGDYCJCAHIAQpAxA3AhwgByAEKQMINwIUCyAHIAcoAixBAWs2AixBAQshCCAEQTBqIgAjBEsgACMFSXIEQCAAEEkLIAAkACAIC/oCAQZ/IAAoAgQhByAAKAIAIQYCQAJAIAAoAhAiBSgCuAMEQCAGIQQMAQsgAkEYSgRAIAIhCCAGIQQMAgsDQCAHRQRAIAUgBSgCGCgCDBEBAEUEQEEADwsgBSgCGCIEKAIEIQcgBCgCACEGCyAGQQFqIQQgB0EBayEHAkAgBi0AACIIQf8BRgRAA0AgB0UEQCAFIAUoAhgoAgwRAQBFBEBBAA8LIAUoAhgiBCgCBCEHIAQoAgAhBAsgB0EBayEHIAQtAAAhBkH/ASEIIARBAWohBCAGQf8BRg0ACyAGDQELIAggAUEIdHIhASACQRFIIQkgBCEGIAJBCGoiCCECIAkNAQwDCwsgBSAGNgK4AwsgAiADTgRAIAIhCAwBCyAFKALUAygCKEUEQCAFKAIAIgNB+AA2AhQgBUF/IAMoAgQRAgAgBSgC1ANBATYCKAtBGSEIIAFBGSACa3QhAQsgACAINgIMIAAgATYCCCAAIAc2AgQgACAENgIAQQEL+AEBAn8gAiAESARAIAAgASACIAQQlQRFBEBBfw8LIAAoAgwhAiAAKAIIIQELIARBAnQiBkHwxaqSAWooAgAgASACIARrIgJ1cSIFIAMgBmooAgBKBEADQCACQQBMBEAgACABIAJBARCVBEUEQEF/DwsgACgCDCECIAAoAgghAQsgASACQQFrIgJ2QQFxIAVBAXRyIgUgAyAEQQFqIgRBAnRqKAIASg0ACwsgACACNgIMIAAgATYCCCAEQRFOBEAgACgCECIAKAIAIgFB+QA2AhQgAEF/IAEoAgQRAgBBAA8LIAMoAowBIAMgBEECdGooAkggBWpqLQARC9wCAQl/IAAoAsQDIgEoAhAEQCABAn8CQCAAKAJQRQ0AIAAoAuABRQ0AIAAoAqABRQ0AIAEoAnAiAkUEQCABIABBASAAKAIkQRhsIAAoAgQoAgARBAAiAjYCcAsgACgCJEEATA0AIAAoAtgBIQMDQCADKAJQIgFFDQEgAS8BAEUNASABLwECRQ0BIAEvARBFDQEgAS8BIEUNASABLwESRQ0BIAEvAQRFDQEgACgCoAEgBUEIdGoiASgCAEEASA0BIAIgASgCBDYCBCABKAIEIQYgAiABKAIINgIIIAEoAgghByACIAEoAgw2AgwgASgCDCEIIAIgASgCEDYCECABKAIQIQkgAiABKAIUNgIUQQEgBCAJIAEoAhRyIAggBiAHcnJyGyEEIANB2ABqIQMgAkEYaiECIAVBAWoiBSAAKAIkSA0AC0GQAiAEDQEaC0GMAgs2AgwLIABBADYCnAELXQECfyAAQQA2ApQBIAAoAsQDIQECQCAAKALUAkECTgRAIAFBATYCHAwBCyAAKALYAiECIAAoAswCQQFHBEAgASACKAIMNgIcDAELIAEgAigCTDYCHAsgAUIANwIUC6YDAQ1/IAAoAswCQQFrIQsgACgCxAMhDAJAA0AgACgCkAEiAyAAKAKYASIETgRAIAMgBEcNAiAAKAKUASAAKAKcAUsNAgsgACAAKALMAygCABEBAA0AC0EADwsgACgCJEEASgRAIAAoAtgBIQIDQAJAIAIoAjRFDQAgACAMIAVBAnQiA2ooAkggAigCDCIEIAAoApwBbCAEQQAgACgCBCgCIBELACENAn8gCyAAKAKcAUsEQCACKAIMDAELIAIoAiAgAigCDCIEcCIGIAQgBhsLIgZBAEwNACAAKALYAyADaigCBCEOIAEgA2ooAgAhByACKAIcIQNBACEIA0BBACEEIAMEQCANIAhBAnRqKAIAIQNBACEJQQAhCgNAIAAgAiADIAcgCSAOEQYAIANBgAFqIQMgAigCJCAJaiEJIApBAWoiCiACKAIcIgRJDQALCyAHIAIoAihBAnRqIQcgBCEDIAhBAWoiCCAGRw0ACwsgAkHYAGohAiAFQQFqIgUgACgCJEgNAAsLIAAgACgCnAFBAWoiATYCnAFBA0EEIAEgACgCzAJJGwvlBQESfyMAQRBrIggiASMESyABIwVJcgRAIAEQSQsgASQAIAAoAsQDIQMgACgC1AJBAEoEQEEAIQEDQCAIIAFBAnQiAmogACADIAAgAmooAtgCIgIoAgRBAnRqKAJIIAIoAgwiAiAAKAKUAWwgAkEBIAAoAgQoAiARCwA2AgAgAUEBaiIBIAAoAtQCSA0ACwsCfyADKAIYIgcgAygCHCICSARAIANBIGohDSAAKALoAiEBIAMoAhQhBANAIAEgBEsEQANAQQAhCUEAIQIgACgC1AIiDkEASgRAA0AgACAJQQJ0IgFqKALYAiIFKAI8Ig9BAEoEQCAFKAI4IgUgBGwhECAFQXxxIREgBUEDcSELIAEgCGooAgAhEkEAIQoDQAJAIAVBAEwNACASIAcgCmpBAnRqKAIAIBBBB3RqIQFBACEMIAVBBE8EQANAIAMgAkECdGoiBiABQYABajYCJCAGIAE2AiAgBiABQYACajYCKCAGIAFBgANqNgIsIAJBBGohAiABQYAEaiEBIAxBBGoiDCARRw0ACwtBACEGIAtFDQADQCADIAJBAnRqIAE2AiAgAkEBaiECIAFBgAFqIQEgBkEBaiIGIAtHDQALCyAKQQFqIgogD0cNAAsLIAlBAWoiCSAORw0ACwsgACANIAAoAtQDKAIEEQMARQRAIAMgBDYCFCADIAc2AhhBAAwFCyAEQQFqIgQgACgC6AIiAUkNAAsgAygCHCECC0EAIQQgA0EANgIUIAdBAWoiByACSA0ACwsgACAAKAKUAUEBaiIDNgKUASAAKALMAiICIANLBEAgACgCxAMhAQJAIAAoAtQCQQJOBEAgAUEBNgIcDAELIAAoAtgCIQAgAkEBayADSwRAIAEgACgCDDYCHAwBCyABIAAoAkw2AhwLIAFCADcCFEEDDAELIAAgACgCzAMoAgwRAABBBAshASAIQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkACABC44GARN/IAAoAswCIQQCQCAAKALEAyIFKAIYIgggBSgCHCICSARAIARBAWshESAAKALoAkEBayENIAVBIGohCyAFKAIUIQYDQCAGIA1NBEADQCAAKAK0AwRAIAsoAgBBACAAKALwAkEHdBCXCxoLIAAgCyAAKALUAygCBBEDAEUNBCAAKALUAiICQQBKBEBBACEHQQAhDgNAAkAgACAOQQJ0aigC2AIiAygCNEUEQCADKAJAIAdqIQcMAQsgAygCPCIEQQBMDQAgAygCRCAGbCESIAMoAgRBAnQiAiAAKALYA2ooAgQhDyABIAJqKAIAIAMoAigiAiAIbEECdGohCUEBIANBOEHIACAGIA1JG2ooAgAiDCAMQQFMGyIKQf7///8HcSETIApBAXEhFEEAIQoDQAJAAkAgESAAKAKUAU0EQCADKAJMIAggCmpMDQIgDEEASg0BDAILIAxBAEwNAQtBACEEIBIhAkEAIRAgDEECTgRAA0AgACADIAsgBCAHakECdGooAgAgCSACIA8RBgAgACADIAsgBEEBciAHakECdGooAgAgCSADKAIkIAJqIgIgDxEGACAEQQJqIQQgAygCJCACaiECIBBBAmoiECATRw0ACwsgFARAIAAgAyAFIAQgB2pBAnRqKAIgIAkgAiAPEQYACyADKAI8IQQgAygCKCECCyAJIAJBAnRqIQkgAygCOCAHaiEHIApBAWoiCiAESA0ACyAAKALUAiECCyAOQQFqIg4gAkgNAAsLIAZBAWoiBiANTQ0ACyAFKAIcIQILQQAhBiAFQQA2AhQgCEEBaiIIIAJIDQALIAAoAswCIQQLIAAgACgCnAFBAWo2ApwBIAAgACgClAFBAWoiAjYClAEgAiAESQRAIAAoAsQDIQECQCAAKALUAkECTgRAIAFBATYCHAwBCyAAKALYAiEAIARBAWsgAksEQCABIAAoAgw2AhwMAQsgASAAKAJMNgIcCyABQgA3AhRBAw8LIAAgACgCzAMoAgwRAABBBA8LIAUgBjYCFCAFIAg2AhhBAAsEAEEAC78LASx/IwBBgAFrIgciAiMESyACIwVJcgRAIAIQSQsgAiQAIAAoAswCQQFrIRwgACgCxAMhFAJ/AkADQCAAKAKQASICIAAoApgBIgZKDQEgACgCzAMiDCgCFA0BIAIgBkYEQCAAKAKUASAAKAKcASAAKAKcA0VqSw0CCyAAIAwoAgARAQANAAtBAAwBCyAAKAIkQQBKBEAgACgC2AEhCANAAkAgCCgCNEUNAAJ/IBwgACgCnAEiE0sEQCAIKAIMIgJBAXQhCiACDAELIAgoAiAgCCgCDCICcCIGIAIgBhsiCgshFQJ/IBMEQCAAIBQgD0ECdGooAkggAiATQQFrbCACIApqQQAgACgCBCgCIBELACAIKAIMQQJ0agwBCyAAIBQgD0ECdGooAkhBACAKQQAgACgCBCgCIBELAAshKiAVQQBMDQAgD0ECdCIMIAAoAtgDaigCBCErIBVBAWshLCAUKAJwIA9BGGxqIRAgCCgCUCICLwEEIgZBCHQhHSAGQQd0IR4gAi8BEiIGQQh0IR8gBkEHdCEgIAIvAQAiBkEFbCEtIAIvASAiC0EIdCEhIAtBB3QhIiAGQQlsISMgAi8BECILQQh0ISQgC0EHdCElIAIvAQIiAkEIdCEmIAJBB3QhJyAGQSRsISggASAMaigCACEWQQAhEQNAICogEUECdGoiAigCACIKIQ4gESATcgRAIAJBBGsoAgAhDgsgCCgCHEEBayEpQQAhFwJ/IBMgHE8EQCAKIBEgLEYNARoLIAIoAgQLIhguAQAiGSECIAouAQAiCyEGIA4uAQAiGiEMQQAhGwNAIAwhBSAaIQwgBiEJIAshBiACIQ0gGSECIAcgCkGAARCVCxogFyApSQRAIBguAYABIRkgDi4BgAEhGiAKLgGAASELCwJAIBAoAgQiBEUNACAHLwECDQAgBwJ/ICggCSALa2wiA0EATgRAIAMgJ2ogJm0iAyAEQQBMDQEaIANBASAEdCIEQQFrIAMgBEgbDAELQQAgJyADayAmbSIDQQEgBHQiEkEBayADIBJIGyADIARBAEobaws7AQILAkAgECgCCCIERQ0AIAcvARANACAHAn8gKCAMIAJrbCIDQQBOBEAgAyAlaiAkbSIDIARBAEwNARogA0EBIAR0IgRBAWsgAyAESBsMAQtBACAlIANrICRtIgNBASAEdCISQQFrIAMgEkgbIAMgBEEAShtrCzsBEAsCQCAQKAIMIgRFDQAgBy8BIA0AIAcCfyAjIAwgBkEBdGsgAmpsIgNBAE4EQCADICJqICFtIgMgBEEATA0BGiADQQEgBHQiBEEBayADIARIGwwBC0EAICIgA2sgIW0iA0EBIAR0IhJBAWsgAyASSBsgAyAEQQBKG2sLOwEgCwJAIBAoAhAiBEUNACAHLwESDQAgBwJ/IC0gBSANIBpqayAZamwiBUEATgRAIAUgIGogH20iBSAEQQBMDQEaIAVBASAEdCINQQFrIAUgDUgbDAELQQAgICAFayAfbSIFQQEgBHQiDUEBayAFIA1IGyAFIARBAEobaws7ARILAkAgECgCFCIFRQ0AIAcvAQQNACAHAn8gIyAJIAZBAXRrIAtqbCIJQQBOBEAgCSAeaiAdbSIJIAVBAEwNARogCUEBIAV0IgVBAWsgBSAJShsMAQtBACAeIAlrIB1tIglBASAFdCINQQFrIAkgDUgbIAkgBUEAShtrCzsBBAsgACAIIAcgFiAbICsRBgAgGEGAAWohGCAOQYABaiEOIApBgAFqIQogCCgCJCAbaiEbIBdBAWoiFyApTQ0ACyAWIAgoAihBAnRqIRYgEUEBaiIRIBVHDQALCyAIQdgAaiEIIA9BAWoiDyAAKAIkSA0ACwsgACAAKAKcAUEBaiIBNgKcAUEDQQQgASAAKALMAkkbCyEBIAdBgAFqIgAjBEsgACMFSXIEQCAAEEkLIAAkACABC6cHARF/IAAoAsADIQcCQAJAAkAgAQ4DAAIBAgsgACgC3AMoAggEQCAHQZICNgIEIAAoAiQiEEEASgRAIAAoAsgCIg5BAmshESAOQQJqIRIgACgC2AEhDQNAIA9BAnQiACAHKAJAaigCACEBIAcoAjwgAGooAgAhAiAAIAdqKAIIIQQCQCANKAIoIA0oAgxsIA5tIgUgEmwiCUEATA0AQQAhBkEAIQAgCUEETwRAIAlBfHEhC0EAIQoDQCABIABBAnQiA2ogAyAEaigCACIINgIAIAIgA2ogCDYCACABIANBBHIiCGogBCAIaigCACIMNgIAIAIgCGogDDYCACABIANBCHIiCGogBCAIaigCACIMNgIAIAIgCGogDDYCACABIANBDHIiA2ogAyAEaigCACIINgIAIAIgA2ogCDYCACAAQQRqIQAgCkEEaiIKIAtHDQALCyAJQQNxIglFDQADQCABIABBAnQiA2ogAyAEaigCACIKNgIAIAIgA2ogCjYCACAAQQFqIQAgBkEBaiIGIAlHDQALCwJAIAVBAEwNAEEBIAVBAXQiBiAGQQFMGyIKQQFxIQggBSARbCEDIAUgDmwhCUEAIQAgBkECTgRAIApB/v///wdxIQpBACEGA0AgASAAIANqQQJ0IgtqIAQgACAJakECdCIMaigCADYCACABIAxqIAQgC2ooAgA2AgAgASAAQQFyIgsgA2pBAnQiDGogBCAJIAtqQQJ0IgtqKAIANgIAIAEgC2ogBCAMaigCADYCACAAQQJqIQAgBkECaiIGIApHDQALCyAIBEAgASAAIANqQQJ0IgZqIAQgACAJakECdCIAaigCADYCACAAIAFqIAQgBmooAgA2AgALQQAhBEEAIQEgBUEETwRAIAVBfHEhBkEAIQADQCACIAEgBWtBAnRqIAIoAgA2AgAgAiABQQFyIAVrQQJ0aiACKAIANgIAIAIgAUECciAFa0ECdGogAigCADYCACACIAFBA3IgBWtBAnRqIAIoAgA2AgAgAUEEaiEBIABBBGoiACAGRw0ACwsgBUEDcSIARQ0AA0AgAiABIAVrQQJ0aiACKAIANgIAIAFBAWohASAEQQFqIgQgAEcNAAsLIA1B2ABqIQ0gD0EBaiIPIBBHDQALCyAHQQA2AkwgB0IANwJEIAdBADYCOA8LIAdBkwI2AgQgByAHKAI0NgIwDwsgB0GUAjYCBA8LIAAoAgAiAUEDNgIUIAAgASgCABEAAAu4BwEPfwJAIAAoAsADIgQoAjhFBEAgACAEIAQoAkRBAnRqKAI8IAAoAsQDKAIMEQMARQ0BIARBATYCOCAEIAQoAkxBAWo2AkwLAkACQAJAIAQoAkgOAwECAAMLIAAgBCAEKAJEQQJ0aigCPCAEQTBqIAQoAjQgASACIAMgACgCyAMoAgQRDgAgBCgCMCAEKAI0SQ0CIARBADYCSCACKAIAIANPDQILIARBADYCMCAEIAAoAsgCIg1BAWs2AjQCQCAEKAJMIAAoAswCRw0AIAAoAiQiEEEATA0AIAAoAsADIg4gDigCREECdGohESAAKALYASEHA0AgBygCMCAHKAIoIAcoAgxsIgVwIgYgBSAGGyEGIAUgDW0hBSAIRQRAIA4gBkEBayAFbUEBajYCNAsCQCAFQQBMDQBBASAFQQF0IgUgBUEBTBsiCUEDcSEPIBEoAjwgCEECdGooAgAiCiAGQQJ0akEEayELQQAhDEEAIQUgCUEBa0EDTwRAIAlB/P///wdxIRJBACEJA0AgCiAFIAZqQQJ0aiALKAIANgIAIAogBUEBciAGakECdGogCygCADYCACAKIAVBAnIgBmpBAnRqIAsoAgA2AgAgCiAFQQNyIAZqQQJ0aiALKAIANgIAIAVBBGohBSAJQQRqIgkgEkcNAAsLIA9FDQADQCAKIAUgBmpBAnRqIAsoAgA2AgAgBUEBaiEFIAxBAWoiDCAPRw0ACwsgB0HYAGohByAIQQFqIgggEEcNAAsLIARBATYCSAsgACAEIAQoAkRBAnRqKAI8IARBMGogBCgCNCABIAIgAyAAKALIAygCBBEOACAEKAIwIAQoAjRJDQAgACgCyAIhAQJAIAQoAkxBAUcNACAAKAIkIgpBAEwNACABQQJqIQsgAUEBaiEOIAAoAsADIQYgACgC2AEhB0EAIQgDQCAHKAIoIAcoAgxsIAFtIgBBAEoEQCAIQQJ0IgMgBigCQGooAgAhAiAGKAI8IANqKAIAIQMgACALbCEJIAAgDmwhD0EAIQUDQCADIAUgAGtBAnQiDGogAyAFIA9qQQJ0Ig1qKAIANgIAIAIgDGogAiANaigCADYCACADIAUgCWpBAnQiDGogAyAFQQJ0Ig1qKAIANgIAIAIgDGogAiANaigCADYCACAFQQFqIgUgAEcNAAsLIAdB2ABqIQcgCEEBaiIIIApHDQALCyAEQQA2AjggBEECNgJIIAQgAUECajYCNCAEIAFBAWo2AjAgBCAEKAJEQQFzNgJECwthAQJ/AkAgACgCwAMiBCgCMCAEKAI0IgVPBEAgACAEQQhqIAAoAsQDKAIMEQMARQ0BIARBADYCMCAEKAI0IQULIAAgBEEIaiAEQTBqIAUgASACIAMgACgCyAMoAgQRDgALCxwAIABBAEEAQQAgASACIAMgACgCyAMoAgQRDgAL2QEBA38CQCAAKAK0Ag0AAkAgACgCKEEDaw4FAAEBAQABCyAAKAIkQQNHDQAgACgCLEECRw0AIAAoAnhBA0cNACAAKAKwAg0AIAAoAtgBIgEoAghBAkcNACABKAJgQQFHDQAgASgCuAFBAUcNACABKAIMQQJKDQAgASgCZEEBRw0AIAEoArwBQQFHDQAgASgCJCICIAAoAsQCRw0AIAEoAnwgAkcNACABKALUASACRw0AIAEoAigiAiAAKALIAkcNACABKAKAASACRw0AIAEoAtgBIAJGIQMLIAMLLwEBfyAAKAK8AyEBIAAoAlQEQCAAIAAoAuQDKAIIEQAACyABIAEoAgxBAWo2AgwLhQMBA38CQCAAAn8gACgCvAMiASgCCARAIAFBADYCCCAAQQAgACgC5AMoAgARAgAgAEECIAAoAsgDKAIAEQIAQQIMAQsCQCAAKAJURQ0AIAAoAogBDQACQCAAKAJcRQ0AIAAoAmxFDQAgACABKAIYNgLkAyABQQE2AggMAQsgACgCZARAIAAgASgCFDYC5AMMAQsgACgCACICQS82AhQgACACKAIAEQAACyAAIAAoAtgDKAIAEQAAIAAgACgCxAMoAggRAAAgACgCRA0BIAEoAhBFBEAgACAAKALgAygCABEAAAsgACAAKALcAygCABEAACAAKAJUBEAgACABKAIIIAAoAuQDKAIAEQIACyAAQQNBACABKAIIGyAAKALIAygCABECAEEACyAAKALAAygCABECAAsCQCAAKAIIIgJFDQAgAiABKAIMIgM2AgwgAiADQQJBASABKAIIG2oiATYCECAAKAJARQ0AIAAoAswDKAIUDQAgAkECQQEgACgCbBsgAWo2AhALCxsBAX8gACgC3AMiAUEANgIkIAEgACgCdDYCLAuGBQEOfyACQQJ0IgUgASgCCGooAgAhCiABKAIEIAVqKAIAIQsgASgCACACQQN0aiIBKAIAIQcgASgCBCEIIAMoAgQhAiADKAIAIQMgACgC0AIhBCAAKALcAyIBKAIcIQ4gASgCGCEPIAEoAhQhECABKAIQIREgACgCcCIBQQJPBH8gAUEBdiEJA0AgECALLQAAQQJ0IgFqKAIAIQwgDyAKLQAAQQJ0IgZqKAIAIQUgASAOaigCACEBIAMgBCAGIBFqKAIAIg0gBy0AACIGamotAAA6AAAgAyAEIAYgASAFakEQdSIFamotAAA6AAEgAyAEIAYgDGpqLQAAOgACIAMgBCANIActAAEiAWpqLQAAOgADIAMgBCABIAVqai0AADoABCADIAQgASAMamotAAA6AAUgAiAEIA0gCC0AACIBamotAAA6AAAgAiAEIAEgBWpqLQAAOgABIAIgBCABIAxqai0AADoAAiACIAQgDSAILQABIgFqai0AADoAAyACIAQgASAFamotAAA6AAQgAiAEIAEgDGpqLQAAOgAFIAJBBmohAiAIQQJqIQggA0EGaiEDIAdBAmohByAKQQFqIQogC0EBaiELIAlBAWsiCQ0ACyAAKAJwBSABC0EBcQRAIBAgCy0AAEECdCIAaigCACEJIA8gCi0AAEECdCIBaigCACEFIAAgDmooAgAhACADIAQgASARaigCACIBIActAAAiBmpqLQAAOgAAIAMgBCAGIAAgBWpBEHUiAGpqLQAAOgABIAMgBCAGIAlqai0AADoAAiACIAQgASAILQAAIgNqai0AADoAACACIAQgACADamotAAA6AAEgAiAEIAMgCWpqLQAAOgACCwuzAgEDfyMAQRBrIggiAyMESyADIwVJcgRAIAMQSQsgAyQAAkACQCAAKALcAyIHKAIkBEAgB0EgakEAIAQgBSgCAEECdGpBAEEBIAcoAigQ/AQgB0EANgIkIAUgBSgCAEEBajYCACAHIAcoAixBAWs2AiwMAQsgBygCLCEJIAggBCAFKAIAIgNBAnRqIgQoAgA2AgggCAJ/QQIgCSAGIANrIgMgAyAJSxsiAyADQQJPGyIDQQJPBEAgBCgCBAwBCyAHQQE2AiQgBygCIAs2AgwgACABIAIoAgAgCEEIaiAHKAIMEQcAIAcoAiQhACAFIAUoAgAgA2o2AgAgByAHKAIsIANrNgIsIAANAQsgAiACKAIAQQFqNgIACyAIQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAvCAwEMfyACQQJ0IgIgASgCCGooAgAhBSABKAIEIAJqKAIAIQYgASgCACACaigCACEHIAMoAgAhASAAKALQAiECIAAoAtwDIgMoAhwhCCADKAIYIQsgAygCFCEMIAMoAhAhDSAAKAJwIgNBAk8EfyADQQF2IQMDQCAMIAYtAABBAnQiBGooAgAhDiALIAUtAABBAnQiCWooAgAhCiAEIAhqKAIAIQ8gASACIAkgDWooAgAiCSAHLQAAIgRqai0AADoAACABIAIgBCAKIA9qQRB1Igpqai0AADoAASABIAIgBCAOamotAAA6AAIgASACIAkgBy0AASIEamotAAA6AAMgASACIAQgCmpqLQAAOgAEIAEgAiAEIA5qai0AADoABSABQQZqIQEgB0ECaiEHIAVBAWohBSAGQQFqIQYgA0EBayIDDQALIAAoAnAFIAMLQQFxBEAgDCAGLQAAQQJ0IgBqKAIAIQMgCyAFLQAAQQJ0IgVqKAIAIQYgACAIaigCACEIIAEgAiAHLQAAIgAgBSANaigCAGpqLQAAOgAAIAEgAiAAIAYgCGpBEHVqai0AADoAASABIAIgACADamotAAA6AAILCzwAIAAgASACKAIAIAQgBSgCAEECdGogACgC3AMoAgwRBwAgBSAFKAIAQQFqNgIAIAIgAigCAEEBajYCAAvcAQEBfyAAKALIAyECAkACQAJAAkACQCABDgQAAwIBAwsgACgCVARAIAJBnQI2AgQgAigCDA0EIAIgACACKAIIQQAgAigCEEEBIAAoAgQoAhwRCwA2AgwMBAsgAiAAKALcAygCBDYCBAwDCyACKAIIRQRAIAAoAgAiAUEDNgIUIAAgASgCABEAAAsgAkGeAjYCBAwCCyACKAIIRQRAIAAoAgAiAUEDNgIUIAAgASgCABEAAAsgAkGfAjYCBAwBCyAAKAIAIgFBAzYCFCAAIAEoAgARAAALIAJCADcCFAu1AQEEfyMAQRBrIgcjBEsgByMFSXIEQCAHEEkLIAckACAAKALIAyIIKAIQIQkgBSgCACEKIAdBADYCDCAAIAEgAiADIAgoAgwgB0EMaiAGIAprIgEgCSABIAlJGyAAKALcAygCBBEOACAAIAgoAgwgBCAFKAIAQQJ0aiAHKAIMIAAoAuQDKAIEEQcAIAUgBSgCACAHKAIMajYCACAHQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAvTAQECfyAAKALIAyIEQRhqIQgCQCAEKAIYIgYEQCAEKAIMIQcMAQsgBCAAIAQoAgggBCgCFCAEKAIQQQEgACgCBCgCHBELACIHNgIMIAQoAhghBgsgACABIAIgAyAHIAggBCgCECAAKALcAygCBBEOACAGIAQoAhgiA0kEfyAAIAQoAgwgBkECdGpBACADIAZrIgEgACgC5AMoAgQRBwAgBSAFKAIAIAFqNgIAIAQoAhgFIAMLIAQoAhAiAE8EQCAEQQA2AhggBCAEKAIUIABqNgIUCwvYAQACQCAAKALIAyIBKAIYIgIEQCABKAIMIQMMAQsgASAAIAEoAgggASgCFCABKAIQQQAgACgCBCgCHBELACIDNgIMIAEoAhghAgsgACADIAJBAnRqIAQgBSgCACIDQQJ0aiABKAIQIAJrIgIgBiADayIDIAIgA0kbIgIgACgCdCABKAIUayIDIAIgA0kbIgIgACgC5AMoAgQRBwAgBSAFKAIAIAJqNgIAIAEgASgCGCACaiIANgIYIAAgASgCECIATwRAIAFBADYCGCABIAEoAhQgAGo2AhQLC6MCAQV/IAAoAtwDIgMoAlwiByAAKALAAiIITgRAIAAoAiRBAEoEQCADQQxqIQogACgC2AEhCEEAIQcDQCAAIAggASAHQQJ0IglqKAIAIAMgCWoiCygCZCACKAIAbEECdGogCSAKaiALKAI0EQcAIAhB2ABqIQggB0EBaiIHIAAoAiRIDQALIAAoAsACIQgLIANBADYCXEEAIQcLIAAgA0EMaiAHIAQgBSgCACIBQQJ0aiAIIAdrIgQgAygCYCIHIAQgB0kbIgQgBiABayIBIAEgBEsbIgEgACgC4AMoAgQRBgAgBSAFKAIAIAFqNgIAIAMgAygCYCABazYCYCADIAMoAlwgAWoiATYCXCAAKALAAiABTARAIAIgAigCAEEBajYCAAsLHwEBfyAAKALcAyIBIAAoAsACNgJcIAEgACgCdDYCYAsJACADQQA2AgALCQAgAyACNgIAC4QBAQR/IAAoAsACIgFBAEoEQCADKAIAIQUDQCAAKAJwIgNBAEoEQCADIAUgBEECdCIDaigCACIBaiEGIAIgA2ooAgAhAwNAIAEgAy0AACIHOgABIAEgBzoAACADQQFqIQMgAUECaiIBIAZJDQALIAAoAsACIQELIARBAWoiBCABSA0ACwsLngEBBX8gACgCwAJBAEoEQCADKAIAIQUDQCAFIAQgBSAEQQFyQQEgACgCcCIBQQBKBH8gBSAEQQJ0aigCACIDIAFqIQcgAiAGQQJ0aigCACEBA0AgAyABLQAAIgg6AAEgAyAIOgAAIAFBAWohASADQQJqIgMgB0kNAAsgACgCcAUgAQsQ/AQgBkEBaiEGIARBAmoiBCAAKALAAkgNAAsLC8IBAQd/IAAoAsACQQBKBEAgACgC3AMgASgCBGoiAS0AjAEhBSADKAIAIQYgAS0AlgEiCEEBayEJA0AgACgCcCIBQQBKBEAgBiAEQQJ0aigCACIDIAFqIQogAiAHQQJ0aigCACEBA0AgBQRAIAMgAS0AACAFEJcLIAVqIQMLIAFBAWohASADIApJDQALCyAIQQJPBEAgBiAEIAYgBEEBaiAJIAAoAnAQ/AQLIAdBAWohByAEIAhqIgQgACgCwAJIDQALCwtUACAAQgA3AmggAEGnAjYCECAAQagCNgIMIABBqQI2AgggAEGqAjYCBCAAQasCNgIAIABCADcCfCAAQv4ANwJ0IABB0MaqkgE2AnAgAEEANgIUIAALFQAgACgCACIAQQA2AhQgAEEANgJsC70CAgR/A34jAEEwayIEIgMjBEsgAyMFSXIEQCADEEkLIAMkAAJAAkACfwJAIAAoAgAiAigCFCIAQQBMDQAgACACKAJ0Sg0AIAIoAnAgAEECdGoMAQsgAigCeCIDRQ0BIAAgAigCfCIFSA0BIAAgAigCgAFKDQEgAyAAIAVrQQJ0agsoAgAiAw0BCyACIAA2AhggAigCcCgCACEDCyADIQACQAJAA0AgAC0AACIFRQ0BIABBAWohACAFQSVHDQALIAAtAABB8wBHDQAgBCACQRhqNgIgIAEgAyAEQSBqEOAFGgwBCyACKQIgIQYgAikCKCEHIAIpAhghCCAEIAIpAjA3AxggBCAHNwMQIAQgBjcDCCAEIAg3AwAgASADIAQQ4AUaCyAEQTBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAtsAQJ/IwBB4AFrIgEjBEsgASMFSXIEQCABEEkLIAEkACAAIAFBEGoiAiAAKAIAKAIMEQIAIAEgAjYCAEHgkauSASgCAEGT7qmSASABEKwFGiABQeABaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALWwEBfyAAKAIAIQIgAUEASARAAkAgAigCbCIBBEAgAigCaEEDSA0BCyAAIAIoAggRAAAgAigCbCEBCyACIAFBAWo2AmwPCyABIAIoAmhMBEAgACACKAIIEQAACwsZACAAIAAoAgAoAggRAAAgABDiA0EBEAAAC44JAg99BX8jAEGAAmsiFSMESyAVIwVJcgRAIBUQSQsgFSQAIAAoAtACIRcgASgCVCEBIBUhAEEIIRQDQCAAAn8CQCACLwEQIhggAi8BICIWcg0AQQAhFiACLwEwDQAgAi8BQA0AIAIvAVANACACLwFgDQAgAi8BcA0AIAAgASoCACACLgEAspQiBjgCwAEgACAGOAKgASAAIAY4AoABIAAgBjgCYCAAIAY4AkAgACAGOAIgIAAgBjgCAEE4DAELIAAgASoCACACLgEAspQiByABKgKAASACLgFAspQiCJIiDSABKgJAIBbBspQiCSABKgLAASACLgFgspQiCpIiBpIiCyABKgJgIAIuATCylCIMIAEqAqABIAIuAVCylCIOkiIPIAEqAiAgGMGylCIQIAEqAuABIAIuAXCylCIRkiISkiIFkzgC4AEgACALIAWSOAIAIAAgByAIkyIHIAkgCpND8wS1P5QgBpMiCJIiCSAOIAyTIgogECARkyILkkNeg+w/lCIMIApDdT0nwJSSIAWTIgWTOALAASAAIAkgBZI4AiAgACAHIAiTIgcgEiAPk0PzBLU/lCAFkyIFkzgCoAEgACAHIAWSOAJAIAAgDSAGkyIGIAwgC0PUi4q/lJIgBZMiBZI4AmAgBiAFkyEGQSALQQJ0aiAGOAIAIAJBAmohAiABQQRqIQEgAEEEaiEAIBRBAUshFiAUQQFrIRQgFg0ACyAXQYADayEAIBUhAkEAIRQDQCADIBRBAnRqKAIAIARqIgEgAAJ/IAIqAgBDACAARJIiByACKgIQIgiSIg0gAioCCCIJIAIqAhgiCpIiBpIiCyACKgIUIgwgAioCDCIOkiIPIAIqAgQiECACKgIcIhGSIhKSIgWSIhOLQwAAAE9dBEAgE6gMAQtBgICAgHgLQf8HcWotAAA6AAAgASAAAn8gCyAFkyILi0MAAABPXQRAIAuoDAELQYCAgIB4C0H/B3FqLQAAOgAHIAEgAAJ/IAcgCJMiByAJIAqTQ/MEtT+UIAaTIgiSIgkgDCAOkyIKIBAgEZMiC5JDXoPsP5QiDCAKQ3U9J8CUkiAFkyIFkiIKi0MAAABPXQRAIAqoDAELQYCAgIB4C0H/B3FqLQAAOgABIAEgAAJ/IAkgBZMiCYtDAAAAT10EQCAJqAwBC0GAgICAeAtB/wdxai0AADoABiABIAACfyAHIAiTIgcgEiAPk0PzBLU/lCAFkyIFkiIIi0MAAABPXQRAIAioDAELQYCAgIB4C0H/B3FqLQAAOgACIAEgAAJ/IAcgBZMiB4tDAAAAT10EQCAHqAwBC0GAgICAeAtB/wdxai0AADoABSABIAACfyANIAaTIgYgDCALQ9SLir+UkiAFkyIFkiIHi0MAAABPXQRAIAeoDAELQYCAgIB4C0H/B3FqLQAAOgADIAEgAAJ/IAYgBZMiBotDAAAAT10EQCAGqAwBC0GAgICAeAtB/wdxai0AADoABCACQSBqIQIgFEEBaiIUQQhHDQALIBVBgAJqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAvbCAERfyMAQYACayILIwRLIAsjBUlyBEAgCxBJCyALJAAgACgC0AIhCSABKAJUIQEgCyEAQQghBQNAIAACfwJAIAIuARAiBiACLwEgIgdyQf//A3ENAEEAIQcgAi8BMA0AIAIvAUANACACLwFQDQAgAi8BYA0AIAIvAXANACAAIAEoAgAgAi4BAGwiBzYCwAEgACAHNgKgASAAIAc2AoABIAAgBzYCYCAAIAc2AkAgACAHNgIgIAAgBzYCAEE4DAELIAAgASgCwAEgAi4BYGwiCCABKAJAIAfBbCIMaiIHIAEoAoABIAIuAUBsIgogASgCACACLgEAbCINaiIOaiIPIAEoAuABIAIuAXBsIhAgASgCICAGbCIRaiISIAEoAqABIAIuAVBsIhMgASgCYCACLgEwbCIUaiIVaiIGazYC4AEgACAGIA9qNgIAIAAgDCAIa0HqAmxBCHUgB2siCCANIAprIgxqIgogESAQayINIBMgFGsiD2pB2QNsQQh1IhAgBiAPQZ0FbEEIdWprIgZrNgLAASAAIAYgCmo2AiAgACAMIAhrIgggEiAVa0HqAmxBCHUgBmsiBms2AqABIAAgBiAIajYCQCAAIBAgDUGVAmxBCHUgBmprIgYgDiAHayIHajYCYCAHIAZrIQdBIAtBAnRqIAc2AgAgAkECaiECIAFBBGohASAAQQRqIQAgBUEBSyEHIAVBAWshBSAHDQALIAlBgANrIQEgCyECQQAhBwNAIAIoAgBBkIABaiEGIAMgB0ECdGooAgAgBGohAAJ/AkAgAigCBCIJIAIoAggiBXINAEEAIQUgAigCDA0AIAIoAhANACACKAIUDQAgAigCGA0AIAIoAhwNACAAIAEgBkEFdkH/B3FqLQAAIgU6AAYgACAFOgAFIAAgBToABCAAIAU6AAMgACAFOgACIAAgBToAASAAIAU6AABBBwwBCyAAIAEgAigCHCIKIAlqIg0gAigCDCIOIAIoAhQiD2oiEGoiCCACKAIYIhEgBWoiDCACKAIQIhIgBmoiE2oiFGpBBXZB/wdxai0AADoAACAAIAEgFCAIa0EFdkH/B3FqLQAAOgAHIAAgASAJIAprIgogDyAOayIJakHZA2xBCHUiDiAJQZ0FbEEIdSAIamsiCSAFIBFrQeoCbEEIdSAMayIIIAYgEmsiBmoiBWpBBXZB/wdxai0AADoAASAAIAEgBSAJa0EFdkH/B3FqLQAAOgAGIAAgASANIBBrQeoCbEEIdSAJayIFIAYgCGsiBmpBBXZB/wdxai0AADoAAiAAIAEgBiAFa0EFdkH/B3FqLQAAOgAFIAAgASAOIApBlQJsQQh1IAVqayIFIBMgDGsiBmpBBXZB/wdxai0AADoAAyABIAYgBWtBBXZB/wdxai0AACEFQQQLIABqIAU6AAAgAkEgaiECIAdBAWoiB0EIRw0ACyALQYACaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALzAkBEn8jAEGAAmsiDSMESyANIwVJcgRAIA0QSQsgDSQAIAAoAtACIRIgASgCVCEBIA0hAEEIIQYDQCAAAn8CQCACLgEQIgggAi8BICIFckH//wNxDQBBACEFIAIvATANACACLwFADQAgAi8BUA0AIAIvAWANACACLwFwDQAgACACLgEAIAEoAgBsQQJ0IgU2AsABIAAgBTYCoAEgACAFNgKAASAAIAU2AmAgACAFNgJAIAAgBTYCICAAIAU2AgBBOAwBCyAAIAEoAsABIAIuAWBsIgkgASgCQCAFwWwiBWpB0SJsIg4gBUH+MGxqIg8gAi4BQCABKAKAAWxBDXQiCiACLgEAIAEoAgBsQQ10QYAIciILaiIQaiIMIAEoAiAgCGwiBSABKALgASACLgFwbCIIakGzRmwiEyAFQYvgAGxqIAUgASgCoAEgAi4BUGwiB2oiESABKAJgIAIuATBsIgUgCGoiFGpBocsAbCIVIBFBhGdsaiIRaiIWa0ELdTYC4AEgACAMIBZqQQt1NgIAIAAgDiAJQd+Jf2xqIgkgCyAKayIOaiIKIBUgFEG7gn9saiILIAUgB2pB/dt+bCIMIAVB1MQBbGpqIgVrQQt1NgLAASAAIAUgCmpBC3U2AiAgACAOIAlrIgUgDCAHQbODAWxqIBFqIgdrQQt1NgKgASAAIAUgB2pBC3U2AkAgACATIAhBjhNsaiALaiIFIBAgD2siCGpBC3U2AmAgCCAFa0ELdSEFQSALQQJ0aiAFNgIAIAJBAmohAiABQQRqIQEgAEEEaiEAIAZBAUshBSAGQQFrIQYgBQ0ACyASQYADayEBIA0hAkEAIQgDQCACKAIAQZCAAWohBiADIAhBAnRqKAIAIARqIQACfwJAIAIoAgQiByACKAIIIgVyDQBBACEFIAIoAgwNACACKAIQDQAgAigCFA0AIAIoAhgNACACKAIcDQAgACABIAZBBXZB/wdxai0AACIGOgAGIAAgBjoABSAAIAY6AAQgACAGOgADIAAgBjoAAiAAIAY6AAEgACAGOgAAQQcMAQsgACABIAIoAhwiEiAHakGzRmwiDiAHQYvgAGxqIAIoAgwiCSASaiIPIAcgAigCFCIHaiIKakGhywBsIgsgCkGEZ2xqIgpqIhAgAigCGCIMIAVqQdEibCITIAVB/jBsaiIFIAIoAhAiESAGakENdCIUaiIVakESdkH/B3FqLQAAOgAAIAAgASAVIBBrQRJ2Qf8HcWotAAA6AAcgACABIAsgD0G7gn9saiIPIAcgCWpB/dt+bCILIAlB1MQBbGpqIgkgEyAMQd+Jf2xqIhAgBiARa0ENdCIGaiIMakESdkH/B3FqLQAAOgABIAAgASAMIAlrQRJ2Qf8HcWotAAA6AAYgACABIAsgB0GzgwFsaiAKaiIHIAYgEGsiBmpBEnZB/wdxai0AADoAAiAAIAEgBiAHa0ESdkH/B3FqLQAAOgAFIAAgASAOIBJBjhNsaiAPaiIGIBQgBWsiBWpBEnZB/wdxai0AADoAAyABIAUgBmtBEnZB/wdxai0AACEGQQQLIABqIAY6AAAgAkEgaiECIAhBAWoiCEEIRw0ACyANQYACaiIAIwRLIAAjBUlyBEAgABBJCyAAJAAL6QYBEH8jAEHQAWsiDiMESyAOIwVJcgRAIA4QSQsgDiQAIAAoAtACIQ8gASgCVCEAIA4hAQNAIAAoAqABIQggAi4BUCEJIAAoAiAhDSACLgEQIRAgACgCYCEKIAIuATAhEiABIAIuAQAgACgCAGxBDXRBgAhyIgYgACgCgAEgAi4BQGwiCyAAKALAASACLgFgbCIFIAAoAkAgAi4BIGwiDGoiEWtBwdoAbGpBC3U2AlQgASARQcbRAGwgBmoiESALIAVrQbc4bCITIAVBg3tsamoiFCAIIAlsIgUgDSAQbCIIakGjJ2wiDSAKIBJsIgkgCGpB7ztsIhAgCCAJa0HzCmwiCGtqIgprQQt1NgKoASABIAogFGpBC3U2AgAgASAMIAtrQZIUbCIKIAxB8eF+bGogEWoiDCAFIAlqQeGnf2wiCSANIAVB3vcAbGpqIgVrQQt1NgJwIAEgBSAMakELdTYCOCABIAtBlYp/bCAGaiAKaiATaiILIAggEGogCWoiBmtBC3U2AowBIAEgBiALakELdTYCHCABQQRqIQEgAEEEaiEAIAJBAmohAiAHQQFqIgdBB0cNAAsgD0GAA2shACAOIQJBACELA0AgAyALQQJ0aigCACAEaiIBIAAgAigCDCIGIAIoAgQiB2pB7ztsIg8gByAGa0HzCmwiDWsgAigCFCIFIAdqQaMnbCIQaiIKIAIoAhAiByACKAIYIgxrQbc4bCISIAxBg3tsaiACKAIAQQ10QYCAiMAAaiIIIAwgAigCCCIJaiIMQcbRAGxqIhFqIhNqQRJ2Qf8HcWotAAA6AAAgASAAIBMgCmtBEnZB/wdxai0AADoABiABIAAgBSAGakHhp39sIgYgDSAPamoiDyAJIAdrQZIUbCINIAdBlYp/bCAIamogEmoiCmpBEnZB/wdxai0AADoAASABIAAgCiAPa0ESdkH/B3FqLQAAOgAFIAEgACAQIAVB3vcAbGogBmoiBiANIAlB8eF+bGogEWoiBWpBEnZB/wdxai0AADoAAiABIAAgBSAGa0ESdkH/B3FqLQAAOgAEIAEgACAHIAxrQcHaAGwgCGpBEnZB/wdxai0AADoAAyACQRxqIQIgC0EBaiILQQdHDQALIA5B0AFqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAuPBQEMfyMAQZABayIIIwRLIAgjBUlyBEAgCBBJCyAIJAAgACgC0AIhDiABKAJUIQAgCCEBA0AgACgCQCEHIAIuASAhCiABIAIuAQAgACgCAGxBDXRBgAhyIgsgACgCgAEgAi4BQGwiDEG+pX9sakELdSIPIAAoAiAgAi4BEGwiBSAAKAJgIAIuATBsIgYgACgCoAEgAi4BUGwiDWprQQJ0IhBrNgJgIAEgDyAQajYCGCABIAcgCmxBsc4AbCIHIAxBoS1sIAtqIgpqIgsgBSANakG2F2wiDCAFIAZqQQ10aiIFa0ELdTYCeCABIAUgC2pBC3U2AgAgASAKIAdrIgUgDCANIAZrQQ10aiIGa0ELdTYCSCABIAUgBmpBC3U2AjAgAUEEaiEBIABBBGohACACQQJqIQIgCUEBaiIJQQZHDQALIA5BgANrIQAgCCECQQAhCQNAIAMgCUECdGooAgAgBGoiASAAIAIoAhQiBSACKAIEIgZqQbYXbCIOIAIoAgwiDSAGakENdGoiByACKAIAQQ10QYCAiMAAaiIKIAIoAhAiC0GhLWxqIgwgAigCCEGxzgBsIg9qIhBqQRJ2Qf8HcWotAAA6AAAgASAAIBAgB2tBEnZB/wdxai0AADoABSABIAAgBiAFIA1qa0ENdCIGIAtBvqV/bCAKaiIHakESdkH/B3FqLQAAOgABIAEgACAHIAZrQRJ2Qf8HcWotAAA6AAQgASAAIA4gBSANa0ENdGoiBSAMIA9rIgZqQRJ2Qf8HcWotAAA6AAIgASAAIAYgBWtBEnZB/wdxai0AADoAAyACQRhqIQIgCUEBaiIJQQZHDQALIAhBkAFqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAuhBAELfyAAKALQAiEGIAEoAlQhACMAQfAAayIKIQEDQCAAKAJgIQcgAi4BMCEFIAAoAiAhCCACLgEQIQsgASACLgEAIAAoAgBsQQ10QYAIciIMIAAoAkAgAi4BIGwiDSAAKAKAASACLgFAbCIOayIPQcClf2xqQQt1NgIoIAEgD0HQFmwgDGoiDCANIA5qQcwybCINaiIOIAUgB2wiByAIIAtsIgVqQZo1bCIIIAVB8SBsaiIFa0ELdTYCUCABIAUgDmpBC3U2AgAgASAMIA1rIgUgCCAHQdz0fmxqIgdrQQt1NgI8IAEgBSAHakELdTYCFCABQQRqIQEgAEEEaiEAIAJBAmohAiAJQQFqIglBBUcNAAsgBkGAA2shACAKIQJBACEJA0AgAyAJQQJ0aigCACAEaiIBIAAgAigCDCIKIAIoAgQiBmpBmjVsIgcgBkHxIGxqIgYgAigCAEENdEGAgIjAAGoiBSACKAIIIgggAigCECILayIMQdAWbGoiDSAIIAtqQcwybCIIaiILakESdkH/B3FqLQAAOgAAIAEgACALIAZrQRJ2Qf8HcWotAAA6AAQgASAAIAcgCkHc9H5saiIKIA0gCGsiBmpBEnZB/wdxai0AADoAASABIAAgBiAKa0ESdkH/B3FqLQAAOgADIAEgACAMQcCl//8AbCAFakESdkH/B3FqLQAAOgACIAJBFGohAiAJQQFqIglBBUcNAAsLkwYBB38gACgC0AIhCyMAQUBqIgAgASgCVCIBKAJAIAIuASBsIgYgASgCACACLgEAbCIFakECdCIIIAEoAmAgAi4BMGwiCSABKAIgIAIuARBsIgdqQdEibEGACGoiCiAHQf4wbGpBC3UiB2s2AjAgACAHIAhqNgIAIAAgBSAGa0ECdCIGIAogCUHfiX9sakELdSIFazYCICAAIAUgBmo2AhAgACABKAJEIAIuASJsIgYgASgCBCACLgECbCIFakECdCIIIAEoAmQgAi4BMmwiCSABKAIkIAIuARJsIgdqQdEibEGACGoiCiAHQf4wbGpBC3UiB2s2AjQgACAHIAhqNgIEIAAgBSAGa0ECdCIGIAogCUHfiX9sakELdSIFazYCJCAAIAUgBmo2AhQgACABKAJIIAIuASRsIgYgASgCCCACLgEEbCIFakECdCIIIAEoAmggAi4BNGwiCSABKAIoIAIuARRsIgdqQdEibEGACGoiCiAHQf4wbGpBC3UiB2s2AjggACAHIAhqNgIIIAAgBSAGa0ECdCIGIAogCUHfiX9sakELdSIFazYCKCAAIAUgBmo2AhggACABKAJMIAIuASZsIgYgASgCDCACLgEGbCIFakECdCIIIAEoAmwgAi4BNmwiCSABKAIsIAIuARZsIgFqQdEibEGACGoiAiABQf4wbGpBC3UiAWs2AjwgACABIAhqNgIMIAAgBSAGa0ECdCIBIAIgCUHfiX9sakELdSICazYCLCAAIAEgAmo2AhwgC0GAA2shCyAAIQJBACEBA0AgAyABQQJ0aigCACAEaiIAIAsgAigCDCIGIAIoAgQiBWpB0SJsIgggBUH+MGxqIgUgAigCAEGQgAFqIgkgAigCCCIHakENdCIKakESdkH/B3FqLQAAOgAAIAAgCyAKIAVrQRJ2Qf8HcWotAAA6AAMgACALIAggBkHfiX9saiIGIAkgB2tBDXQiBWpBEnZB/wdxai0AADoAASAAIAsgBSAGa0ESdkH/B3FqLQAAOgACIAJBEGohAiABQQFqIgFBBEcNAAsL1QQBD38gAygCACAEaiIFIAAoAtACQYADayIAIAIuARAgASgCVCIBKAIgbEGxzgBsIgggAi4BACABKAIAbEENdEGACHIiBiABKAJAIAIuASBsIgdBoS1saiIJakECdEGAQHFBgICIwABqIgogAi4BFCABKAIobEGxzgBsIgsgAi4BBCABKAIIbEENdEGACHIiDCABKAJIIAIuASRsIg1BoS1saiIOakELdSIPQaEtbGoiECACLgESIAEoAiRsQbHOAGwiESACLgECIAEoAgRsQQ10QYAIciISIAEoAkQgAi4BImwiAkGhLWxqIhNqQQt1QbHOAGwiAWpBEnZB/wdxai0AADoAACAFIAAgECABa0ESdkH/B3FqLQAAOgACIAUgACAPQb6l//8AbCAKakESdkH/B3FqLQAAOgABIAMoAgQgBGoiASAAIAdBvqX//wNsIAZqQQJ0QYBAcUGAgIjAAGoiBSANQb6lf2wgDGpBC3UiBkGhLWxqIgcgAkG+pX9sIBJqQQt1QbHOAGwiAmpBEnZB/wdxai0AADoAACABIAAgByACa0ESdkH/B3FqLQAAOgACIAEgACAGQb6l//8AbCAFakESdkH/B3FqLQAAOgABIAMoAgggBGoiASAAIAkgCGtBAnRBgEBxQYCAiMAAaiICIA4gC2tBC3UiA0GhLWxqIgQgEyARa0ELdUGxzgBsIgVqQRJ2Qf8HcWotAAA6AAAgASAAIAQgBWtBEnZB/wdxai0AADoAAiABIAAgA0G+pf//AGwgAmpBEnZB/wdxai0AADoAAQvDAQEFfyADKAIAIARqIgUgACgC0AJBgANrIgAgASgCVCIBKAIkIAIvARJsIgYgASgCBCACLwECbCIHaiIIIAEoAiAgAi8BEGwiCSABKAIAIAIvAQBsQYQgaiIBaiICakEDdkH/B3FqLQAAOgAAIAUgACACIAhrQQN2Qf8HcWotAAA6AAEgAygCBCAEaiICIAAgByAGayIDIAEgCWsiAWpBA3ZB/wdxai0AADoAACACIAAgASADa0EDdkH/B3FqLQAAOgABCzQAIAMoAgAgBGogACgC0AIgASgCVCgCACACLwEAbEGEIGpBA3ZB/wdxakGAA2stAAA6AAAL3QcBE38jAEGgAmsiDCMESyAMIwVJcgRAIAwQSQsgDCQAIAAoAtACIQ0gASgCVCEBIAwhAANAIAEoAmAhCiACLgEwIQggASgCoAEhBiACLgFQIQ8gASgC4AEhECACLgFwIQkgASgCICERIAIuARAhEyAAIAIuAQAgASgCAGxBDXRBgAhyIgsgASgCwAEgAi4BYGwiEkG+pX9saiIUIAEoAkAgAi4BIGwiByABKAKAASACLgFAbCIFayIVQb6lf2xqQQt1NgKAASAAIBJBoS1sIAtqIgsgBSAHakGH1QBsIhIgBUHcD2wiFmtqIhcgBiAPbCIFIBEgE2wiBmpBlzpsIg8gCCAKbEHPsX9sIgprIAkgEGwiCCAGakH6HmwiEGoiCWtBC3U2AoACIAAgCSAXakELdTYCACAAIBQgFUGhLWxqIgkgBiAFIAhqa0GxzgBsIgZrQQt1NgLgASAAIAYgCWpBC3U2AiAgACAHQavFAGwiByALIBJraiIGIAogBSAIa0GR2QBsIgVrIA9qIghrQQt1NgLAASAAIAYgCGpBC3U2AkAgACALIAdrIBZqIgcgBSAKaiAQaiIFa0ELdTYCoAEgACAFIAdqQQt1NgJgIABBBGohACABQQRqIQEgAkECaiECIA5BAWoiDkEIRw0ACyANQYADayEBIAwhAEEAIQ4DQCADIA5BAnRqKAIAIARqIgIgASAAKAIUIgcgACgCBCIFakGXOmwiDyAAKAIMQc+xf2wiC2sgACgCHCIGIAVqQfoebCIQaiIJIAAoAgBBDXRBgICIwABqIhEgACgCGCITQaEtbGoiCiAAKAIQIgggACgCCCINakGH1QBsIhIgCEHcD2wiFGtqIhVqQRJ2Qf8HcWotAAA6AAAgAiABIBUgCWtBEnZB/wdxai0AADoACCACIAEgBSAGIAdqa0GxzgBsIgUgE0G+pX9sIBFqIgkgDSAIayIIQaEtbGoiEWpBEnZB/wdxai0AADoAASACIAEgESAFa0ESdkH/B3FqLQAAOgAHIAIgASALIAcgBmtBkdkAbCIHayAPaiIFIA1Bq8UAbCIGIAogEmtqIg1qQRJ2Qf8HcWotAAA6AAIgAiABIA0gBWtBEnZB/wdxai0AADoABiACIAEgByALaiAQaiIHIAogBmsgFGoiBWpBEnZB/wdxai0AADoAAyACIAEgBSAHa0ESdkH/B3FqLQAAOgAFIAIgASAJIAhBvqX//wBsakESdkH/B3FqLQAAOgAEIABBIGohACAOQQFqIg5BCUcNAAsgDEGgAmoiACMESyAAIwVJcgRAIAAQSQsgACQAC6UIARF/IwBBwAJrIg8jBEsgDyMFSXIEQCAPEEkLIA8kACAAKALQAiERIAEoAlQhASAPIQADQCABKALAASEIIAIuAWAhCSABKAJAIQogAi4BICESIAAgAi4BACABKAIAbEENdEGACHIiBSABKAKAASACLgFAbCIGQb6lf2xqQQt1IgsgASgCICACLgEQbCIHIAEoAqABIAIuAVBsIgwgASgCYCACLgEwbCINIAEoAuABIAIuAXBsIhNrIg5qa0ECdCIUazYC4AEgACALIBRqNgJAIAAgCCAJbCIIIAogEmwiCWpBmjVsIgogCUHxIGxqIgkgBkGdyQBsIAVqIhJqIgsgDEENdCIMIA5B4xNsaiIUIA0gE2oiDUHvPGwiEyAHQbPZAGxqaiIVa0ELdTYCoAIgACALIBVqQQt1NgIAIAAgBkGEZGwgBWoiBSAKIAhB3PR+bGoiBmsiCCAOQZ1MbCAMaiIOIAdBjClsIA1BzyVsIgpraiILa0ELdTYCwAEgACAIIAtqQQt1NgJgIAAgEiAJayIIIAdBlA5sIBNrIBRqIglrQQt1NgKgASAAIAggCWpBC3U2AoABIAAgBSAGaiIFIAdB09AAbCAKIA5qayIHa0ELdTYCgAIgACAFIAdqQQt1NgIgIABBBGohACABQQRqIQEgAkECaiECIBBBAWoiEEEIRw0ACyARQYADayEAIA8hAkEAIRADQCADIBBBAnRqKAIAIARqIgEgACACKAIcIgUgAigCDCIGaiIRQe88bCIIIAIoAgQiB0Gz2QBsaiACKAIUIglBDXQiCiAGIAVrIgVB4xNsaiISaiILIAIoAhgiDCACKAIIIgZqQZo1bCINIAZB8SBsaiITIAIoAgBBDXRBgICIwABqIgYgAigCECIOQZ3JAGxqIhRqIhVqQRJ2Qf8HcWotAAA6AAAgASAAIBUgC2tBEnZB/wdxai0AADoACSABIAAgB0HT0ABsIBFBzyVsIhEgBUGdTGwgCmoiCmprIgsgDSAMQdz0fmxqIgwgDkGEZGwgBmoiDWoiFWpBEnZB/wdxai0AADoAASABIAAgFSALa0ESdkH/B3FqLQAAOgAIIAEgACAHIAUgCWprQQ10IgUgDkG+pX9sIAZqIgZqQRJ2Qf8HcWotAAA6AAIgASAAIAYgBWtBEnZB/wdxai0AADoAByABIAAgB0GMKWwgEWsgCmoiBSANIAxrIgZqQRJ2Qf8HcWotAAA6AAMgASAAIAYgBWtBEnZB/wdxai0AADoABiABIAAgB0GUDmwgCGsgEmoiByAUIBNrIgVqQRJ2Qf8HcWotAAA6AAQgASAAIAUgB2tBEnZB/wdxai0AADoABSACQSBqIQIgEEEBaiIQQQpHDQALIA9BwAJqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAuNCgEUfyMAQeACayIRIwRLIBEjBUlyBEAgERBJCyARJAAgACgC0AIhEiABKAJUIQEgESEAA0AgASgC4AEhBSACLgFwIQ0gASgCYCEGIAIuATAhCCABKAKgASEOIAIuAVAhDyABKAIgIQkgAi4BECEQIAAgAi4BACABKAIAbEENdEGACHIiCyABKALAASACLgFgbCIMIAEoAkAgAi4BIGwiB2oiFyABKAKAASACLgFAbCIKayIUQb+lf2xqQQt1NgKgASAAIBRB7NYAbCALaiILIAogDGtB/qIBbGoiFCAMQbWHAWxqIhUgBiAIbCIGIAkgEGwiCWoiEEHqOGwiFiAJQfZEbGogDiAPbCIIIAlqQfQqbCIOaiAFIA1sIgUgCCAQampBwBlsIg0gBSAJakG4F2xqIglqIg9rQQt1NgLAAiAAIA8gFWpBC3U2AgAgACALIBdBhbZ/bGoiDyAMQcNNbGoiDCANIAYgCGpBybV/bGoiECAOIAhB2rN/bGpqIg5rQQt1NgKAAiAAIAwgDmpBC3U2AkAgACALIAogB2tByRtsIgxqIAdBkZ9/bGoiCyAJIAUgBmpB9Yx/bCIJIAVBx4YBbGpqIg5rQQt1NgLgASAAIAsgDmpBC3U2AmAgACAKQbn8AGwgB0H9pn9saiAPaiIHIAhBi8AAbCAGQY2if2xqIAVBlpR/bGogDWoiCGtBC3U2AsABIAAgByAIakELdTYCgAEgACAUIApBtIt/bGogDGoiCiAWIAZB2IQBbGogCWogEGoiBmtBC3U2AqACIAAgBiAKakELdTYCICAAQQRqIQAgAUEEaiEBIAJBAmohAiATQQFqIhNBCEcNAAsgEkGAA2shACARIQFBACEMA0AgAyAMQQJ0aigCACAEaiICIAAgASgCDCIKIAEoAgQiBWoiB0HqOGwiDSAFQfZEbGogASgCFCIGIAVqQfQqbCISaiABKAIcIgggBiAHampBwBlsIhMgBSAIakG4F2xqIg5qIg8gASgCAEENdEGAgIjAAGoiECABKAIYIgcgASgCCCIJaiIXIAEoAhAiBWsiFEHs1gBsaiILIAUgB2tB/qIBbGoiFSAHQbWHAWxqIhZqQRJ2Qf8HcWotAAA6AAAgAiAAIBYgD2tBEnZB/wdxai0AADoACiACIAAgEyAGIApqQcm1f2xqIg8gCCAKakH1jH9sIhYgDSAKQdiEAWxqamoiDSAFIAlrQckbbCIYIBUgBUG0i39samoiFWpBEnZB/wdxai0AADoAASACIAAgFSANa0ESdkH/B3FqLQAAOgAJIAIgACASIAZB2rN/bGogD2oiDSALIBdBhbZ/bGoiEiAHQcNNbGoiB2pBEnZB/wdxai0AADoAAiACIAAgByANa0ESdkH/B3FqLQAAOgAIIAIgACAWIAhBx4YBbGogDmoiByALIBhqIAlBkZ9/bGoiC2pBEnZB/wdxai0AADoAAyACIAAgCyAHa0ESdkH/B3FqLQAAOgAHIAIgACAGQYvAAGwgCkGNon9saiAIQZaUf2xqIBNqIgogBUG5/ABsIAlB/aZ/bGogEmoiBmpBEnZB/wdxai0AADoABCACIAAgBiAKa0ESdkH/B3FqLQAAOgAGIAIgACAUQb+l//8AbCAQakESdkH/B3FqLQAAOgAFIAFBIGohASAMQQFqIgxBC0cNAAsgEUHgAmoiACMESyAAIwVJcgRAIAAQSQsgACQAC74JARR/IwBBgANrIhIjBEsgEiMFSXIEQCASEEkLIBIkACAAKALQAiEWIAEoAlQhASASIQADQCABKAKAASEIIAIuAUAhDiAAIAEoAkAgAi4BIGwiDyABKALAASACLgFgbCIJa0ENdCIKIAIuAQAgASgCAGxBDXRBgAhyIgtqIgwgASgCICACLgEQbCIGIAEoAuABIAIuAXBsIgdrIhAgASgCYCACLgEwbCIRIAEoAqABIAIuAVBsIgVrIhNqQdEibCIUIBBB/jBsaiIQa0ELdTYCwAIgACAMIBBqQQt1NgIgIAAgCyAKayIKIBQgE0HfiX9saiIMa0ELdTYC4AEgACAKIAxqQQt1NgKAASAAIAggDmxBsc4AbCIOIAtqIgogCUENdCIJIA9BttcAbGoiDGsiECAHIAUgBmoiE2pBjTdsIgggEUGvXWwiFCAGQdxUbGogB0GMgX9samoiFWtBC3U2AsABIAAgECAVakELdTYCoAEgACAKIAxqIgogCCATQdsQbGoiDCARQc/TAGwiESAGQfcRbGpqIgZrQQt1NgLgAiAAIAYgCmpBC3U2AgAgACAPQbYXbCAJayIGIAsgDmsiC2oiDyAFIAdqQYu9f2wiDiAFQbChf2wgFGpqIAxqIgVrQQt1NgKgAiAAIAUgD2pBC3U2AkAgACALIAZrIgsgB0HG5QBsIBFrIAhqIA5qIgdrQQt1NgKAAiAAIAcgC2pBC3U2AmAgAEEEaiEAIAFBBGohASACQQJqIQIgDUEBaiINQQhHDQALIBZBgANrIQAgEiEBQQAhCwNAIAMgC0ECdGooAgAgBGoiAiAAIAEoAgwiD0HP0wBsIhYgASgCBCIGQfcRbGogASgCFCIFIAZqIg0gASgCHCIHakGNN2wiESANQdsQbGoiDmoiCSABKAIYIgpBDXQiDCABKAIIIghBttcAbGoiECABKAIAQQ10QYCAiMAAaiINIAEoAhBBsc4AbCITaiIUaiIVakESdkH/B3FqLQAAOgAAIAIgACAVIAlrQRJ2Qf8HcWotAAA6AAsgAiAAIAYgB2siCSAPIAVrIhVqQdEibCIXIAlB/jBsaiIJIAggCmtBDXQiCiANaiIYakESdkH/B3FqLQAAOgABIAIgACAYIAlrQRJ2Qf8HcWotAAA6AAogAiAAIA4gBSAHakGLvX9sIg4gD0GvXWwiDyAFQbChf2xqamoiBSAIQbYXbCAMayIIIA0gE2siCWoiDGpBEnZB/wdxai0AADoAAiACIAAgDCAFa0ESdkH/B3FqLQAAOgAJIAIgACAHQcblAGwgFmsgEWogDmoiBSAJIAhrIghqQRJ2Qf8HcWotAAA6AAMgAiAAIAggBWtBEnZB/wdxai0AADoACCACIAAgFyAVQd+Jf2xqIgUgDSAKayINakESdkH/B3FqLQAAOgAEIAIgACANIAVrQRJ2Qf8HcWotAAA6AAcgAiAAIA8gBkHcVGxqIAdBjIF/bGogEWoiByAUIBBrIgZqQRJ2Qf8HcWotAAA6AAUgAiAAIAYgB2tBEnZB/wdxai0AADoABiABQSBqIQEgC0EBaiILQQxHDQALIBJBgANqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAulCwEWfyMAQaADayIVIwRLIBUjBUlyBEAgFRBJCyAVJAAgACgC0AIhCSABKAJUIQEgFSEAA0AgASgC4AEhCiACLgFwIRAgASgCYCEFIAIuATAhBiABKAKgASERIAIuAVAhEyABKAIgIQggAi4BECELIAAgAi4BACABKAIAbEENdEGACHIiDCABKAKAASACLgFAbCINIAEoAsABIAIuAWBsIg5rIg8gASgCQCACLgEgbCIHa0HB2gBsakELdTYCwAEgACAPQZkGbCAMaiIXIA0gDmoiDUH5yQBsIg4gB0Hx1wBsamoiFCAFIAZsIgUgCCALbCIIakHQ1ABsIgsgCEHb/n5saiARIBNsIgYgCGpBvsoAbCIRaiAKIBBsIgogCGoiEEGCPGwiE2oiFmtBC3U2AoADIAAgFCAWakELdTYCACAAIA9BlR9sIAxqIhQgB0HgwwBsIA1BoBRsIhZraiIYIAUgCmpBwrV/bCIZIAUgBmpBq2psIhogCyAFQcs1bGpqaiILa0ELdTYC4AIgACALIBhqQQt1NgIgIAAgB0GMIGwgDmsgF2oiCyAGIApqQfhVbCIOIBogBkGxm39saiARamoiEWtBC3U2AsACIAAgCyARakELdTYCQCAAIA9BgkRsIAxqIgwgB0GMdWwgDUHyG2wiD2tqIg0gGSAKQZSNAWxqIBNqIA5qIhFrQQt1NgKgAiAAIA0gEWpBC3U2AmAgACAPIAdBy0xsaiAMaiIMIBBB1RVsIAYgBWtBgjxsaiIPIAhBsxRsaiAFQZZibGoiBWtBC3U2AoACIAAgBSAMakELdTYCgAEgACAWIAdB7q9/bGogFGoiByAPIAZBzhhsaiAKQb+Qf2xqIgVrQQt1NgLgASAAIAUgB2pBC3U2AqABIABBBGohACABQQRqIQEgAkECaiECIBJBAWoiEkEIRw0ACyAJQYADayEAIBUhAUEAIQwDQCADIAxBAnRqKAIAIARqIgIgACABKAIMIgUgASgCBCIIakHQ1ABsIgkgCEHb/n5saiABKAIUIgYgCGpBvsoAbCIQaiABKAIcIgogCGoiEUGCPGwiE2oiCyABKAIYIhIgASgCECIOaiINQfnJAGwiFyABKAIIIgdB8dcAbGogASgCAEENdEGAgIjAAGoiDyAOIBJrIhJBmQZsaiIOaiIUakESdkH/B3FqLQAAOgAAIAIgACAUIAtrQRJ2Qf8HcWotAAA6AAwgAiAAIAUgCmpBwrV/bCILIAUgBmpBq2psIhQgCSAFQcs1bGpqaiIJIBJBlR9sIA9qIhYgB0HgwwBsIA1BoBRsIhhraiIZakESdkH/B3FqLQAAOgABIAIgACAZIAlrQRJ2Qf8HcWotAAA6AAsgAiAAIAYgCmpB+FVsIgkgFCAGQbGbf2xqIBBqaiIQIAdBjCBsIBdrIA5qIg5qQRJ2Qf8HcWotAAA6AAIgAiAAIA4gEGtBEnZB/wdxai0AADoACiACIAAgCyAKQZSNAWxqIBNqIAlqIgkgEkGCRGwgD2oiECAHQYx1bCANQfIbbCINa2oiE2pBEnZB/wdxai0AADoAAyACIAAgEyAJa0ESdkH/B3FqLQAAOgAJIAIgACARQdUVbCAGIAVrQYI8bGoiCSAIQbMUbGogBUGWYmxqIgUgDSAHQctMbGogEGoiCGpBEnZB/wdxai0AADoABCACIAAgCCAFa0ESdkH/B3FqLQAAOgAIIAIgACAJIAZBzhhsaiAKQb+Qf2xqIgUgGCAHQe6vf2xqIBZqIgZqQRJ2Qf8HcWotAAA6AAUgAiAAIAYgBWtBEnZB/wdxai0AADoAByACIAAgEiAHa0HB2gBsIA9qQRJ2Qf8HcWotAAA6AAYgAUEgaiEBIAxBAWoiDEENRw0ACyAVQaADaiIAIwRLIAAjBUlyBEAgABBJCyAAJAAL7QoBFX8jAEHAA2siFCMESyAUIwVJcgRAIBQQSQsgFCQAIAAoAtACIRUgASgCVCEBIBQhAANAIAEoAsABIQcgAi4BYCEIIAEoAkAhCiACLgEgIQkgACACLgEAIAEoAgBsQQ10QYAIciINIAEoAoABIAIuAUBsIgtBvqV/bGpBC3UiESABKALgASACLgFwbCIOIAEoAiAgAi4BEGwiDCABKAJgIAIuATBsIgVrIhIgASgCoAEgAi4BUGwiBmtqQQJ0Ig9rNgLAAiAAIA8gEWo2AmAgACAHIAhsIgggCSAKbCIKakHixgBsIgkgCEH8kX9saiIRIAtBkhRsIA1qIg9qIhYgBSAGakHvdWwgDkENdCIHayIOIAUgDGpBt9UAbCIXIAVB7mRsamoiE2tBC3U2AoADIAAgEyAWakELdTYCICAAIAhB4ad/bCAKQaMnbGoiCCALQclHbCANaiIWaiITIA4gBiAMaiIOQdLMAGwiGCAGQYnofmxqaiIZa0ELdTYC4AIgACATIBlqQQt1NgJAIAAgDyARayIRIBJB8h1sIAdrIhIgBiAFa0H42QBsIg8gBUGZK2xqaiIFa0ELdTYCgAIgACAFIBFqQQt1NgKgASAAIAtBxtEAbCANaiIFIAkgCkG9EWxqIg1rIgsgDkGUMGwiCiAMQYu8f2xqIBJqIglrQQt1NgLgASAAIAkgC2pBC3U2AsABIAAgBSANaiIFIBcgDEHwt39saiAYaiAHaiIMa0ELdTYCoAMgACAFIAxqQQt1NgIAIAAgFiAIayIFIA8gBkHmk39saiAKaiAHaiIGa0ELdTYCoAIgACAFIAZqQQt1NgKAASAAQQRqIQAgAUEEaiEBIAJBAmohAiAQQQFqIhBBCEcNAAsgFUGAA2shACAUIQFBACENA0AgAyANQQJ0aigCACAEaiICIAAgASgCHCIVQQ10IgsgASgCDCIFIAEoAgQiDGpBt9UAbCIJIAxB8Ld/bGogASgCFCIGIAxqIhFB0swAbCIOamoiEiABKAIYIgggASgCCCIKakHixgBsIg8gCkG9EWxqIhYgASgCAEENdEGAgIjAAGoiByABKAIQIhBBxtEAbGoiF2oiE2pBEnZB/wdxai0AADoAACACIAAgEyASa0ESdkH/B3FqLQAAOgANIAIgACAFIAZqQe91bCALayISIAkgBUHuZGxqaiIJIA8gCEH8kX9saiIPIAcgEEGSFGxqIhNqIhhqQRJ2Qf8HcWotAAA6AAEgAiAAIBggCWtBEnZB/wdxai0AADoADCACIAAgDiAGQYnofmxqIBJqIgkgCEHhp39sIApBoydsaiIIIBBByUdsIAdqIgpqIg5qQRJ2Qf8HcWotAAA6AAIgAiAAIA4gCWtBEnZB/wdxai0AADoACyACIAAgFSAMIAVrIgkgBmtqQQ10IhUgEEG+pX9sIAdqIgdqQRJ2Qf8HcWotAAA6AAMgAiAAIAcgFWtBEnZB/wdxai0AADoACiACIAAgEUGUMGwiByAGIAVrQfjZAGwiECALIAZB5pN/bGpqaiIGIAogCGsiCGpBEnZB/wdxai0AADoABCACIAAgCCAGa0ESdkH/B3FqLQAAOgAJIAIgACAJQfIdbCALayIGIBAgBUGZK2xqaiIFIBMgD2siC2pBEnZB/wdxai0AADoABSACIAAgCyAFa0ESdkH/B3FqLQAAOgAIIAIgACAHIAxBi7x/bGogBmoiBSAXIBZrIgZqQRJ2Qf8HcWotAAA6AAYgAiAAIAYgBWtBEnZB/wdxai0AADoAByABQSBqIQEgDUEBaiINQQ5HDQALIBRBwANqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAvRCwEZfyMAQeADayITIwRLIBMjBUlyBEAgExBJCyATJAAgACgC0AIhFCABKAJUIQEgEyEAA0AgASgCoAEhBSACLgFQIQggASgCICEQIAIuARAhCSABKALgASEHIAIuAXAhCiABKAJgIREgAi4BMCESIAAgAi4BACABKAIAbEENdEGACHIiDyABKALAASACLgFgbCILQb6lf2xqIhYgASgCQCACLgEgbCIMIAEoAoABIAIuAUBsIg1rIgZBwKV/bGpBC3U2AuABIAAgC0GdyQBsIA9qIg4gBkH2AmwiGiAMIA1qIg1BztUAbCIXamoiGCAHIApsIgdBo50BbCARIBJsIgpB9ql/bCIRayAFIAhsIhJBsc4AbCIIIAkgEGwiBSAHayIQQYLaAGxqIglqIhlrQQt1NgLAAyAAIBggGWpBC3U2AgAgACALQYRkbCAPaiIPIAZB0BZsIgsgDUHMMmwiGGpqIhkgCiAHayIbIAVqQZo1bCIcIAVB8SBsaiIda0ELdTYCoAMgACAZIB1qQQt1NgIgIAAgFiAGQaAtbGoiFiAQIBJrQbHOAGwiEGtBC3U2AoADIAAgECAWakELdTYCQCAAIAZBuWZsIgYgDUGCI2wiDWsgDmoiECAFIAdqQegkbCISIAggEWogB0GvSGxqaiIHa0ELdTYCoAIgACAHIBBqQQt1NgKgASAAIAxBk9wAbCIHIBdrIBpqIA9qIgwgCkHmSmwiCiAFQbkebGogCGsgEmoiCGtBC3U2AuACIAAgCCAMakELdTYCYCAAIA4gGGsgC2oiCyAcIBtB3PR+bGoiDGtBC3U2AsACIAAgCyAMakELdTYCgAEgACANIAdrIAZqIA9qIgYgCiAFQee4f2xqIAlqIgVrQQt1NgKAAiAAIAUgBmpBC3U2AsABIABBBGohACABQQRqIQEgAkECaiECIBVBAWoiFUEIRw0ACyAUQYADayEAIBMhAUEAIRUDQCADIBVBAnRqKAIAIARqIgIgACABKAIcIgZBo50BbCABKAIMIg9B9ql/bCIQayABKAIUIglBsc4AbCILIAEoAgQiBSAGayIRQYLaAGxqIhJqIhQgASgCAEENdEGAgIjAAGoiDCABKAIYIg5BnckAbGoiDSABKAIIIgogASgCECIIayIHQfYCbCIWIAggCmoiCEHO1QBsIhpqaiIXakESdkH/B3FqLQAAOgAAIAIgACAXIBRrQRJ2Qf8HcWotAAA6AA4gAiAAIAUgDyAGayIXakGaNWwiGCAFQfEgbGoiGSAOQYRkbCAMaiIUIAdB0BZsIhsgCEHMMmwiHGpqIh1qQRJ2Qf8HcWotAAA6AAEgAiAAIB0gGWtBEnZB/wdxai0AADoADSACIAAgESAJa0GxzgBsIgkgDkG+pX9sIAxqIgwgB0GgLWxqIg5qQRJ2Qf8HcWotAAA6AAIgAiAAIA4gCWtBEnZB/wdxai0AADoADCACIAAgBSAGakHoJGwiDiAPQeZKbCIPIAVBuR5saiALa2oiCSAKQZPcAGwiCiAaayAWaiAUaiIRakESdkH/B3FqLQAAOgADIAIgACARIAlrQRJ2Qf8HcWotAAA6AAsgAiAAIBggF0Hc9H5saiIJIA0gHGsgG2oiEWpBEnZB/wdxai0AADoABCACIAAgESAJa0ESdkH/B3FqLQAAOgAKIAIgACALIBBqIAZBr0hsaiAOaiIGIAdBuWZsIgsgCEGCI2wiDmsgDWoiDWpBEnZB/wdxai0AADoABSACIAAgDSAGa0ESdkH/B3FqLQAAOgAJIAIgACAPIAVB57h/bGogEmoiBSAOIAprIAtqIBRqIgZqQRJ2Qf8HcWotAAA6AAYgAiAAIAYgBWtBEnZB/wdxai0AADoACCACIAAgDCAHQcCl//8AbGpBEnZB/wdxai0AADoAByABQSBqIQEgFUEBaiIVQQ9HDQALIBNB4ANqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAvkDAEafyMAQYAEayISIwRLIBIjBUlyBEAgEhBJCyASJAAgACgC0AIhDSABKAJUIQEgEiEAA0AgACABKAJAIAIuASBsIgogASgCwAEgAi4BYGwiDmsiEUHj2ABsIg8gDkGDpAFsaiITIAEoAoABIAIuAUBsIgtBz9MAbCIUIAIuAQAgASgCAGxBDXRBgAhyIgxqIhVqIhYgASgCYCACLgEwbCIGIAEoAiAgAi4BEGwiCGpBztYAbCIQIAhB1u1+bGogASgCoAEgAi4BUGwiByAIaiIaQenPAGwiF2ogASgC4AEgAi4BcGwiBSAIakH8xQBsIhhqIhlrQQt1NgLgAyAAIBYgGWpBC3U2AgAgACARQdQRbCIRIApBzTlsaiIWIAtB0SJsIgsgDGoiGWoiGyAFIAZqIhxBq1VsIh0gBiAHakHwCGwiHiAQIAZBzQRsampqIhBrQQt1NgLAAyAAIBAgG2pBC3U2AiAgACAPIApBwllsaiIKIAwgC2siD2oiCyAFIAdqQbKpf2wiECAeIAdB+rd/bGogF2pqIhdrQQt1NgKgAyAAIAsgF2pBC3U2AkAgACARIA5BsF9saiIOIAwgFGsiDGoiESAdIAVBmMQAbGogGGogEGoiC2tBC3U2AoADIAAgCyARakELdTYCYCAAIAwgDmsiDCAFIAdrQaMabCIOIAggBWtBtjlsIhEgHEGXsH9sIgsgBUGFyQFsampqIgVrQQt1NgLgAiAAIAUgDGpBC3U2AoABIAAgDyAKayIFIBpB1SpsIgwgByAGa0GJ2gBsIgogB0H6TmxqaiAOaiIHa0ELdTYCwAIgACAFIAdqQQt1NgKgASAAIBkgFmsiByAIIAZrQaMabCIFIAZBmv4AbGogCmogC2oiBmtBC3U2AqACIAAgBiAHakELdTYCwAEgACAVIBNrIgYgBSAIQcKKf2xqIAxqIBFqIghrQQt1NgKAAiAAIAYgCGpBC3U2AuABIABBBGohACABQQRqIQEgAkECaiECIAlBAWoiCUEIRw0ACyANQYADayEAIBIhAUEAIQwDQCADIAxBAnRqKAIAIARqIgIgACABKAIMIgYgASgCBCIIakHO1gBsIg0gCEHW7X5saiABKAIUIgcgCGoiEUHpzwBsIg9qIAEoAhwiBSAIakH8xQBsIhNqIgsgASgCCCIKIAEoAhgiDmsiFEHj2ABsIhUgDkGDpAFsaiIWIAEoAgBBDXRBgICIwABqIgkgASgCECIQQc/TAGwiGmoiF2oiGGpBEnZB/wdxai0AADoAACACIAAgGCALa0ESdkH/B3FqLQAAOgAPIAIgACAFIAZqIgtBq1VsIhggBiAHakHwCGwiGSANIAZBzQRsampqIg0gFEHUEWwiFCAKQc05bGoiGyAJIBBB0SJsIhBqIhxqIh1qQRJ2Qf8HcWotAAA6AAEgAiAAIB0gDWtBEnZB/wdxai0AADoADiACIAAgBSAHakGyqX9sIg0gGSAHQfq3f2xqIA9qaiIPIBUgCkHCWWxqIgogCSAQayIVaiIQakESdkH/B3FqLQAAOgACIAIgACAQIA9rQRJ2Qf8HcWotAAA6AA0gAiAAIBggBUGYxABsaiATaiANaiINIBQgDkGwX2xqIg4gCSAaayIJaiIPakESdkH/B3FqLQAAOgADIAIgACAPIA1rQRJ2Qf8HcWotAAA6AAwgAiAAIAUgB2tBoxpsIg0gCCAFa0G2OWwiDyALQZewf2wiEyAFQYXJAWxqamoiBSAJIA5rIglqQRJ2Qf8HcWotAAA6AAQgAiAAIAkgBWtBEnZB/wdxai0AADoACyACIAAgEUHVKmwiBSAHIAZrQYnaAGwiCSAHQfpObGpqIA1qIgcgFSAKayIKakESdkH/B3FqLQAAOgAFIAIgACAKIAdrQRJ2Qf8HcWotAAA6AAogAiAAIAggBmtBoxpsIgcgBkGa/gBsaiAJaiATaiIGIBwgG2siCWpBEnZB/wdxai0AADoABiACIAAgCSAGa0ESdkH/B3FqLQAAOgAJIAIgACAHIAhBwop/bGogBWogD2oiBiAXIBZrIghqQRJ2Qf8HcWotAAA6AAcgAiAAIAggBmtBEnZB/wdxai0AADoACCABQSBqIQEgDEEBaiIMQRBHDQALIBJBgARqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAvHCwEZfyMAQYACayIQIwRLIBAjBUlyBEAgEBBJCyAQJAAgACgC0AIhEiABKAJUIQEgECEAQQghCgNAIAACfwJAIAIuARAiBiACLwEgIgVyQf//A3ENAEEAIQUgAi8BMA0AIAIvAUANACACLwFQDQAgAi8BYA0AIAIvAXANACAAIAIuAQAgASgCAGxBAnQiBTYCwAEgACAFNgKgASAAIAU2AoABIAAgBTYCYCAAIAU2AkAgACAFNgIgIAAgBTYCAEE4DAELIAAgASgCwAEgAi4BYGwiByABKAJAIAXBbCIFakHRImwiCyAFQf4wbGoiESACLgFAIAEoAoABbEENdCIJIAIuAQAgASgCAGxBDXRBgAhyIhNqIgxqIg0gASgCICAGbCIFIAEoAuABIAIuAXBsIgZqQbNGbCIUIAVBi+AAbGogBSABKAKgASACLgFQbCIIaiIOIAEoAmAgAi4BMGwiBSAGaiIVakGhywBsIhYgDkGEZ2xqIg5qIg9rQQt1NgLgASAAIA0gD2pBC3U2AgAgACALIAdB34l/bGoiByATIAlrIgtqIgkgFiAVQbuCf2xqIhMgBSAIakH9235sIg0gBUHUxAFsamoiBWtBC3U2AsABIAAgBSAJakELdTYCICAAIAsgB2siBSANIAhBs4MBbGogDmoiCGtBC3U2AqABIAAgBSAIakELdTYCQCAAIBQgBkGOE2xqIBNqIgUgDCARayIGakELdTYCYCAGIAVrQQt1IQVBIAtBAnRqIAU2AgAgAkECaiECIAFBBGohASAAQQRqIQAgCkEBSyEFIApBAWshCiAFDQALIBJBgANrIQAgECEBQQAhEgNAIAMgEkECdGooAgAgBGoiAiAAIAEoAgwiBSABKAIEIgpqQc7WAGwiCSAKQdbtfmxqIAEoAhQiBiAKaiITQenPAGwiDGogASgCHCIIIApqQfzFAGwiDWoiFCABKAIIIgsgASgCGCIRayIOQePYAGwiFSARQYOkAWxqIhYgASgCAEENdEGAgIjAAGoiByABKAIQIg9Bz9MAbCIYaiIZaiIXakESdkH/B3FqLQAAOgAAIAIgACAXIBRrQRJ2Qf8HcWotAAA6AA8gAiAAIAUgCGoiFEGrVWwiFyAFIAZqQfAIbCIaIAkgBUHNBGxqamoiCSAOQdQRbCIOIAtBzTlsaiIbIAcgD0HRImwiD2oiHGoiHWpBEnZB/wdxai0AADoAASACIAAgHSAJa0ESdkH/B3FqLQAAOgAOIAIgACAGIAhqQbKpf2wiCSAaIAZB+rd/bGogDGpqIgwgFSALQcJZbGoiCyAHIA9rIhVqIg9qQRJ2Qf8HcWotAAA6AAIgAiAAIA8gDGtBEnZB/wdxai0AADoADSACIAAgFyAIQZjEAGxqIA1qIAlqIgkgDiARQbBfbGoiESAHIBhrIgdqIgxqQRJ2Qf8HcWotAAA6AAMgAiAAIAwgCWtBEnZB/wdxai0AADoADCACIAAgCCAGa0GjGmwiCSAKIAhrQbY5bCIMIBRBl7B/bCINIAhBhckBbGpqaiIIIAcgEWsiB2pBEnZB/wdxai0AADoABCACIAAgByAIa0ESdkH/B3FqLQAAOgALIAIgACATQdUqbCIIIAYgBWtBidoAbCIHIAZB+k5samogCWoiBiAVIAtrIgtqQRJ2Qf8HcWotAAA6AAUgAiAAIAsgBmtBEnZB/wdxai0AADoACiACIAAgCiAFa0GjGmwiBiAFQZr+AGxqIAdqIA1qIgUgHCAbayIHakESdkH/B3FqLQAAOgAGIAIgACAHIAVrQRJ2Qf8HcWotAAA6AAkgAiAAIAYgCkHCin9saiAIaiAMaiIFIBkgFmsiCmpBEnZB/wdxai0AADoAByACIAAgCiAFa0ESdkH/B3FqLQAAOgAIIAFBIGohASASQQFqIhJBCEcNAAsgEEGAAmoiACMESyAAIwVJcgRAIAAQSQsgACQAC40JARR/IwBB4AFrIhAjBEsgECMFSXIEQCAQEEkLIBAkACAAKALQAiEMIAEoAlQhACAQIQEDQCAAKAKgASEHIAIuAVAhCSAAKAIgIQ0gAi4BECEOIAAoAmAhCCACLgEwIRQgASACLgEAIAAoAgBsQQ10QYAIciIFIAAoAoABIAIuAUBsIgYgACgCwAEgAi4BYGwiCiAAKAJAIAIuASBsIgtqIg9rQcHaAGxqQQt1NgJgIAEgD0HG0QBsIAVqIg8gBiAKa0G3OGwiEiAKQYN7bGpqIhMgByAJbCIKIA0gDmwiB2pBoydsIg0gCCAUbCIJIAdqQe87bCIOIAcgCWtB8wpsIgdraiIIa0ELdTYCwAEgASAIIBNqQQt1NgIAIAEgCyAGa0GSFGwiCCALQfHhfmxqIA9qIgsgCSAKakHhp39sIgkgDSAKQd73AGxqaiIKa0ELdTYCgAEgASAKIAtqQQt1NgJAIAEgBkGVin9sIAVqIAhqIBJqIgYgByAOaiAJaiIFa0ELdTYCoAEgASAFIAZqQQt1NgIgIAFBBGohASAAQQRqIQAgAkECaiECIBFBAWoiEUEIRw0ACyAMQYADayEAIBAhAUEAIREDQCADIBFBAnRqKAIAIARqIgIgACABKAIcIg5BDXQiCyABKAIMIgYgASgCBCIKakG31QBsIgggCkHwt39saiABKAIUIgUgCmoiFEHSzABsIg9qaiISIAEoAhgiDCABKAIIIg1qQeLGAGwiEyANQb0RbGoiFiABKAIAQQ10QYCAiMAAaiIHIAEoAhAiCUHG0QBsaiIXaiIVakESdkH/B3FqLQAAOgAAIAIgACAVIBJrQRJ2Qf8HcWotAAA6AA0gAiAAIAUgBmpB73VsIAtrIhIgCCAGQe5kbGpqIgggEyAMQfyRf2xqIhMgByAJQZIUbGoiFWoiGGpBEnZB/wdxai0AADoAASACIAAgGCAIa0ESdkH/B3FqLQAAOgAMIAIgACAPIAVBieh+bGogEmoiCCAMQeGnf2wgDUGjJ2xqIgwgCUHJR2wgB2oiDWoiD2pBEnZB/wdxai0AADoAAiACIAAgDyAIa0ESdkH/B3FqLQAAOgALIAIgACAOIAogBmsiCCAFa2pBDXQiDiAJQb6lf2wgB2oiB2pBEnZB/wdxai0AADoAAyACIAAgByAOa0ESdkH/B3FqLQAAOgAKIAIgACAUQZQwbCIHIAUgBmtB+NkAbCIJIAsgBUHmk39sampqIgUgDSAMayIMakESdkH/B3FqLQAAOgAEIAIgACAMIAVrQRJ2Qf8HcWotAAA6AAkgAiAAIAhB8h1sIAtrIgUgCSAGQZkrbGpqIgYgFSATayILakESdkH/B3FqLQAAOgAFIAIgACALIAZrQRJ2Qf8HcWotAAA6AAggAiAAIAcgCkGLvH9saiAFaiIGIBcgFmsiBWpBEnZB/wdxai0AADoABiACIAAgBSAGa0ESdkH/B3FqLQAAOgAHIAFBIGohASARQQFqIhFBB0cNAAsgEEHgAWoiACMESyAAIwVJcgRAIAAQSQsgACQAC7oHARR/IwBBwAFrIg0jBEsgDSMFSXIEQCANEEkLIA0kACAAKALQAiEJIAEoAlQhACANIQEDQCAAKAJAIQwgAi4BICEOIAEgAi4BACAAKAIAbEENdEGACHIiBiAAKAKAASACLgFAbCIPQb6lf2xqQQt1IhAgACgCICACLgEQbCIHIAAoAmAgAi4BMGwiCCAAKAKgASACLgFQbCIFamtBAnQiC2s2AoABIAEgCyAQajYCICABIAwgDmxBsc4AbCIMIA9BoS1sIAZqIg5qIgYgBSAHakG2F2wiDyAHIAhqQQ10aiIHa0ELdTYCoAEgASAGIAdqQQt1NgIAIAEgDiAMayIHIA8gBSAIa0ENdGoiCGtBC3U2AmAgASAHIAhqQQt1NgJAIAFBBGohASAAQQRqIQAgAkECaiECIApBAWoiCkEIRw0ACyAJQYADayEAIA0hAUEAIQcDQCADIAdBAnRqKAIAIARqIgIgACABKAIMIgxBz9MAbCIPIAEoAgQiCEH3EWxqIAEoAhQiBSAIaiIJIAEoAhwiCmpBjTdsIg4gCUHbEGxqIhBqIgsgASgCGCIRQQ10IhIgASgCCCIGQbbXAGxqIhQgASgCAEENdEGAgIjAAGoiCSABKAIQQbHOAGwiFWoiFmoiE2pBEnZB/wdxai0AADoAACACIAAgEyALa0ESdkH/B3FqLQAAOgALIAIgACAIIAprIgsgDCAFayITakHRImwiFyALQf4wbGoiCyAGIBFrQQ10IhEgCWoiGGpBEnZB/wdxai0AADoAASACIAAgGCALa0ESdkH/B3FqLQAAOgAKIAIgACAQIAUgCmpBi71/bCIQIAxBr11sIgwgBUGwoX9sampqIgUgBkG2F2wgEmsiBiAJIBVrIgtqIhJqQRJ2Qf8HcWotAAA6AAIgAiAAIBIgBWtBEnZB/wdxai0AADoACSACIAAgCkHG5QBsIA9rIA5qIBBqIgUgCyAGayIGakESdkH/B3FqLQAAOgADIAIgACAGIAVrQRJ2Qf8HcWotAAA6AAggAiAAIBcgE0HfiX9saiIFIAkgEWsiCWpBEnZB/wdxai0AADoABCACIAAgCSAFa0ESdkH/B3FqLQAAOgAHIAIgACAMIAhB3FRsaiAKQYyBf2xqIA5qIgogFiAUayIIakESdkH/B3FqLQAAOgAFIAIgACAIIAprQRJ2Qf8HcWotAAA6AAYgAUEgaiEBIAdBAWoiB0EGRw0ACyANQcABaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALyQYBEX8jAEGgAWsiCSMESyAJIwVJcgRAIAkQSQsgCSQAIAAoAtACIQsgASgCVCEAIAkhAQNAIAAoAmAhBiACLgEwIQUgACgCICEKIAIuARAhDCABIAIuAQAgACgCAGxBDXRBgAhyIg0gACgCQCACLgEgbCIOIAAoAoABIAIuAUBsIghrIg9BwKV/bGpBC3U2AkAgASAPQdAWbCANaiINIAggDmpBzDJsIg5qIgggBSAGbCIGIAogDGwiBWpBmjVsIgogBUHxIGxqIgVrQQt1NgKAASABIAUgCGpBC3U2AgAgASANIA5rIgUgCiAGQdz0fmxqIgZrQQt1NgJgIAEgBSAGakELdTYCICABQQRqIQEgAEEEaiEAIAJBAmohAiAHQQFqIgdBCEcNAAsgC0GAA2shASAJIQBBACELA0AgAyALQQJ0aigCACAEaiICIAEgACgCHCIGIAAoAgwiBWoiDEHvPGwiDSAAKAIEIgdBs9kAbGogACgCFCIOQQ10IgggBSAGayIGQeMTbGoiD2oiECAAKAIYIhEgACgCCCIFakGaNWwiEiAFQfEgbGoiFCAAKAIAQQ10QYCAiMAAaiIFIAAoAhAiCkGdyQBsaiIVaiITakESdkH/B3FqLQAAOgAAIAIgASATIBBrQRJ2Qf8HcWotAAA6AAkgAiABIAdB09AAbCAMQc8lbCIMIAZBnUxsIAhqIghqayIQIBIgEUHc9H5saiIRIApBhGRsIAVqIhJqIhNqQRJ2Qf8HcWotAAA6AAEgAiABIBMgEGtBEnZB/wdxai0AADoACCACIAEgByAGIA5qa0ENdCIGIApBvqV/bCAFaiIFakESdkH/B3FqLQAAOgACIAIgASAFIAZrQRJ2Qf8HcWotAAA6AAcgAiABIAdBjClsIAxrIAhqIgYgEiARayIFakESdkH/B3FqLQAAOgADIAIgASAFIAZrQRJ2Qf8HcWotAAA6AAYgAiABIAdBlA5sIA1rIA9qIgcgFSAUayIGakESdkH/B3FqLQAAOgAEIAIgASAGIAdrQRJ2Qf8HcWotAAA6AAUgAEEgaiEAIAtBAWoiC0EFRw0ACyAJQaABaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALkQUBEH8gACgC0AIhCCABKAJUIQAjAEGAAWsiBSEBA0AgASAAKAJAIAIuASBsIgYgACgCACACLgEAbCIKakECdCILIAAoAmAgAi4BMGwiDCAAKAIgIAIuARBsIgdqQdEibEGACGoiDSAHQf4wbGpBC3UiB2s2AmAgASAHIAtqNgIAIAEgCiAGa0ECdCIGIA0gDEHfiX9sakELdSIKazYCQCABIAYgCmo2AiAgAUEEaiEBIABBBGohACACQQJqIQIgCUEBaiIJQQhHDQALIAhBgANrIQAgBSECQQAhCQNAIAMgCUECdGooAgAgBGoiASAAIAIoAgQiBSACKAIcIghqQbNGbCIKIAVBi+AAbGogBSACKAIUIgZqIgsgAigCDCIFIAhqIgxqQaHLAGwiByALQYRnbGoiC2oiDSACKAIYIg4gAigCCCIPakHRImwiECAPQf4wbGoiDyACKAIAQZCAAWoiESACKAIQIhJqQQ10IhNqIhRqQRJ2Qf8HcWotAAA6AAAgASAAIBQgDWtBEnZB/wdxai0AADoAByABIAAgByAMQbuCf2xqIgwgBSAGakH9235sIgcgBUHUxAFsamoiBSAQIA5B34l/bGoiDSARIBJrQQ10Ig5qIhBqQRJ2Qf8HcWotAAA6AAEgASAAIBAgBWtBEnZB/wdxai0AADoABiABIAAgByAGQbODAWxqIAtqIgUgDiANayIGakESdkH/B3FqLQAAOgACIAEgACAGIAVrQRJ2Qf8HcWotAAA6AAUgASAAIAogCEGOE2xqIAxqIgUgEyAPayIIakESdkH/B3FqLQAAOgADIAEgACAIIAVrQRJ2Qf8HcWotAAA6AAQgAkEgaiECIAlBAWoiCUEERw0ACwvFBwELfyAAKALQAiEJIAIuARAhBSABKAJUIgEoAiAhByMAQdAAayIAIAIuAQAgASgCAGxBDXRBgAhyIgYgASgCQCACLgEgbCIIQb6lf2xqQQt1NgIYIAAgCEGhLWwgBmoiBiAFIAdsQbHOAGwiBWtBC3U2AjAgACAFIAZqQQt1NgIAIAEoAiQhBSACLgESIQcgACACLgECIAEoAgRsQQ10QYAIciIGIAEoAkQgAi4BImwiCEG+pX9sakELdTYCHCAAIAhBoS1sIAZqIgYgBSAHbEGxzgBsIgVrQQt1NgI0IAAgBSAGakELdTYCBCABKAIoIQUgAi4BFCEHIAAgAi4BBCABKAIIbEENdEGACHIiBiABKAJIIAIuASRsIghBvqV/bGpBC3U2AiAgACAIQaEtbCAGaiIGIAUgB2xBsc4AbCIFa0ELdTYCOCAAIAUgBmpBC3U2AgggASgCLCEFIAIuARYhByAAIAIuAQYgASgCDGxBDXRBgAhyIgYgASgCTCACLgEmbCIIQb6lf2xqQQt1NgIkIAAgCEGhLWwgBmoiBiAFIAdsQbHOAGwiBWtBC3U2AjwgACAFIAZqQQt1NgIMIAEoAjAhBSACLgEYIQcgACACLgEIIAEoAhBsQQ10QYAIciIGIAEoAlAgAi4BKGwiCEG+pX9sakELdTYCKCAAIAhBoS1sIAZqIgYgBSAHbEGxzgBsIgVrQQt1NgJAIAAgBSAGakELdTYCECABKAI0IQUgAi4BGiEHIAAgAi4BCiABKAIUbEENdEGACHIiBiABKAJUIAIuASpsIgFBvqV/bGpBC3U2AiwgACABQaEtbCAGaiIBIAUgB2xBsc4AbCICa0ELdTYCRCAAIAEgAmpBC3U2AhQgCUGAA2shASAAIQJBACEJA0AgAyAJQQJ0aigCACAEaiIAIAEgAigCFCIFIAIoAgQiB2pBthdsIgggAigCDCIGIAdqQQ10aiIKIAIoAgBBDXRBgICIwABqIgsgAigCECIMQaEtbGoiDSACKAIIQbHOAGwiDmoiD2pBEnZB/wdxai0AADoAACAAIAEgDyAKa0ESdkH/B3FqLQAAOgAFIAAgASAHIAUgBmprQQ10IgcgDEG+pX9sIAtqIgpqQRJ2Qf8HcWotAAA6AAEgACABIAogB2tBEnZB/wdxai0AADoABCAAIAEgCCAFIAZrQQ10aiIFIA0gDmsiB2pBEnZB/wdxai0AADoAAiAAIAEgByAFa0ESdkH/B3FqLQAAOgADIAJBGGohAiAJQQFqIglBA0cNAAsLuwMBDX8gAygCACAEaiIFIAAoAtACQYADayIAIAEoAlQiASgCLCACLgEWbCIGIAEoAgwgAi4BBmwiB2oiCCABKAIkIAIuARJsIgogASgCBCACLgECbCILaiIJakHRImwiDCAJQf4wbGoiCSABKAIgIAIvARBsIg0gASgCACACLwEAbCIOakGEIGoiDyABKAIoIAIvARRsIhAgASgCCCACLwEEbCICaiIBakENdCIRakEQdkH/B3FqLQAAOgAAIAUgACARIAlrQRB2Qf8HcWotAAA6AAMgBSAAIAwgCEHfiX9saiIIIA8gAWtBDXQiAWpBEHZB/wdxai0AADoAASAFIAAgASAIa0EQdkH/B3FqLQAAOgACIAMoAgQgBGoiASAAIAcgBmsiAyALIAprIgRqQdEibCIFIARB/jBsaiIEIA4gDWtBhCBqIgYgAiAQayICakENdCIHakEQdkH/B3FqLQAAOgAAIAEgACAHIARrQRB2Qf8HcWotAAA6AAMgASAAIAUgA0HfiX9saiIDIAYgAmtBDXQiAmpBEHZB/wdxai0AADoAASABIAAgAiADa0EQdkH/B3FqLQAAOgACC2EAIAMoAgAgBGoiAyAAKALQAkGAA2siACABKAJUIgEoAgQgAi8BAmwiBCABKAIAIAIvAQBsQYQgaiIBakEDdkH/B3FqLQAAOgAAIAMgACABIARrQQN2Qf8HcWotAAA6AAEL5gkBGn8jAEGABGsiDyMESyAPIwVJcgRAIA8QSQsgDyQAIAAoAtACIREgASgCVCEBIA8hAANAIAAgASgCQCACLgEgbCIMIAEoAsABIAIuAWBsIg1rIglB49gAbCIOIA1Bg6QBbGoiEiABKAKAASACLgFAbCIKQc/TAGwiFSACLgEAIAEoAgBsQQ10QYAIciILaiIWaiITIAEoAmAgAi4BMGwiCCABKAIgIAIuARBsIgVqQc7WAGwiFCAFQdbtfmxqIAEoAqABIAIuAVBsIgcgBWoiGUHpzwBsIhdqIAEoAuABIAIuAXBsIgYgBWpB/MUAbCIaaiIYa0ELdTYC4AMgACATIBhqQQt1NgIAIAAgCUHUEWwiCSAMQc05bGoiEyAKQdEibCIKIAtqIhhqIhsgBiAIaiIcQatVbCIdIAcgCGpB8AhsIh4gFCAIQc0EbGpqaiIUa0ELdTYCwAMgACAUIBtqQQt1NgIgIAAgDiAMQcJZbGoiDCALIAprIg5qIgogBiAHakGyqX9sIhQgHiAHQfq3f2xqIBdqaiIXa0ELdTYCoAMgACAKIBdqQQt1NgJAIAAgCSANQbBfbGoiDSALIBVrIgtqIgkgHSAGQZjEAGxqIBpqIBRqIgprQQt1NgKAAyAAIAkgCmpBC3U2AmAgACALIA1rIgsgBiAHa0GjGmwiDSAFIAZrQbY5bCIJIBxBl7B/bCIKIAZBhckBbGpqaiIGa0ELdTYC4AIgACAGIAtqQQt1NgKAASAAIA4gDGsiBiAZQdUqbCILIAcgCGtBidoAbCIMIAdB+k5samogDWoiB2tBC3U2AsACIAAgBiAHakELdTYCoAEgACAYIBNrIgcgBSAIa0GjGmwiBiAIQZr+AGxqIAxqIApqIghrQQt1NgKgAiAAIAcgCGpBC3U2AsABIAAgFiASayIIIAYgBUHCin9saiALaiAJaiIFa0ELdTYCgAIgACAFIAhqQQt1NgLgASAAQQRqIQAgAUEEaiEBIAJBAmohAiAQQQFqIhBBCEcNAAsgEUGAA2shASAPIQBBACEIA0AgAyAIQQJ0aigCACAEaiICIAEgACgCBCIFIAAoAhwiB2pBs0ZsIgsgBUGL4ABsaiAFIAAoAhQiBmoiECAAKAIMIgUgB2oiDGpBocsAbCINIBBBhGdsaiIQaiIRIAAoAhgiCSAAKAIIIg5qQdEibCISIA5B/jBsaiIOIAAoAgBBkIABaiIKIAAoAhAiFWpBDXQiFmoiE2pBEnZB/wdxai0AADoAACACIAEgEyARa0ESdkH/B3FqLQAAOgAHIAIgASANIAxBu4J/bGoiDCAFIAZqQf3bfmwiDSAFQdTEAWxqaiIFIBIgCUHfiX9saiIRIAogFWtBDXQiCWoiEmpBEnZB/wdxai0AADoAASACIAEgEiAFa0ESdkH/B3FqLQAAOgAGIAIgASANIAZBs4MBbGogEGoiBSAJIBFrIgZqQRJ2Qf8HcWotAAA6AAIgAiABIAYgBWtBEnZB/wdxai0AADoABSACIAEgCyAHQY4TbGogDGoiBSAWIA5rIgdqQRJ2Qf8HcWotAAA6AAMgAiABIAcgBWtBEnZB/wdxai0AADoABCAAQSBqIQAgCEEBaiIIQRBHDQALIA9BgARqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAvJCAEVfyMAQZADayIQIwRLIBAjBUlyBEAgEBBJCyAQJAAgACgC0AIhFCABKAJUIQEgECEAA0AgASgCwAEhDSACLgFgIQggASgCQCEJIAIuASAhDCAAIAIuAQAgASgCAGxBDXRBgAhyIgogASgCgAEgAi4BQGwiC0G+pX9sakELdSIOIAEoAuABIAIuAXBsIg8gASgCICACLgEQbCIHIAEoAmAgAi4BMGwiBWsiEiABKAKgASACLgFQbCIGa2pBAnQiE2s2ApgCIAAgDiATajYCVCAAIAggDWwiCCAJIAxsIglqQeLGAGwiDCAIQfyRf2xqIg4gC0GSFGwgCmoiE2oiFSAFIAZqQe91bCAPQQ10Ig1rIg8gBSAHakG31QBsIhcgBUHuZGxqaiIWa0ELdTYC0AIgACAVIBZqQQt1NgIcIAAgCEHhp39sIAlBoydsaiIIIAtByUdsIApqIhVqIhYgDyAGIAdqIg9B0swAbCIYIAZBieh+bGpqIhlrQQt1NgK0AiAAIBYgGWpBC3U2AjggACATIA5rIg4gEkHyHWwgDWsiEiAGIAVrQfjZAGwiEyAFQZkrbGpqIgVrQQt1NgLgASAAIAUgDmpBC3U2AowBIAAgC0HG0QBsIApqIgUgDCAJQb0RbGoiCmsiCyAPQZQwbCIJIAdBi7x/bGogEmoiDGtBC3U2AsQBIAAgCyAMakELdTYCqAEgACAFIApqIgUgFyAHQfC3f2xqIBhqIA1qIgdrQQt1NgLsAiAAIAUgB2pBC3U2AgAgACAVIAhrIgUgEyAGQeaTf2xqIAlqIA1qIgZrQQt1NgL8ASAAIAUgBmpBC3U2AnAgAEEEaiEAIAFBBGohASACQQJqIQIgEUEBaiIRQQdHDQALIBRBgANrIQEgECEAQQAhBQNAIAMgBUECdGooAgAgBGoiAiABIAAoAgwiByAAKAIEIgZqQe87bCIIIAYgB2tB8wpsIglrIAAoAhQiCiAGakGjJ2wiFGoiDCAAKAIQIgYgACgCGCILa0G3OGwiDiALQYN7bGogACgCAEENdEGAgIjAAGoiDSALIAAoAggiEWoiC0HG0QBsaiIPaiISakESdkH/B3FqLQAAOgAAIAIgASASIAxrQRJ2Qf8HcWotAAA6AAYgAiABIAcgCmpB4ad/bCIHIAggCWpqIgggESAGa0GSFGwiCSAGQZWKf2wgDWpqIA5qIgxqQRJ2Qf8HcWotAAA6AAEgAiABIAwgCGtBEnZB/wdxai0AADoABSACIAEgFCAKQd73AGxqIAdqIgcgCSARQfHhfmxqIA9qIgpqQRJ2Qf8HcWotAAA6AAIgAiABIAogB2tBEnZB/wdxai0AADoABCACIAEgBiALa0HB2gBsIA1qQRJ2Qf8HcWotAAA6AAMgAEEcaiEAIAVBAWoiBUEORw0ACyAQQZADaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALkwcBEn8jAEGgAmsiDSMESyANIwVJcgRAIA0QSQsgDSQAIAAoAtACIRMgASgCVCEBIA0hAANAIAEoAoABIQ4gAi4BQCEKIAAgASgCQCACLgEgbCIIIAEoAsABIAIuAWBsIhBrQQ10IgsgAi4BACABKAIAbEENdEGACHIiBmoiDCABKAIgIAIuARBsIgUgASgC4AEgAi4BcGwiB2siESABKAJgIAIuATBsIg8gASgCoAEgAi4BUGwiCWsiFGpB0SJsIhUgEUH+MGxqIhFrQQt1NgLwASAAIAwgEWpBC3U2AhggACAGIAtrIgsgFSAUQd+Jf2xqIgxrQQt1NgKoASAAIAsgDGpBC3U2AmAgACAKIA5sQbHOAGwiCiAGaiILIBBBDXQiECAIQbbXAGxqIgxrIhEgByAFIAlqIhRqQY03bCIOIA9Br11sIhUgBUHcVGxqIAdBjIF/bGpqIhZrQQt1NgKQASAAIBEgFmpBC3U2AnggACALIAxqIgsgDiAUQdsQbGoiDCAPQc/TAGwiDyAFQfcRbGpqIgVrQQt1NgKIAiAAIAUgC2pBC3U2AgAgACAIQbYXbCAQayIFIAYgCmsiBmoiCCAHIAlqQYu9f2wiCiAJQbChf2wgFWpqIAxqIglrQQt1NgLYASAAIAggCWpBC3U2AjAgACAGIAVrIgYgB0HG5QBsIA9rIA5qIApqIgdrQQt1NgLAASAAIAYgB2pBC3U2AkggAEEEaiEAIAFBBGohASACQQJqIQIgEkEBaiISQQZHDQALIBNBgANrIQEgDSEAQQAhBwNAIAMgB0ECdGooAgAgBGoiAiABIAAoAhQiBiAAKAIEIgVqQbYXbCISIAAoAgwiCSAFakENdGoiCCAAKAIAQQ10QYCAiMAAaiIPIAAoAhAiDkGhLWxqIhMgACgCCEGxzgBsIgpqIhBqQRJ2Qf8HcWotAAA6AAAgAiABIBAgCGtBEnZB/wdxai0AADoABSACIAEgBSAGIAlqa0ENdCIFIA5BvqV/bCAPaiIIakESdkH/B3FqLQAAOgABIAIgASAIIAVrQRJ2Qf8HcWotAAA6AAQgAiABIBIgBiAJa0ENdGoiBiATIAprIgVqQRJ2Qf8HcWotAAA6AAIgAiABIAUgBmtBEnZB/wdxai0AADoAAyAAQRhqIQAgB0EBaiIHQQxHDQALIA1BoAJqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAutBgERfyMAQdABayIKIwRLIAojBUlyBEAgChBJCyAKJAAgACgC0AIhDiABKAJUIQEgCiEAA0AgASgCwAEhBiACLgFgIQggASgCQCEJIAIuASAhECAAIAIuAQAgASgCAGxBDXRBgAhyIgUgASgCgAEgAi4BQGwiDEG+pX9sakELdSIPIAEoAiAgAi4BEGwiByABKAKgASACLgFQbCIRIAEoAmAgAi4BMGwiEiABKALgASACLgFwbCITayINamtBAnQiFGs2AowBIAAgDyAUajYCKCAAIAYgCGwiBiAJIBBsIghqQZo1bCIJIAhB8SBsaiIIIAxBnckAbCAFaiIQaiIPIBFBDXQiESANQeMTbGoiFCASIBNqIhJB7zxsIhMgB0Gz2QBsamoiFWtBC3U2ArQBIAAgDyAVakELdTYCACAAIAxBhGRsIAVqIgUgCSAGQdz0fmxqIgxrIgYgDUGdTGwgEWoiDSAHQYwpbCASQc8lbCIJa2oiD2tBC3U2AnggACAGIA9qQQt1NgI8IAAgECAIayIGIAdBlA5sIBNrIBRqIghrQQt1NgJkIAAgBiAIakELdTYCUCAAIAUgDGoiBSAHQdPQAGwgCSANamsiB2tBC3U2AqABIAAgBSAHakELdTYCFCAAQQRqIQAgAUEEaiEBIAJBAmohAiALQQFqIgtBBUcNAAsgDkGAA2shASAKIQBBACEHA0AgAyAHQQJ0aigCACAEaiICIAEgACgCDCILIAAoAgQiBWpBmjVsIgwgBUHxIGxqIgUgACgCAEENdEGAgIjAAGoiDSAAKAIIIg4gACgCECIGayIIQdAWbGoiCSAGIA5qQcwybCIOaiIGakESdkH/B3FqLQAAOgAAIAIgASAGIAVrQRJ2Qf8HcWotAAA6AAQgAiABIAwgC0Hc9H5saiILIAkgDmsiBWpBEnZB/wdxai0AADoAASACIAEgBSALa0ESdkH/B3FqLQAAOgADIAIgASAIQcCl//8AbCANakESdkH/B3FqLQAAOgACIABBFGohACAHQQFqIgdBCkcNAAsgCkHQAWoiACMESyAAIwVJcgRAIAAQSQsgACQAC6AGARJ/IAAoAtACIQsgASgCVCEBIwBBgAFrIgkhAEEEIQcDQCAAAn8CQCACLgEQIgYgAi8BICIFckH//wNxDQBBACEFIAIvATANACACLwFADQAgAi8BUA0AIAIvAWANACACLwFwDQAgACACLgEAIAEoAgBsQQJ0IgU2AmAgACAFNgJQIAAgBTYCQCAAIAU2AjAgACAFNgIgIAAgBTYCECAAIAU2AgBBHAwBCyAAIAEoAsABIAIuAWBsIgogASgCQCAFwWwiBWpB0SJsIgwgBUH+MGxqIhEgAi4BQCABKAKAAWxBDXQiDSACLgEAIAEoAgBsQQ10QYAIciIOaiISaiIPIAEoAiAgBmwiBSABKALgASACLgFwbCIGakGzRmwiEyAFQYvgAGxqIAUgASgCoAEgAi4BUGwiCGoiECABKAJgIAIuATBsIgUgBmoiFGpBocsAbCIVIBBBhGdsaiIQaiIWa0ELdTYCcCAAIA8gFmpBC3U2AgAgACAMIApB34l/bGoiCiAOIA1rIgxqIg0gFSAUQbuCf2xqIg4gBSAIakH9235sIg8gBUHUxAFsamoiBWtBC3U2AmAgACAFIA1qQQt1NgIQIAAgDCAKayIFIA8gCEGzgwFsaiAQaiIIa0ELdTYCUCAAIAUgCGpBC3U2AiAgACATIAZBjhNsaiAOaiIFIBIgEWsiBmpBC3U2AjAgBiAFa0ELdSEFQRALQQJ0aiAFNgIAIAJBAmohAiABQQRqIQEgAEEEaiEAIAdBAUshBSAHQQFrIQcgBQ0ACyALQYADayEAIAkhAkEAIQcDQCADIAdBAnRqKAIAIARqIgEgACACKAIMIgkgAigCBCIFakHRImwiBiAFQf4wbGoiBSACKAIAQZCAAWoiCCACKAIIIgtqQQ10IgpqQRJ2Qf8HcWotAAA6AAAgASAAIAogBWtBEnZB/wdxai0AADoAAyABIAAgBiAJQd+Jf2xqIgkgCCALa0ENdCIFakESdkH/B3FqLQAAOgABIAEgACAFIAlrQRJ2Qf8HcWotAAA6AAIgAkEQaiECIAdBAWoiB0EIRw0ACwvSAwEMfyAAKALQAiEOIAEoAlQhACMAQdAAayIHIQEDQCAAKAJAIQogAi4BICELIAEgAi4BACAAKAIAbEENdEGACHIiDCAAKAKAASACLgFAbCINQb6lf2xqQQt1Ig8gACgCICACLgEQbCIFIAAoAmAgAi4BMGwiBiAAKAKgASACLgFQbCIJamtBAnQiEGs2AjAgASAPIBBqNgIMIAEgCiALbEGxzgBsIgogDUGhLWwgDGoiC2oiDCAFIAlqQbYXbCINIAUgBmpBDXRqIgVrQQt1NgI8IAEgBSAMakELdTYCACABIAsgCmsiBSANIAkgBmtBDXRqIgZrQQt1NgIkIAEgBSAGakELdTYCGCABQQRqIQEgAEEEaiEAIAJBAmohAiAIQQFqIghBA0cNAAsgDkGAA2shACAHIQJBACEBA0AgAyABQQJ0aigCACAEaiIHIAAgAigCAEENdEGAgIjAAGoiCCACKAIIIgVBoS1saiIGIAIoAgRBsc4AbCIJakESdkH/B3FqLQAAOgAAIAcgACAGIAlrQRJ2Qf8HcWotAAA6AAIgByAAIAVBvqX//wBsIAhqQRJ2Qf8HcWotAAA6AAEgAkEMaiECIAFBAWoiAUEGRw0ACwvbAwENfyADKAIAIARqIgUgACgC0AJBgANrIgAgASgCVCIBKAJgIAIuATBsIgYgASgCICACLgEQbCIHakHRImwiCCAHQf4wbGoiByABKAJAIAIvASBsIgkgASgCACACLwEAbCIKakENdCINakGAgIIQaiILIAEoAmQgAi4BMmwiDiABKAIkIAIuARJsIgxqQdEibCIPIAxB/jBsaiIMIAEoAkQgAi8BImwiECABKAIEIAIvAQJsIgFqQQ10IgJqIhFqQRB2Qf8HcWotAAA6AAAgBSAAIAsgEWtBEHZB/wdxai0AADoAASADKAIEIARqIgUgACAIIAZB34l/bGoiBiAKIAlrQQ10IghqQYCAghBqIgkgDyAOQd+Jf2xqIgogASAQa0ENdCIBaiILakEQdkH/B3FqLQAAOgAAIAUgACAJIAtrQRB2Qf8HcWotAAA6AAEgAygCCCAEaiIFIAAgCCAGa0GAgIIQaiIGIAEgCmsiAWpBEHZB/wdxai0AADoAACAFIAAgBiABa0EQdkH/B3FqLQAAOgABIAMoAgwgBGoiASAAIA0gB2tBgICCEGoiAyACIAxrIgJqQRB2Qf8HcWotAAA6AAAgASAAIAMgAmtBEHZB/wdxai0AADoAAQtnAQF/IAMoAgAgBGogACgC0AJBgANrIgAgASgCVCIBKAIgIAIvARBsIgUgASgCACACLwEAbEGEIGoiAWpBA3ZB/wdxai0AADoAACADKAIEIARqIAAgASAFa0EDdkH/B3FqLQAAOgAACx8AIABBARDeBCAAQQAQ3gQgACgCBBCZCyAAQQA2AgQLyQIBA38gACgCBCEDAkAgAUECTwRAIAAoAgAiAiABNgIYIAJBDzYCFCAAIAAoAgAoAgARAAAMAQsgAUEBRw0AIAMoAkQiAgRAA0AgAigCKARAIAJBADYCKCAAIAJBMGogAigCOBECAAsgAigCLCICDQALCyADQQA2AkQgAygCSCICBEADQCACKAIoBEAgAkEANgIoIAAgAkEwaiACKAI4EQIACyACKAIsIgINAAsLIANBADYCSAsgAyABQQJ0aiIBIgAoAjwhAiAAQQA2AjwgAgRAA0AgAigCACEAIAIoAgQgAigCCGpBEGohBCACEJkLIAMgAygCTCAEazYCTCAAIgINAAsLIAEoAjQhAiABQQA2AjQgAgRAA0AgAigCACEAIAIoAgQgAigCCGpBEGohASACEJkLIAMgAygCTCABazYCTCAAIgINAAsLC/sGAQd/AkACQCACIANqIgggASgCBEsNACABKAIMIANJDQAgASgCAA0BCyAAKAIAIgNBFzYCFCAAIAMoAgARAAALAkAgAiABKAIYIgNPBEAgCCABKAIQIANqTQ0BCyABKAIoRQRAIAAoAgAiA0HHADYCFCAAIAMoAgARAAALIAEoAiQEQAJAIAEoAhAiB0EATA0AIAFBMGohCSABKAIIQQd0IgogASgCGGwhBSABKAIUIQZBACEDA0AgBiAHIANrIgcgBiAHSBsiBiABKAIcIAEoAhggA2oiB2siCyAGIAtIGyIGIAEoAgQgB2siByAGIAdIGyIGQQBMDQEgACAJIAEoAgAgA0ECdGooAgAgBSAGIApsIgYgASgCNBEGACAFIAZqIQUgASgCECIHIAEoAhQiBiADaiIDSg0ACwsgAUEANgIkC0EAIQMgASACIAggASgCECIHayIFQQAgBUEAShsgASgCGCACSRsiBTYCGCAHQQBMDQAgAUEwaiEJIAEoAghBB3QiCiAFbCEFIAEoAhQhBgNAIAYgByADayIHIAYgB0gbIgYgASgCHCABKAIYIANqIgdrIgsgBiALSBsiBiABKAIEIAdrIgcgBiAHSBsiBkEATA0BIAAgCSABKAIAIANBAnRqKAIAIAUgBiAKbCIGIAEoAjARBgAgBSAGaiEFIAEoAhAiByABKAIUIgYgA2oiA0oNAAsLAkACQAJAIAEoAhwiBSAITw0AAkACQAJAIAIgBUsEQCACIQUgBEUNASAAKAIAIgNBFzYCFCAAIAMoAgARAAAMAgsgBA0BCyABKAIgDQEgACgCACIDQRc2AhQgACADKAIAEQAADAQLIAEgCDYCHCABKAIgRQ0CCyAFIAEoAhgiAGsiAyAIIABrIgZPDQAgASgCCEEHdCEAIAggBUF/c2ohByAIIAVrQQNxIggEQEEAIQUDQCABKAIAIANBAnRqKAIAQQAgABCXCxogA0EBaiEDIAVBAWoiBSAIRw0ACwsgB0EDSQ0AA0AgA0ECdCIFIAEoAgBqKAIAQQAgABCXCxogBSABKAIAaigCBEEAIAAQlwsaIAUgASgCAGooAghBACAAEJcLGiAFIAEoAgBqKAIMQQAgABCXCxogA0EEaiIDIAZHDQALCyAERQ0BCyABQQE2AiQLIAEoAgAgAiABKAIYa0ECdGoL8gYBB38CQAJAIAIgA2oiCCABKAIESw0AIAEoAgwgA0kNACABKAIADQELIAAoAgAiA0EXNgIUIAAgAygCABEAAAsCQCACIAEoAhgiA08EQCAIIAEoAhAgA2pNDQELIAEoAihFBEAgACgCACIDQccANgIUIAAgAygCABEAAAsgASgCJARAAkAgASgCECIHQQBMDQAgAUEwaiEJIAEoAggiCiABKAIYbCEFIAEoAhQhBkEAIQMDQCAGIAcgA2siByAGIAdIGyIGIAEoAhwgASgCGCADaiIHayILIAYgC0gbIgYgASgCBCAHayIHIAYgB0gbIgZBAEwNASAAIAkgASgCACADQQJ0aigCACAFIAYgCmwiBiABKAI0EQYAIAUgBmohBSABKAIQIgcgASgCFCIGIANqIgNKDQALCyABQQA2AiQLQQAhAyABIAIgCCABKAIQIgdrIgVBACAFQQBKGyABKAIYIAJJGyIFNgIYIAdBAEwNACABQTBqIQkgASgCCCIKIAVsIQUgASgCFCEGA0AgBiAHIANrIgcgBiAHSBsiBiABKAIcIAEoAhggA2oiB2siCyAGIAtIGyIGIAEoAgQgB2siByAGIAdIGyIGQQBMDQEgACAJIAEoAgAgA0ECdGooAgAgBSAGIApsIgYgASgCMBEGACAFIAZqIQUgASgCECIHIAEoAhQiBiADaiIDSg0ACwsCQAJAAkAgASgCHCIFIAhPDQACQAJAAkAgAiAFSwRAIAIhBSAERQ0BIAAoAgAiA0EXNgIUIAAgAygCABEAAAwCCyAEDQELIAEoAiANASAAKAIAIgNBFzYCFCAAIAMoAgARAAAMBAsgASAINgIcIAEoAiBFDQILIAUgASgCGCIAayIDIAggAGsiBk8NACABKAIIIQAgCCAFQX9zaiEHIAggBWtBA3EiCARAQQAhBQNAIAEoAgAgA0ECdGooAgBBACAAEJcLGiADQQFqIQMgBUEBaiIFIAhHDQALCyAHQQNJDQADQCADQQJ0IgUgASgCAGooAgBBACAAEJcLGiAFIAEoAgBqKAIEQQAgABCXCxogBSABKAIAaigCCEEAIAAQlwsaIAUgASgCAGooAgxBACAAEJcLGiADQQRqIgMgBkcNAAsLIARFDQELIAFBATYCJAsgASgCACACIAEoAhhrQQJ0agv1AwEFfyAAKAIEIgUoAkQiAQRAA0AgASgCAEUEQCABKAIIIgMgASgCBGwgBGohBCADIAEoAgxsIAJqIQILIAEoAiwiAQ0ACwsgBSgCSCIBBEADQCABKAIARQRAIAEoAggiAyABKAIEbEEHdCAEaiEEIAEoAgwgA2xBB3QgAmohAgsgASgCLCIBDQALCwJAIAJBAEwNAEGAlOvcAyEDIAUoAkwaIAQiASABSARAQQEgASACbSIBIAFBAUwbIQMLIAUoAkQiAQRAA0AgASgCAEUEQAJAIAMgASgCBCICQQFrIAEoAgwiBG5BAWpOBEAgASACNgIQDAELIAEgAyAEbDYCECAAIAEoAgggAmwQ6AQgAUEBNgIoIAEoAhAhAgsgASAAQQEgASgCCCACEOUENgIAIAUoAlAhAiABQQA2AiQgAUIANwIYIAEgAjYCFAsgASgCLCIBDQALCyAFKAJIIgFFDQADQCABKAIARQRAAkAgAyABKAIEIgJBAWsgASgCDCIEbkEBak4EQCABIAI2AhAMAQsgASADIARsNgIQIAAgAiABKAIIbEEHdBDoBCABQQE2AiggASgCECECCyABIABBASABKAIIIAIQ5AQ2AgAgBSgCUCECIAFBADYCJCABQgA3AhggASACNgIUCyABKAIsIgENAAsLC3oBAn8gACgCBCEGIAFBAUcEQCAAKAIAIgcgATYCGCAHQQ82AhQgACAAKAIAKAIAEQAACyAAIAFBgAEQ5wQiAEEANgIoIAAgAjYCICAAIAU2AgwgACADNgIIIAAgBDYCBCAAQQA2AgAgACAGKAJINgIsIAYgADYCSCAAC3oBAn8gACgCBCEGIAFBAUcEQCAAKAIAIgcgATYCGCAHQQ82AhQgACAAKAIAKAIAEQAACyAAIAFBgAEQ5wQiAEEANgIoIAAgAjYCICAAIAU2AgwgACADNgIIIAAgBDYCBCAAQQA2AgAgACAGKAJENgIsIAYgADYCRCAAC/IDAQl/QfCT69wDIAJBB3QiC24hBSAAKAIEIQQgC0Hxk+vcA08EQCAAKAIAIgZByAA2AhQgACAGKAIAEQAACyAEIAUgAyADIAVKGyIFNgJQIAAgASADQQJ0EOcEIQogAwRAIAFBAkkhDCACQQd0IQlBACEGA0AgACgCBCEEIAsgBSADIAZrIgIgAiAFSxsiBWwiB0Hxk+vcA08EQCAAKAIAQriAgIAwNwIUIAAgACgCACgCABEAAAsgDEUEQCAAKAIAIgIgATYCGCACQQ82AhQgACAAKAIAKAIAEQAACyAHQRByIggQmgsiAkUEQCAAKAIAQriAgIDAADcCFCAAIAAoAgAoAgARAAALIAQgBCgCTCAIajYCTCAEIAFBAnRqIgQoAjwhCCACQQA2AgggAiAHNgIEIAIgCDYCACAEIAI2AjwCQCAFRQ0AIAJBEGohAkEAIQcgBSEEIAVBA3EiCARAA0AgCiAGQQJ0aiACNgIAIARBAWshBCAGQQFqIQYgAiAJaiECIAdBAWoiByAIRw0ACwsgBUEESQ0AA0AgCiAGQQJ0aiIHIAI2AgAgByACIAlqIgIgCWoiCDYCCCAHIAI2AgQgByAIIAlqIgI2AgwgAiAJaiECIAZBBGohBiAEQQRrIgQNAAsLIAMgBksNAAsLIAoL+AMBCX9B8JPr3AMgAm4hCCAAKAIEIQQgAkHxk+vcA08EQCAAKAIAIgdByAA2AhQgACAHKAIAEQAACyAEIAggAyADIAhKGyIINgJQIAAgASADQQJ0EOcEIQogAwRAIAFBAkkhC0EAIQcDQCAAKAIEIQUgCCADIAdrIgQgBCAISxsiCCACbCIEQfGT69wDTwRAIAAoAgBCuICAgDA3AhQgACAAKAIAKAIAEQAACyAEQQggBEEHcSIGa0EAIAYbaiEGIAtFBEAgACgCACIEIAE2AhggBEEPNgIUIAAgACgCACgCABEAAAsgBkEQaiIJEJoLIgRFBEAgACgCAEK4gICAwAA3AhQgACAAKAIAKAIAEQAACyAFIAUoAkwgCWo2AkwgBSABQQJ0aiIFKAI8IQkgBEEANgIIIAQgBjYCBCAEIAk2AgAgBSAENgI8AkAgCEUNACAEQRBqIQVBACEGIAgiBEEDcSIJBEADQCAKIAdBAnRqIAU2AgAgBEEBayEEIAIgBWohBSAHQQFqIQcgBkEBaiIGIAlHDQALCyAIQQRJDQADQCAKIAdBAnRqIgYgBTYCACAGIAIgBWoiBSACaiIJIAJqIgw2AgwgBiAJNgIIIAYgBTYCBCAHQQRqIQcgAiAMaiEFIARBBGsiBA0ACwsgAyAHSw0ACwsgCgvXAQEDfyAAKAIEIQQgAkHxk+vcA08EQCAAKAIAQriAgIAwNwIUIAAgACgCACgCABEAAAsgAkEIIAJBB3EiA2tBACADG2ohAyABQQJPBEAgACgCACICIAE2AhggAkEPNgIUIAAgACgCACgCABEAAAsgA0EQaiIFEJoLIgJFBEAgACgCAEK4gICAwAA3AhQgACAAKAIAKAIAEQAACyAEIAQoAkwgBWo2AkwgBCABQQJ0aiIAKAI8IQEgAkEANgIIIAIgAzYCBCACIAE2AgAgACACNgI8IAJBEGoLhAMBBn8gACgCBCEGIAJB8ZPr3ANPBEAgACgCAEK4gICAEDcCFCAAIAAoAgAoAgARAAALQQggAkEHcSIDa0EAIAMbIQMgAUECTwRAIAAoAgAiBSABNgIYIAVBDzYCFCAAIAAoAgAoAgARAAALIAIgA2ohAwJAAkAgBiABQQJ0aiIIKAI0IgJFDQADQCADIAIiBCgCCEsEQCAEKAIAIgINAQwCCwsgBCEBDAELIAFBAnRB2MqqkgFB0MqqkgEgBBtqKAIAIgFB8JPr3AMgA2siAiABIAJJGyICIANqIgVBEGoiBxCaCyIBRQRAA0AgAkHjAE0EQCAAKAIAQriAgIAgNwIUIAAgACgCACgCABEAAAsgAkEBdiIBIQIgASADaiIFQRBqIgcQmgsiAUUNAAsLIAYgBigCTCAHajYCTCABIAU2AgggAUIANwMAIARFBEAgCCABNgI0DAELIAQgATYCAAsgASABKAIEIgAgA2o2AgQgASABKAIIIANrNgIIIAAgAWpBEGoLGAAgACgCACIBQTM2AhQgACABKAIAEQAACxoBAX8gACgCACIBQS82AhQgACABKAIAEQAAC/AEAQl/IAAgACgC5AMiAigCEDYCiAEgACACKAIUNgKEAQJAAkACQAJAAkAgACgCWA4DAAECAwsgACgCeEEDRgRAIAJBugI2AgQPCyACQbsCNgIEDwsgACgCeCEBIAJBADYCMCACQbwCQb0CIAFBA0YbNgIEIAIoAhxFBEAgABDrBAsgAigCNA0CIAAoAngiA0EATA0CIAAoAuQDIQZBACECA0AgBiACQQJ0aiIHKAIgIQVBACEBAkACQCACRQ0AA0AgBiABQQJ0aiIEKAIgIAVHBEAgAUEBaiIBIAJHDQEMAgsLIAQoAjQiBA0BCyAFQQl0QYAEayEFQQAhAyAAQQFBgAggACgCBCgCABEEACEEA0BBACEBA0AgBCADQQZ0aiIIIAFBAnRqQf8BIANBBHRB4MqqkgFqIgkgAWotAABBAXRrQf8BbCAFbTYCACAIIAFBAXIiCkECdGpB/wEgCSAKai0AAEEBdGtB/wFsIAVtNgIAIAFBAmoiAUEQRw0ACyADQQFqIgNBEEcNAAsgACgCeCEDCyAHIAQ2AjQgAkEBaiICIANIDQALDAILIAJBADYCVCACQb4CNgIEAkAgAigCRARAIAAoAnghAwwBCyAAKAJ4QQBMDQIgACgCcEEBdEEEaiEEQQAhAQNAIAIgAUECdGogAEEBIAQgACgCBCgCBBEEADYCRCABQQFqIgEgACgCeCIDSA0ACwsgA0EATA0BIAAoAnBBAXRBBGohA0EAIQEDQCACIAFBAnRqKAJEQQAgAxCXCxogAUEBaiIBIAAoAnhIDQALDAELIAAoAgAiAUExNgIUIAAgASgCABEAAAsL8QIBCn8gACgC5AMiBCAAKAJYIgFBAUYiAjYCHCAEIABBAUH+BUGAAiACGyAAKAJ4IAAoAgQoAggRCAA2AhggACgCeEEASgRAIAQoAhQhBiABQQFHIQgDQCAGIAQgB0ECdCIBaigCICICbSEGIAhFBEAgBCgCGCABaiIDIAMoAgBB/wFqNgIACyACQf4BaiIJIAJBAXRBAmsiCm0hBSAEKAIYIAFqKAIAIQFBACECQQAhAwNAIAMgBUoEQANAIAMgCSACQQFqIgJB/gNsaiAKbSIFSg0ACwsgASADaiACIAZsOgAAIANBAWoiA0GAAkcNAAsgCEUEQEEBIQIDQCABIAJrIgUgAS0AADoAACABIAJqIgMgAS0A/wE6AP8BIAEgAkF/c2ogAS0AADoAACADIAEtAP8BOgCAAiAFQQJrIAEtAAA6AAAgAyABLQD/AToAgQIgAkEDaiICQYACRw0ACwsgB0EBaiIHIAAoAnhIDQALCwugAgEJfyADQQBKBEAgACgC5AMoAhgiBCgCCCEHIAQoAgQhCCAEKAIAIQkgACgCcCIGQQFrIQsgBkEBcSEMA0ACQCAGRQ0AIAEgCkECdCIEaigCACEAIAIgBGooAgAhBSAMBH8gBSAHIAAtAAJqLQAAIAggAC0AAWotAAAgCSAALQAAai0AAGpqOgAAIAVBAWohBSAAQQNqIQAgCwUgBgshBCAGQQFGDQADQCAFIAcgAC0AAmotAAAgCCAALQABai0AACAJIAAtAABqLQAAamo6AAAgBSAHIAAtAAVqLQAAIAggAC0ABGotAAAgCSAALQADai0AAGpqOgABIAVBAmohBSAAQQZqIQAgBEECayIEDQALCyAKQQFqIgogA0cNAAsLC+cCAQ9/IANBAEoEQCAAKAJwIQwgACgC5AMoAhghBiAAKAJ4IgdBfHEhESAHQQNxIQ0gB0EESSESA0AgDARAIAEgCEECdCIAaigCACEJIAAgAmooAgAhCiAMIQ4DQAJAIAdBAEwEQEEAIQQMAQtBACEPQQAhBEEAIQUgCSEAQQAhECASRQRAA0AgBCAGIAVBAnQiC2ooAgAgAC0AAGotAABqIAYgC0EEcmooAgAgAC0AAWotAABqIAYgC0EIcmooAgAgAC0AAmotAABqIAYgC0EMcmooAgAgAC0AA2otAABqIQQgBUEEaiEFIABBBGohACAQQQRqIhAgEUcNAAsLIA0EQANAIAQgBiAFQQJ0aigCACAALQAAai0AAGohBCAFQQFqIQUgAEEBaiEAIA9BAWoiDyANRw0ACwsgByAJaiEJCyAKIAQ6AAAgCkEBaiEKIA5BAWsiDg0ACwsgCEEBaiIIIANHDQALCwuNAgEOfyADQQBKBEAgACgCcCEKIAAoAuQDIgQoAhgiACgCCCEMIAAoAgQhDSAAKAIAIQ4gBCgCMCEGA0AgCgRAIAZBBnQiACAEKAI8aiEPIAQoAjggAGohECAEKAI0IABqIREgASAHQQJ0IgVqKAIAIQAgAiAFaigCACEIQQAhCSAKIQUDQCAIIA0gECAJQQJ0IgtqKAIAIAAtAAFqai0AACAOIAsgEWooAgAgAC0AAGpqLQAAaiAMIAsgD2ooAgAgAC0AAmpqLQAAajoAACAIQQFqIQggAEEDaiEAIAlBAWpBD3EhCSAFQQFrIgUNAAsLIAQgBkEBakEPcSIGNgIwIAdBAWoiByADRw0ACwsL8gIBD38gA0EASgRAIAAoAnghBiAAKALkAyEHIAAoAnAiCEF+cSEPIAhBAXEhEANAIAIgCkECdCIAaiIRKAIAQQAgCBCXCxogBygCMCENIAZBAEoEQCAAIAFqIRJBACEJA0ACQCAIRQ0AIAcgCUECdCIAaigCNCANQQZ0aiELIAcoAhggAGooAgAhDCASKAIAIAlqIQQgESgCACEAQQAhBUEAIQ4gCEEBRwRAA0AgACAALQAAIAwgCyAFQQJ0aigCACAELQAAamotAABqOgAAIAAgAC0AASAMIAsgBUEBakEPcUECdGooAgAgBCAGaiIELQAAamotAABqOgABIABBAmohACAFQQJqQQ9xIQUgBCAGaiEEIA5BAmoiDiAPRw0ACwsgEEUNACAAIAAtAAAgDCALIAVBAnRqKAIAIAQtAABqai0AAGo6AAALIAlBAWoiCSAGRw0ACwsgByANQQFqQQ9xNgIwIApBAWoiCiADRw0ACwsLuAMBGH8gA0EASgRAIAAoAtACIRIgACgC5AMhBUEAIAAoAngiCWshEyAAKAJwIgpBAWsiFCAJbCEVIApBAWpBAXQhFgNAIAIgDUECdCIAaiIXKAIAQQAgChCXCxogCUEASgRAIAAgAWohGEEAIQYDQCAYKAIAIAZqIQcgFygCACEAAn8gBSgCVARAIAAgFGohACAHIBVqIQdBfyEOIBMhDyAFIAZBAnRqKAJEIBZqDAELQQEhDiAJIQ8gBSAGQQJ0aigCRAshBEEAIQsCQCAKRQRAIAQhCEEAIQwMAQsgBkECdCIIIAUoAhBqKAIAIRkgBSgCGCAIaigCACEaQQAhECAKIRFBACEMA0AgACAaIBIgBy0AACALIAQgDkEBdGoiCC4BAGpBCGpBBHVqai0AACILai0AACIbIAAtAABqOgAAIAQgCyAZIBtqLQAAayIEQQNsIAxqOwEAIARBB2whCyAEQQVsIBBqIQwgACAOaiEAIAcgD2ohByAEIRAgCCEEIBFBAWsiEQ0ACwsgCCAMOwEAIAZBAWoiBiAJRw0ACwsgBSAFKAJURTYCVCANQQFqIg0gA0cNAAsLCw0AIAAoAuQDQQE2AhwL1QUBBH8gACgC5AMiAygCGCECAkACQAJ/IAAoAlhFBEAgAQ0CQcECDAELIABBAjYCWCABDQFBwgILIQEgA0HDAjYCCCADIAE2AgRBASEBAkAgACgChAEiBEEATAR/QToFIARBgQJJDQFBgAIhAUE7CyEEIAAoAgAiBSABNgIYIAUgBDYCFCAAIAAoAgAoAgARAAALIAAoAlhBAkcNASAAKAJwQQZsQQxqIQEgAygCICIERQRAIAMgAEEBIAEgACgCBCgCBBEEACIENgIgCyAEQQAgARCXCxogAygCKEUEQCAAEPMECyADQQA2AiQMAQsgA0EBNgIcIANBxAI2AgggA0HFAjYCBAsgAygCHARAIAIoAgBBAEGAIBCXCxogAigCBEEAQYAgEJcLGiACKAIIQQBBgCAQlwsaIAIoAgxBAEGAIBCXCxogAigCEEEAQYAgEJcLGiACKAIUQQBBgCAQlwsaIAIoAhhBAEGAIBCXCxogAigCHEEAQYAgEJcLGiACKAIgQQBBgCAQlwsaIAIoAiRBAEGAIBCXCxogAigCKEEAQYAgEJcLGiACKAIsQQBBgCAQlwsaIAIoAjBBAEGAIBCXCxogAigCNEEAQYAgEJcLGiACKAI4QQBBgCAQlwsaIAIoAjxBAEGAIBCXCxogAigCQEEAQYAgEJcLGiACKAJEQQBBgCAQlwsaIAIoAkhBAEGAIBCXCxogAigCTEEAQYAgEJcLGiACKAJQQQBBgCAQlwsaIAIoAlRBAEGAIBCXCxogAigCWEEAQYAgEJcLGiACKAJcQQBBgCAQlwsaIAIoAmBBAEGAIBCXCxogAigCZEEAQYAgEJcLGiACKAJoQQBBgCAQlwsaIAIoAmxBAEGAIBCXCxogAigCcEEAQYAgEJcLGiACKAJ0QQBBgCAQlwsaIAIoAnhBAEGAIBCXCxogAigCfEEAQYAgEJcLGiADQQA2AhwLC8sDAQR/IAAoAuQDIABBAUH8DyAAKAIEKAIAEQQAIgBB/AdqIgE2AiggAEL/////DzcC+AcgAEKBgICAIDcCgAggAEKDgICAwAA3AogIIABC/f///283AvAHIABChYCAgOAANwKQCCAAQvv///9PNwLoByAAQoeAgICAATcCmAggAEL5////r383AuAHIABCiYCAgKABNwKgCCAAQvf///+PfzcC2AcgAEKLgICAwAE3AqgIIABC9f///+9+NwLQByAAQo2AgIDgATcCsAggAELz////z343AsgHIABBDzYCuAggAELx////r343AsAHQRAhAkEQIQMDQCABIANBAnQiAGogAjYCACABIABrQQAgAmsiBDYCACABIABBBHJqIAI2AgAgASADQX9zQQJ0aiAENgIAIAJBAWohAkEwIQAgA0ECaiIDQTBHDQALA0AgASAAQQJ0IgJqQSA2AgAgASACa0FgNgIAIAEgAkEEcmpBIDYCACABIABBf3NBAnRqQWA2AgAgASACQQhyakEgNgIAIAFBfiAAa0ECdGpBYDYCACABIAJBDHJqQSA2AgAgAUF9IABrQQJ0akFgNgIAIABBBGoiAEGAAkcNAAsLvwEBC38gA0EASgRAIAAoAnAhCSAAKALkAygCGCEKA0AgCQRAIAEgBkECdCIFaigCACEEIAIgBWooAgAhByAJIQUDQCAKIAQtAABBA3YiC0ECdGooAgAgBC0AAUECdiIMQQZ0aiAELQACQQN2Ig1BAXRqIg4vAQAiCEUEQCAAIAsgDCANEPkEIA4tAAAhCAsgBEEDaiEEIAcgCEEBazoAACAHQQFqIQcgBUEBayIFDQALCyAGQQFqIgYgA0cNAAsLC7MFASN/IANBAEoEQCAAKALQAiESIAAoAogBIgUoAgghGyAFKAIEIRwgBSgCACEdIAAoAuQDIgooAighEyAKKAIYIR4gACgCcCIUQQFrIR8gFEEDbCIFQQNrISAgBUEDakEBdCEhA0AgAiAVQQJ0IgVqKAIAIQsgASAFaigCACEHAn8gCigCJARAIAsgH2ohCyAHICBqIQdBfSEMQX8hFkEAIQQgCigCICAhagwBC0EDIQxBASEEQQEhFiAKKAIgCyEFIAogBDYCJAJAIBRFBEBBACENQQAhDkEAIQ8MAQsgDEECaiEiIAxBAWohI0EAIRBBACEJQQAhEUEAIRdBACEYQQAhGUEAIQ9BACEOQQAhDSAUIRogBSEEA0AgCyAeIBIgEyAQIAQgDEEBdGoiBS4BAGpBCGpBBHVBAnRqKAIAIActAABqai0AACIkQQN2IiVBAnRqKAIAIBIgEyAJIAQgI0EBdGouAQBqQQhqQQR1QQJ0aigCACAHLQABamotAAAiEEECdiIJQQZ0aiASIBMgESAEICJBAXRqLgEAakEIakEEdUECdGooAgAgBy0AAmpqLQAAIhFBA3YiBkEBdGoiCC8BACImBH8gJgUgACAlIAkgBhD5BCAILwEAC0EBayIGOgAAIAYgHWotAAAhCSAGIBxqLQAAIQggBCARIAYgG2otAABrIgZBA2wgDWo7AQQgBCAQIAhrIghBA2wgDmo7AQIgBCAkIAlrIgRBA2wgD2o7AQAgCyAWaiELIAcgDGohByAGQQdsIREgCEEHbCEJIARBB2whECAGQQVsIBlqIQ0gCEEFbCAYaiEOIARBBWwgF2ohDyAEIRcgCCEYIAYhGSAFIQQgGkEBayIaDQALCyAFIA07AQQgBSAOOwECIAUgDzsBACAVQQFqIhUgA0cNAAsLC/IKARp/IAAgACgC5AMiEygCEDYCiAEgAEEBIBMoAhQiCkEFdCAAKAIEKAIAEQQAIgtCgICAgPADNwIQIAtCgICAgPAHNwIIIAtCgICAgPADNwIAIAAgCxD4BEEBIQkCQCAKQQJIDQADQAJAAkACQCAKIAlBAXROBEAgCUEBcSEEIA8NAUEAIQJBACEDIAshAQwCC0EAIQhBACECQQAhAyALIQEgD0EDTwRAIAlB/P///wdxIQdBACEEA0AgAUHgAGogAUFAayABQSBqIAEgAiABKAIYIgIgA0oiBRsgASgCOCIGIAIgAyAFGyICSiIDGyABKAJYIgUgBiACIAMbIgJKIgMbIAEoAngiBiAFIAIgAxsiA0oiBRshAiAGIAMgBRshAyABQYABaiEBIARBBGoiBCAHRw0ACwsgCUEDcSIERQ0CA0AgASACIAEoAhgiByADSiIFGyECIAcgAyAFGyEDIAFBIGohASAIQQFqIgggBEcNAAsMAgsgCUH+////B3EhB0EAIQJBACEDIAshAUEAIQgDQCADIAEoAhwiBUgEQCABIAIgASgCGEEASiIGGyECIAUgAyAGGyEDCyADIAEoAjwiBUgEQCABQSBqIAIgASgCOEEASiIGGyECIAUgAyAGGyEDCyABQUBrIQEgCEECaiIIIAdHDQALCyAERQ0AIAEoAhwgA0wNACABIAIgASgCGEEAShshAgsgAkUNASALIAlBBXRqIgEgAigCBDYCBCABIAIoAgw2AgwgASACKAIUNgIUIAEgAigCADYCACABIAIoAgg2AgggASACKAIQNgIQAkACfwJAAkACQEECIAIoAgQiBCACKAIAIgdrQQR0IgggAigCDCIFIAIoAggiBmtBDGwiA0wgAigCFCINIAIoAhAiDmtBA3QgCCADIAMgCEgbShsOAwABAgQLIAIgBCAHakECbSIDNgIEIAEMAgsgAiAFIAZqQQJtIgM2AgwgAUEIagwBCyACIA0gDmpBAm0iAzYCFCABQRBqCyADQQFqNgIACyAAIAIQ+AQgACABEPgEIA9BAWohDyAJQQFqIgkgCkcNAAsgCiEJC0EAIQ0DQEEAIQRBACEHQQAhBUEAIQYgCyANQQV0aiIBKAIAIg4gASgCBCIWTARAIAEoAgghAyAAKALkAygCGCEXIAEoAhAiCEEBaiEPIAhBA3RBBHIhGCABKAIUIhAgCGtBAWpBAXEhGSABKAIMIRQDQCADIBRMBEAgDkEDdEEEciERIBcgDkECdGooAgAhGiADIQEDQCABIQoCQCAIIBBKDQAgGiAKQQZ0aiAIQQF0aiECIApBAnRBAnIhEgJ/IBlFBEAgAiEBIAgMAQsgAkECaiEBIAIvAQAiAgRAIAIgGGwgBmohBiACIBJsIAVqIQUgAiARbCAHaiEHIAIgBGohBAsgDwshAiAIIBBGDQADQCABLwEAIgwEQCAMIBJsIAVqIQUgDCARbCAHaiEHIAJBA3RBBHIgDGwgBmohBiAEIAxqIQQLIAJBAWohFSABLwECIgwEQCAMIBJsIAVqIQUgDCARbCAHaiEHIBVBA3RBBHIgDGwgBmohBiAEIAxqIQQLIAFBBGohASACQQJqIQIgECAVRw0ACwsgCkEBaiEBIAogFEcNAAsLIA4gFkchASAOQQFqIQ4gAQ0ACwsgACgCiAEoAgAgDWogByAEQQF1IgFqIARtOgAAIAAoAogBKAIEIA1qIAEgBWogBG06AAAgACgCiAEoAgggDWogASAGaiAEbToAACANQQFqIg0gCUcNAAsgACAJNgKEASAAKAIAIgEgCTYCGCABQeIANgIUIABBASAAKAIAKAIEEQIAIBNBATYCHAufAQEEfyADQQBKBEAgACgCcCECIAAoAuQDKAIYIQcDQCACBEAgASAFQQJ0aigCACEAIAIhBgNAIAcgAC0AAEEBdkH8AHFqKAIAIAAtAAFBBHRBwB9xaiAALQACQQJ2QT5xaiIEIAQvAQAiBCAEQQFqIgQgBCAEQf//A3FHGzsBACAAQQNqIQAgBkEBayIGDQALCyAFQQFqIgUgA0cNAAsLC44KAQ5/IAEoAhQhCSABKAIQIQMgASgCDCELIAEoAgghBSAAKALkAygCGCENAkAgASgCBCIHIAEoAgAiBkoEQCAGIQoDQCAFIAtMBEAgDSAKQQJ0aigCACEMIAUhAgNAIAMgCUwEQCAMIAJBBnRqIANBAXRqIQAgAyEEA0AgAC8BAARAIAEgCjYCAAwHCyAAQQJqIQAgBCAJRyEIIARBAWohBCAIDQALCyACIAtHIQAgAkEBaiECIAANAAsLIAcgCkchACAKQQFqIQogAA0ACwsgBiEKCwJAIAcgCkoEQCAHIQgDQCAFIAtMBEAgDSAIQQJ0aigCACEMIAUhAgNAIAMgCUwEQCAMIAJBBnRqIANBAXRqIQAgAyEEA0AgAC8BAARAIAEgCDYCBAwHCyAAQQJqIQAgBCAJRyEGIARBAWohBCAGDQALCyACIAtHIQAgAkEBaiECIAANAAsLIAggCkohACAIQQFrIQggAA0ACwsgByEICwJAIAUgC0gEQCAFIQYDQCAIIAoiAk4EQANAIAMgCUwEQCANIAJBAnRqKAIAIAZBBnRqIANBAXRqIQAgAyEEA0AgAC8BAARAIAEgBjYCCAwHCyAAQQJqIQAgBCAJRyEHIARBAWohBCAHDQALCyACIAhHIQAgAkEBaiECIAANAAsLIAYgC0chACAGQQFqIQYgAA0ACwsgBSEGCwJAIAYgC0gEQCALIQcDQCAIIAoiAk4EQANAIAMgCUwEQCANIAJBAnRqKAIAIAdBBnRqIANBAXRqIQAgAyEEA0AgAC8BAARAIAEgBzYCDAwHCyAAQQJqIQAgBCAJRyEFIARBAWohBCAFDQALCyACIAhHIQAgAkEBaiECIAANAAsLIAYgB0ghACAHQQFrIQcgAA0ACwsgCyEHCwJAIAMgCUgEQCAGQQZ0IQwgAyEFA0AgCCAKIgJOBEADQCAGIAdMBEAgDSACQQJ0aigCACAMaiAFQQF0aiEAIAYhBANAIAAvAQAEQCABIAU2AhAMBwsgAEFAayEAIAQgB0chCyAEQQFqIQQgCw0ACwsgAiAIRyEAIAJBAWohAiAADQALCyAFIAlHIQAgBUEBaiEFIAANAAsLIAMhBQsCQCAFIAlIBEAgBkEGdCEMIAkhAgNAIAggCiIDTgRAA0AgBiAHTARAIA0gA0ECdGooAgAgDGogAkEBdGohACAGIQQDQCAALwEABEAgASACNgIUDAcLIABBQGshACAEIAdHIQsgBEEBaiEEIAsNAAsLIAMgCEchACADQQFqIQMgAA0ACwsgAiAFSiEAIAJBAWshAiAADQALCyAJIQILIAEgByAGa0EMbCIAIABsIAggCmtBBHQiACAAbGogAiAFayIOQQN0IgAgAGxqNgIYQQAhBCAIIApOBEAgDkEBakEDcSEPA0AgBiAHTARAIA0gCkECdGooAgAhDCAGIQMDQCADIQsCQCACIAVIDQAgDCALQQZ0aiAFQQF0aiEDQQAhCSAFIQAgDwRAA0AgAEEBaiEAIAQgAy8BAEEAR2ohBCADQQJqIQMgCUEBaiIJIA9HDQALCyAOQQNJDQADQCAEIAMvAQBBAEdqIAMvAQJBAEdqIAMvAQRBAEdqIAMvAQZBAEdqIQQgA0EIaiEDIABBA2ohCSAAQQRqIQAgAiAJRw0ACwsgC0EBaiEDIAcgC0cNAAsLIAggCkchACAKQQFqIQogAA0ACwsgASAENgIcC5gTARV/IwBBgAtrIg0iBSMESyAFIwVJcgRAIAUQSQsgBSQAIANBA3QiBUFgcUEEciEPIAJBAnQiB0FgcUECciESIAFBA3QiDEFgcUEEciETIAAoAuQDKAIYIRgCQCAAKAKEASIIQQBMBEAMAQsgDyAFQRxyIgpqQQF2IRQgEiAHQR5yIgtqQQF2IRUgEyAMQRxyIg5qQQF2IRYgACgCiAEiBSgCCCEXIAUoAgQhECAFKAIAIRFB/////wchDANAAn8gBCARai0AACIFIBNIBEAgBSAOa0EBdCIHIAdsIQcgBSATa0EBdCIFIAVsDAELIAUgDkoEQCAFIBNrQQF0IgcgB2whByAFIA5rQQF0IgUgBWwMAQsCfyAFIBZNBEAgBSAOa0EBdCIFIAVsDAELIAUgE2tBAXQiBSAFbAshB0EACyEGAn8gBCAQai0AACIFIBJIBEAgBiAFIBJrQQNsIgYgBmxqIQYgBSALa0EDbCIFIAVsDAELIAUgC0oEQCAGIAUgC2tBA2wiBiAGbGohBiAFIBJrQQNsIgUgBWwMAQsgBSAVTQRAIAUgC2tBA2wiBSAFbAwBCyAFIBJrQQNsIgUgBWwLIAdqIQcCfyAEIBdqLQAAIgUgD0gEQCAGIAUgD2siBiAGbGohBiAFIAprIgUgBWwMAQsgBSAKSgRAIAYgBSAKayIGIAZsaiEGIAUgD2siBSAFbAwBCyAFIBRNBEAgBSAKayIFIAVsDAELIAUgD2siBSAFbAshCSANQYADaiAEQQJ0aiAGNgIAIAcgCWoiBSAMIAUgDEgbIQwgBEEBaiIEIAhHDQALIAhBAXEhBQJAIAhBAUYEQEEAIQtBACEEDAELIAhBfnEhB0EAIQtBACEEQQAhBgNAIAwgDUGAA2ogBEECdGooAgBOBEAgDUGAAWogC2ogBDoAACALQQFqIQsLIAwgDUGAA2ogBEEBciIIQQJ0aigCAE4EQCANQYABaiALaiAIOgAAIAtBAWohCwsgBEECaiEEIAZBAmoiBiAHRw0ACwsgBUUNACANQYADaiAEQQJ0aigCACAMSg0AIA1BgAFqIAtqIAQ6AAAgC0EBaiELC0H/ACEGIA1BgANqIQQDQCAEQv/////3/////wA3AhggBEL/////9/////8ANwIQIARC//////f/////ADcCCCAEQv/////3/////wA3AgAgBEEgaiEEIAZBB0YhBSAGQQhrIQYgBUUNAAsgC0EASgRAQQAhFgNAIA8gDUGAAWogFmotAAAiCiAAKAKIASIHKAIIai0AAGsiCEEEdCIFQcACaiEOIAVBwAFqIRQgBUFAayEVIBMgBygCACAKai0AAGsiCUEGdCIXQYACaiEQQQchBSANQYADaiEEIA0hBiASIAcoAgQgCmotAABrIhFByABsQZABaiIMIQcgEUEDbCIRIBFsIAlBAXQiCSAJbGogCCAIbGoiESEJA0AgBCgCACAJSgRAIAQgCTYCACAGIAo6AAALIAkgFWoiCCAEKAIESARAIAQgCDYCBCAGIAo6AAELIAggFGoiCCAEKAIISARAIAQgCDYCCCAGIAo6AAILIAggDmoiCCAEKAIMSARAIAQgCDYCDCAGIAo6AAMLIAUiCEEBayEFIAcgCWohCSAGQQRqIQYgBEEQaiEEIAdBoAJqIQcgCA0AC0EHIQUgDCEHIBAgEWoiECEJA0AgBCgCACAJSgRAIAQgCTYCACAGIAo6AAALIAkgFWoiCCAEKAIESARAIAQgCDYCBCAGIAo6AAELIAggFGoiCCAEKAIISARAIAQgCDYCCCAGIAo6AAILIAggDmoiCCAEKAIMSARAIAQgCDYCDCAGIAo6AAMLIAUiCEEBayEFIAcgCWohCSAGQQRqIQYgBEEQaiEEIAdBoAJqIQcgCA0AC0EHIQUgDCEHIBAgF2pBgAZqIhAhCQNAIAQoAgAgCUoEQCAEIAk2AgAgBiAKOgAACyAJIBVqIgggBCgCBEgEQCAEIAg2AgQgBiAKOgABCyAIIBRqIgggBCgCCEgEQCAEIAg2AgggBiAKOgACCyAIIA5qIgggBCgCDEgEQCAEIAg2AgwgBiAKOgADCyAFIghBAWshBSAHIAlqIQkgBkEEaiEGIARBEGohBCAHQaACaiEHIAgNAAsgECAXakGACmohCUEHIQUDQCAEKAIAIAlKBEAgBCAJNgIAIAYgCjoAAAsgCSAVaiIHIAQoAgRIBEAgBCAHNgIEIAYgCjoAAQsgByAUaiIHIAQoAghIBEAgBCAHNgIIIAYgCjoAAgsgByAOaiIHIAQoAgxIBEAgBCAHNgIMIAYgCjoAAwsgBSIHQQFrIQUgCSAMaiEJIAZBBGohBiAEQRBqIQQgDEGgAmohDCAHDQALIBZBAWoiFiALRw0ACwsgAUF8cSEFQQAhByANIQQgA0F8cUEBdCEAIAJBeHEiA0EBckEGdCEMIANBAnJBBnQhBiADQQNyQQZ0IQggA0EEckEGdCEJIANBBXJBBnQhCiADQQZyQQZ0IQsgAkEHckEGdCEPA0AgGCAFIAdqQQJ0aigCACIBIANBBnRqIABqIgIgBC0AAEEBajsBACACIAQtAAFBAWo7AQIgAiAELQACQQFqOwEEIAIgBC0AA0EBajsBBiABIAxqIABqIgIgBC0ABEEBajsBACACIAQtAAVBAWo7AQIgAiAELQAGQQFqOwEEIAIgBC0AB0EBajsBBiABIAZqIABqIgIgBC0ACEEBajsBACACIAQtAAlBAWo7AQIgAiAELQAKQQFqOwEEIAIgBC0AC0EBajsBBiABIAhqIABqIgIgBC0ADEEBajsBACACIAQtAA1BAWo7AQIgAiAELQAOQQFqOwEEIAIgBC0AD0EBajsBBiABIAlqIABqIgIgBC0AEEEBajsBACACIAQtABFBAWo7AQIgAiAELQASQQFqOwEEIAIgBC0AE0EBajsBBiABIApqIABqIgIgBC0AFEEBajsBACACIAQtABVBAWo7AQIgAiAELQAWQQFqOwEEIAIgBC0AF0EBajsBBiABIAtqIABqIgIgBC0AGEEBajsBACACIAQtABlBAWo7AQIgAiAELQAaQQFqOwEEIAIgBC0AG0EBajsBBiABIA9qIABqIgEgBC0AHEEBajsBACABIAQtAB1BAWo7AQIgASAELQAeQQFqOwEEIAEgBC0AH0EBajsBBiAEQSBqIQQgB0EBaiIHQQRHDQALIA1BgAtqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAsNACAAIAFqQQFrIAFtCxIAIAAgAWpBAWsiACAAIAFvawvfAQEBfwJAIARBAEwNACAAIAFBAnRqIQEgAiADQQJ0aiEDAkAgBEEDcSIGRQRAIAQhAgwBC0EAIQAgBCECA0AgAygCACABKAIAIAUQlQsaIAJBAWshAiADQQRqIQMgAUEEaiEBIABBAWoiACAGRw0ACwsgBEEESQ0AA0AgAygCACABKAIAIAUQlQsaIAMoAgQgASgCBCAFEJULGiADKAIIIAEoAgggBRCVCxogAygCDCABKAIMIAUQlQsaIANBEGohAyABQRBqIQEgAkEFayEAIAJBBGshAiAAQX5JDQALCwsKACAAKAIEEOgFCyYBAX9B/N+tkgEoAgAiAARAA0AgACgCABEKACAAKAIEIgANAAsLC7UFAEGstKySAUGt9KeSARAfQcS0rJIBQbHTp5IBQQFBAUEAECBB0LSskgFB+LKnkgFBAUGAf0H/ABAhQei0rJIBQfGyp5IBQQFBgH9B/wAQIUHctKySAUHvsqeSAUEBQQBB/wEQIUH0tKySAUGNmqeSAUECQYCAfkH//wEQIUGAtaySAUGEmqeSAUECQQBB//8DECFBjLWskgFBzpqnkgFBBEGAgICAeEH/////BxAhQZi1rJIBQcWap5IBQQRBAEF/ECFBpLWskgFBnOOnkgFBBEGAgICAeEH/////BxAhQbC1rJIBQZPjp5IBQQRBAEF/ECFBvLWskgFB2p6nkgFCgICAgICAgICAf0L///////////8AEJMNQci1rJIBQdmep5IBQgBCfxCTDUHUtaySAUG8nqeSAUEEECJB4LWskgFB8+ynkgFBCBAiQayAp5IBQdvjp5IBECNBwNeqkgFBx46okgEQI0GI2KqSAUEEQcHjp5IBECRB1NiqkgFBAkHn46eSARAkQaDZqpIBQQRB9uOnkgEQJEGEgaeSAUGd1KeSARAlQcjZqpIBQQBBgo6okgEQJkHw2aqSAUEAQeiOqJIBECZBwIinkgFBAUGgjqiSARAmQZjaqpIBQQJBkouokgEQJkHA2qqSAUEDQbGLqJIBECZB6NqqkgFBBEHZi6iSARAmQZDbqpIBQQVB9ouokgEQJkG426qSAUEEQZSPqJIBECZB4NuqkgFBBUGyj6iSARAmQfDZqpIBQQBB3IyokgEQJkHAiKeSAUEBQbuMqJIBECZBmNqqkgFBAkGejaiSARAmQcDaqpIBQQNB/IyokgEQJkHo2qqSAUEEQeGNqJIBECZBkNuqkgFBBUG/jaiSARAmQYjcqpIBQQZBnIyokgEQJkGw3KqSAUEHQeqPqJIBECYLeAEDfwJAAkAgAgRAIAAhAwNAIAFBA3YsAAAiBEEAIAFBB3EgBE4bDQIgAS0AACEEIANBA3YsAAAiBUEAIANBB3EgBU4bDQMgAUEBaiEBIAMgBDoAACADQQFqIQMgAkEBayICDQALCyAADwsgARCyCwALIAMQtwsACwgAQaDgrZIBCw0AQeDjrJIBQQEQkgsLjQEAIAAgACAAIAAgAEQJ9/0N4T0CP6JEiLIBdeDvST+gokQ7j2i1KIKkv6CiRFVEiA5Vwck/oKJEfW/rAxLW1L+gokRVVVVVVVXFP6AgAKIgACAAIAAgAESCki6xxbizP6JEWQGNG2wG5r+gokTIilmc5SoAQKCiREstihwnOgPAoKJEAAAAAAAA8D+gowulAwEEfyAAvEH/////B3FBgYCA/AdJIAG8Qf////8HcUGAgID8B01xRQRAIAAgAZIPCyABvCIEQYCAgPwDRgRAIAAQhgUPCyAEQR52QQJxIgUgALwiA0EfdnIhAgJAAkACQCADQf////8HcSIDRQRAAkACQCACQQJrDgIAAQMLQ9sPSUAPC0PbD0nADwsgBEH/////B3EiBEGAgID8B0cEQCAERQRAQ9sPyT8gAJgPCyADQYCAgPwHRyAEQYCAgOgAaiADT3FFBEBD2w/JPyAAmA8LAn0gBQRAQwAAAAAgA0GAgIDoAGogBEkNARoLIAAgAZWLEIYFCyEAAkACQAJAIAIOAwQAAQILIACMDwtD2w9JQCAAQy69uzOSkw8LIABDLr27M5JD2w9JwJIPCyADQYCAgPwHRg0CIAJBAnRBwN2qkgFqIgJBA3YsAAAiA0EAIAJBB3FBA2ogA04bDQEgAioCACEACyAADwsgAhC0CwALIAJBAnRBoN2qkgFqIgJBA3YsAAAiA0EAIAJBB3FBA2ogA04bRQRAIAIqAgAPCyACELQLAAsNAEGA5KySAUECEJILC7sDAgR/A30gALwiA0H/////B3EiAUGAgIDkBE8EQCAAQ9oPyT8gAJggALxB/////wdxQYCAgPwHSxsPCwJAAkACQAJ/IAFB////9gNNBEBBfyABQYCAgMwDTw0BGgwCCyAAiyEAIAFB///f/ANNBEAgAUH//7/5A00EQCAAIACSQwAAgL+SIABDAAAAQJKVIQBBAAwCCyAAQwAAgL+SIABDAACAP5KVIQBBAQwBCyABQf//74AETQRAIABDAADAv5IgAEMAAMA/lEMAAIA/kpUhAEECDAELQwAAgL8gAJUhAEEDCyECIAAgAJQiBiAGlCIFIAVDRxLavZRDmMpMvpKUIQcgBiAFIAVDJax8PZRDDfURPpKUQ6mqqj6SlCEFIAFB////9gNNBEAgACAAIAcgBZKUkw8LIAJBAnQiAkHA3qqSAWoiAUEDdiwAACIEQQAgAUEHcUEDaiAEThsNASABKgIAIQYgAkHg3qqSAWoiAUEDdiwAACICQQAgAUEHcUEDaiACThsNAiAGIAAgByAFkpQgASoCAJMgAJOTIgCMIAAgA0EASBshAAsgAA8LIAEQtAsACyABELQLAAsNAEHA5KySAUECEJILC5wCAQN/AkACQAJAQeDgrZIBKAIABEBBgOGtkgEoAgAhAANAQYDhrZIBIABBAWsiATYCACAAQQBKBEADQEHg4K2SASgCACABQQJ0aiIBQQRqIgBBA3YsAAAiAkEAIABBB3FBA2ogAk4bDQQgACgCACECIAFBhAFqIgBBA3YsAAAiAUEAIABBB3FBA2ogAU4bDQUgACgCACACEQAAQYDhrZIBQYDhrZIBKAIAIgBBAWsiATYCACAAQQBKDQALC0Hg4K2SASgCACIAQQN2LAAAIgFBACAAQQdxQQNqIAFOGw0EIAAoAgAhAUEgIQBBgOGtkgFBIDYCAEHg4K2SASABNgIAIAENAAsLDwsgABC0CwALIAAQtAsACyAAELQLAAu0AgEEf0Hg4K2SASgCAEUEQEHg4K2SAUGg4a2SATYCAAsCQAJAAkACf0GA4a2SASgCAEEgRgRAAkBBhAIQmAYiAkUNACACQQRrLQAAQQNxRQ0AIAJBAEGEAhCXCxoLQX8gAkUNARpB4OCtkgEoAgAhAyACQQN2LAAAIgRBACACQQdxQQNqIAROGw0CIAIgAzYCAEHg4K2SASACNgIAQYDhrZIBQQA2AgALQeDgrZIBKAIAQYDhrZIBKAIAIgNBAnRqIgRBBGoiAkEDdiwAACIFQQAgAkEHcUEDaiAFThsNAiACIAA2AgAgBEGEAWoiAEEDdiwAACICQQAgAEEHcUEDaiACThsNAyAAIAE2AgBBgOGtkgEgA0EBajYCAEEACw8LIAIQuQsACyACELkLAAsgABC5CwALCwBBygIgABCJBRoLBwAgABEKAAsNAEGA5aySAUEFEJILC5IBAQN8RAAAAAAAAPA/IAAgAKIiAkQAAAAAAADgP6IiA6EiBEQAAAAAAADwPyAEoSADoSACIAIgAiACRJAVyxmgAfo+okR3UcEWbMFWv6CiRExVVVVVVaU/oKIgAiACoiIDIAOiIAIgAkTUOIi+6fqovaJExLG0vZ7uIT6gokStUpyAT36SvqCioKIgACABoqGgoAu2HwIYfwN8IwAiBSETIAVBIGtBYHEiBSMESyAFIwVJcgRAIAUQSQsgBSQAQYTLuJIBKAIABEAQhwshFgsgFiIORQRAIAVBoAZrQWBxIg4iBiMESyAGIwVJcgRAIAYQSQsgBiQACyAFIA42AhwgDkHMAjYCCCAOQcelqJIBNgIEIA5Bs5XWjQQ2AgAgDkEDdiIIQoCAgICAn778eDcAUCAIQoCAgICAn778eDcASCAIQoCAgICAn778eDcAOCAIQoCAgICAn778eDcAMCAIQvLly5ePn778eDcAKCAIQoCAgICAn778eDcAGCAIQvjx48ev3rz5cjcACCAIQvHj48ePn778eDcAACAIQgA3ABAgCEKAgICAoN68+XI3ACAgCEFAa0Ly5cuXr968+XI3AAAgCEKAgICAsP78+XM3AFggCEHz58+ffzYAYCAIQQA2AFQgCEEANgBMIAhBADYAPCAIQQA2ADQgCEEANgAsIAhBADYAHCAIQQA7AAogCEEANgAGIAhBADYAAgJAAkACQCAEQQJ0QeDgqpIBaiIFQQN2LAAAIgZBACAFQQdxQQNqIAZOG0UEQCAOQYABaiEUIAJBA2tBGG0iBkEAIAZBAEobIRcCQAJAIAUoAgAiDyADQQFrIglqQQBOBEAgAyAPaiERIBcgCWshBUEAIQYDQCAFQQBIBHxEAAAAAAAAAAAFIAVBAnRBgOGqkgFqIgpBA3YsAAAiC0EAIApBB3FBA2ogC04bDQQgCigCALcLIR0gFCAGQQN0aiIKQQN2LQAADQIgCiAdOQMAIAVBAWohBSAGQQFqIgYgEUcNAAsLIA5BwARqIRIgDkHgAmohCyAOQRBqIRAgF0FobCACaiIKQRhrIREgD0EAIA9BAEobIQ0gA0EATCEMAkACQAJAA0ACQCAMBEBEAAAAAAAAAAAhHQwBCyAHIAlqIRVBACEFRAAAAAAAAAAAIR0DQCAAIAVBA3RqIgJBA3YtAAANBSAUIBUgBWtBA3RqIgZBA3YtAAANBCACKwMAIAYrAwCiIB2gIR0gBUEBaiIFIANHDQALCyASIAdBA3RqIgJBA3YtAAANASACIB05AwAgByANRiECIAdBAWohByACRQ0AC0EvIAprIRlBMCAKayEVIApBGWshGiAPIQUCQAJAAkACQAJAA0ACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCASIAVBA3RqIgJBA3YtAABFBEAgAisDACEdQQAhBiAFIQcgBUEATCIMRQRAA0AgECAGQQJ0aiICQQN2LAAAIQkCfwJ/IB1EAAAAAAAAcD6iIh6ZRAAAAAAAAOBBYwRAIB6qDAELQYCAgIB4C7ciHkQAAAAAAABwwaIgHaAiHZlEAAAAAAAA4EFjBEAgHaoMAQtBgICAgHgLIQ0gCUEAIAJBB3FBA2ogCU4bDQMgAiANNgIAIBIgB0EBayIHQQN0aiICQQN2LQAADSogAisDACAeoCEdIAZBAWoiBiAFRw0ACwsCfyAdIBEQ3AUiHSAdRAAAAAAAAMA/opxEAAAAAAAAIMCioCIdmUQAAAAAAADgQWMEQCAdqgwBC0GAgICAeAshDSAdIA23oSEdAkACfyARQQBMIhtFBEAgBUECdCAQakEEayICQQN2IgcsAAAiBkEAIAJBB3FBA2ogBk4bDSogAigCACEGIAcsAAAiB0EAIAJBB3FBA2ogB04bDQUgBiAVdSIHIA1qIQ0gAiAGIAcgFXRrIgI2AgAgAiAZdQwBCyARDQEgBUECdCAQakEEayICQQN2LAAAIgZBACACQQdxQQNqIAZOGw0pIAIoAgBBF3ULIglBAEwNBQwEC0ECIQkgHUQAAAAAAADgP2YNA0EAIQkMBAsMJwsgAhC5CwALIAIQuQsAC0EAIQZBACECIAxFBEADQCAQIAZBAnRqIgxBA3YiHCwAACIHRSAMQQdxQQNqIAdIckUEQCAMELQLAAsgDCgCACEYQf///wchBwJ/AkAgAg0AQYCAgAghByAYDQBBAAwBCyAcLAAAIgJBACAMQQdxQQNqIAJOGw0EIAwgByAYazYCAEEBCyECIAZBAWoiBiAFRw0ACwsCQCAbDQBB////AyEHAkACQCAaDgIBAAILQf///wEhBwsgBUECdCAQakEEayIGQQN2LAAAIgxBACAGQQdxQQNqIAxOGw0DIAYgBigCACAHcTYCAAsgDUEBaiENIAlBAkcNAEQAAAAAAADwPyAdoSEdQQIhCSACRQ0AIB1EAAAAAAAA8D8gERDcBaEhHQsCQCAdRAAAAAAAAAAAYQRAQQAhByAFIQYgBSAPTA0WA0AgECAGQQFrIgZBAnRqIgJBA3YsAAAiDEEAIAJBB3FBA2ogDE4bDSUgAigCACAHciEHIAYgD0oNAAsgB0UNFiARIQoDQCAQIAVBAWsiBUECdGoiAEEDdiwAACICRSAAQQdxQQNqIAJIckUEQCAAELQLAAsgCkEYayEKIAAoAgBFDQALDAELAkAgHUEYIAprENwFIh1EAAAAAAAAcEFmBEAgECAFQQJ0aiIAQQN2LAAAIQICfwJ/IB1EAAAAAAAAcD6iIh6ZRAAAAAAAAOBBYwRAIB6qDAELQYCAgIB4CyIGt0QAAAAAAABwwaIgHaAiHZlEAAAAAAAA4EFjBEAgHaoMAQtBgICAgHgLIQMgAkEAIABBB3FBA2ogAk4bDQUgACADNgIAIAVBAWohBQwBCwJ/IB2ZRAAAAAAAAOBBYwRAIB2qDAELQYCAgIB4CyEGIBEhCgsgECAFQQJ0aiIAQQN2LAAAIgJBACAAQQdxQQNqIAJOGw0EIAAgBjYCAAtEAAAAAAAA8D8gChDcBSEdIAVBAEgNBiAFIQcDQCAQIAciAEECdGoiAkEDdiwAACIDRSACQQdxQQNqIANIckUEQAwkCyASIABBA3RqIgNBA3YtAAANBSADIB0gAigCALeiOQMAIABBAWshByAdRAAAAAAAAHA+oiEdIAANAAsMBQsgDBC5CwALIAYQtAsACyAAELkLAAsgABC5CwALIAMQugsAC0EAIQAgBUEASA0AIA9BACAPQQBKGyEDIAUhAgNAIAMgACAAIANLGyERIAUgAmshD0EAIQZEAAAAAAAAAAAhHQNAIAZBA3RBgPyqkgFqIgdBA3YtAAANAyASIAIgBmpBA3RqIgpBA3YtAAANBCAHKwMAIAorAwCiIB2gIR0gBiARRyEHIAZBAWohBiAHDQALIAsgD0EDdGoiBkEDdi0AAA0EIAYgHTkDACACQQFrIQIgACAFRyEGIABBAWohACAGDQALCwJAAkACQAJAAkAgBA4EAQICAAQLRAAAAAAAAAAAIR0CQCAFQQBMDQAgBSEGA0AgCyAGQQFrIgBBA3RqIgJBA3YiBC0AAA0iIAsgBkEDdGoiA0EDdiIHLQAADQwgBy0AAA0NIAMgAysDACIeIAIrAwAiHyAfIB6gIh6hoDkDACAELQAADQ4gAiAeOQMAIAZBAUshAiAAIQYgAg0ACyAFQQFMDQAgBSEGA0AgCyAGQQFrIgBBA3RqIgJBA3YiBC0AAA0iIAsgBkEDdGoiA0EDdiIHLQAADQ8gBy0AAA0QIAMgAysDACIeIAIrAwAiHyAfIB6gIh6hoDkDACAELQAADREgAiAeOQMAIAZBAkshAiAAIQYgAg0ACyAFQQFMDQADQCALIAVBA3RqIgBBA3YtAAANEiAdIAArAwCgIR0gBUECSiEAIAVBAWshBSAADQALCyALQQN2LQAADQggCysDACEeIAkNAiABQQN2LQAADQcgASAeOQMAIAtBCGoiAkEDdi0AAA0gIAFBCGoiAEEDdi0AAA0eIAEgAisDADkDCCABQRBqIgBBA3YtAAANHiAAIB05AwAMAwtEAAAAAAAAAAAhHSAFQQBOBEADQCALIAUiAEEDdGoiAkEDdi0AAA0hIABBAWshBSAdIAIrAwCgIR0gAA0ACwsgAUEDdi0AAA0GIAEgHZogHSAJGzkDAAwCC0QAAAAAAAAAACEdIAVBAE4EQCAFIQcDQCALIAciAEEDdGoiAkEDdi0AAA0gIABBAWshByAdIAIrAwCgIR0gAA0ACwsgAUEDdi0AAA0FIAEgHZogHSAJGzkDACALQQN2LQAADQYgCysDACAdoSEdQQEhBiAFQQBKBEADQCALIAZBA3RqIgBBA3YtAAANCSAdIAArAwCgIR0gBSAGRyEAIAZBAWohBiAADQALCyABQQhqIgBBA3YtAAANHCAAIB2aIB0gCRs5AwAMAQsgAUEDdi0AAA0EIAEgHpo5AwAgC0EIaiICQQN2LQAADR0gAUEIaiIAQQN2LQAADRsgASACKwMAmjkDCCABQRBqIgBBA3YtAAANGyAAIB2aOQMACyAIQfjx40c2AFggCEL48ePHj5++/Hg3AFAgCEL48ePHj5++/Hg3AEggCEH48eNHNgA8IAhC+PHjx4+fvvx4NwA0IAhC+PHjx4+fvvx4NwAsIAhB+PHjRzYAICAIQvjx48ePn778eDcAGCAIQvjx48ePn778eDcAECAIQfjxAzsACiAIQvjx48ePn778eDcAAiAOQY7sgK8ENgIAAkAgFgRAIAhBgAEQpAsgFigC/AdBADoAAAwBCyAIQeQAEKMLCyMEIBNJIBMjBUlyBEAgExBJCyATJAAgDUEHcQ8LIAcQtQsACyAKELULAAsgBhC6CwALIAEQugsACyALELULAAsgABC1CwALIAMQtQsACyADELoLAAsgAhC6CwALIAMQtQsACyADELoLAAsgAhC6CwALIAAQtQsAC0EBIQYCQANAIBAgDyAGIgJrQQJ0aiIHQQN2LAAAIgZBACAHQQdxQQNqIAZOGw0BIAJBAWohBiAHKAIARQ0ACyACIAVqIQIDQCAFQQFqIgYgF2pBAnRBgOGqkgFqIgdBA3YsAAAiCUEAIAdBB3FBA2ogCU4bDQMgFCADIAVqIg1BA3RqIgVBA3YtAAANBCAFIAcoAgC3OQMAQQAhBUQAAAAAAAAAACEdIANBAEoEQANAIAAgBUEDdGoiB0EDdi0AAA0HIBQgDSAFa0EDdGoiCUEDdi0AAA0IIAcrAwAgCSsDAKIgHaAhHSAFQQFqIgUgA0cNAAsLIBIgBkEDdGoiBUEDdi0AAA0HIAUgHTkDACAGIgUgAkgNAAsgAiEFDAELCyAHELQLAAsgBxC0CwALIAUQugsACyAHELULAAsgCRC1CwALIAUQugsACyACELoLAAsgBhC1CwALDAULIAoQugsACyAKELQLAAsgBRC0CwALIAAQugsACyACELQLAAsgAhC1CwALDQBBoOaskgFBAxCSCwvfEAMLfwR8AX4jACICIQkgAkEga0FgcSICIwRLIAIjBUlyBEAgAhBJCyACJABBhMu4kgEoAgAEQBCECyEKCyAKIgVFBEAgAkHwAGtBYHEiBSIDIwRLIAMjBUlyBEAgAxBJCyADJAALIAIgBTYCHCAFQc4CNgIIIAVBlrSokgE2AgQgBUGzldaNBDYCACAFQQN2IgRB8uXjRzYACCAEQvHj48eP37z5cjcAACAEQYCAzJ9/NgAKIARBADoABCAEQQA7AAICQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgAL0iEUIgiKciAkH/////B3EiBkH61L2ABE0EQCACQf//P3FB+8MkRg0BIAFBCGohAiAGQfyyi4AETQRAIBFCAFkEQCABQQN2LQAADQYgASAARAAAQFT7Ifm/oCINRDFjYhphtNC9oCIAOQMAIAJBA3YtAAANESACIA0gAKFEMWNiGmG00L2gOQMAQQEhAwwFCyABQQN2LQAADQUgASAARAAAQFT7Ifk/oCINRDFjYhphtNA9oCIAOQMAIAJBA3YtAAANECACIA0gAKFEMWNiGmG00D2gOQMAQX8hAwwECyARQgBZBEAgAUEDdi0AAA0FIAEgAEQAAEBU+yEJwKAiDUQxY2IaYbTgvaAiADkDACACQQN2LQAADRAgAiANIAChRDFjYhphtOC9oDkDAEECIQMMBAsgAUEDdi0AAA0EIAEgAEQAAEBU+yEJQKAiDUQxY2IaYbTgPaAiADkDACACQQN2LQAADQ8gAiANIAChRDFjYhphtOA9oDkDAEF+IQMMAwsgBkG7jPGABE0EQCAGQbz714AETQRAIAZB/LLLgARGDQIgAUEIaiECIBFCAFkEQCABQQN2LQAADQYgASAARAAAMH982RLAoCINRMqUk6eRDum9oCIAOQMAIAJBA3YtAAANESACIA0gAKFEypSTp5EO6b2gOQMAQQMhAwwFCyABQQN2LQAADQUgASAARAAAMH982RJAoCINRMqUk6eRDuk9oCIAOQMAIAJBA3YtAAANECACIA0gAKFEypSTp5EO6T2gOQMAQX0hAwwECyAGQfvD5IAERg0BIAFBCGohAiARQgBZBEAgAUEDdi0AAA0FIAEgAEQAAEBU+yEZwKAiDUQxY2IaYbTwvaAiADkDACACQQN2LQAADRAgAiANIAChRDFjYhphtPC9oDkDAEEEIQMMBAsgAUEDdi0AAA0EIAEgAEQAAEBU+yEZQKAiDUQxY2IaYbTwPaAiADkDACACQQN2LQAADQ8gAiANIAChRDFjYhphtPA9oDkDAEF8IQMMAwsgBkH6w+SJBEsNAQsgACAARIPIyW0wX+Q/okQAAAAAAAA4Q6BEAAAAAAAAOMOgIg5EAABAVPsh+b+ioCINIA5EMWNiGmG00D2iIg+hIhBEGC1EVPsh6b9jIQICfyAOmUQAAAAAAADgQWMEQCAOqgwBC0GAgICAeAshAwJAIAIEQCADQQFrIQMgDkQAAAAAAADwv6AiDkQxY2IaYbTQPaIhDyAAIA5EAABAVPsh+b+ioCENDAELIBBEGC1EVPsh6T9kRQ0AIANBAWohAyAORAAAAAAAAPA/oCIORDFjYhphtNA9oiEPIAAgDkQAAEBU+yH5v6KgIQ0LIAFBA3YtAAANAiABIA0gD6EiADkDAAJAIAZBFHYiAiAAvUI0iKdB/w9xa0ERSA0AIAFBA3YtAAANAyABIA0gDkQAAGAaYbTQPaIiEKEiACAORHNwAy6KGaM7oiANIAChIBChoSIPoSINOQMAIAIgDb1CNIinQf8PcWtBMkgEQCAAIQ0MAQsgAUEDdi0AAA0DIAEgACAORAAAAC6KGaM7oiIQoSINIA5EwUkgJZqDezmiIAAgDaEgEKGhIg+hOQMACyABQQN2LQAADQQgAUEIaiICQQN2LQAADQ0gAiANIAErAwChIA+hOQMADAELIAZBgIDA/wdPBEAgAUEIaiICQQN2LQAADQ0gASAAIAChIgA5AwggAUEDdi0AAA0CIAEgADkDAEEAIQMMAQsgBUHQAGohCCAFQRBqIQsgEUL/////////B4NCgICAgICAgLDBAIS/IQBBASEDA0AgCyAHQQN0aiIMQQN2LQAAIQICfyAAmUQAAAAAAADgQWMEQCAAqgwBC0GAgICAeAshByACDQYgDCAHtyINOQMAIAAgDaFEAAAAAAAAcEGiIQBBASEHIAMhAkEAIQMgAg0ACyALQRBqIgJBA3YtAAANDCACIAA5AwBBAiEHA0AgCyAHIgJBA3RqIgNBA3YtAAANByACQQFrIQcgAysDAEQAAAAAAAAAAGENAAsgCyAIIAZBFHZBlghrIAJBAWpBARCOBSEDIAhBA3YtAAANByAIKwMAIQAgEUIAUwRAIAFBA3YtAAANAiABIACaOQMAIAhBCGoiAkEDdi0AAA0JIAFBCGoiAUEDdi0AAA0KIAEgAisDAJo5AwBBACADayEDDAELIAFBA3YtAAANASABIAA5AwAgCEEIaiICQQN2LQAADQogAUEIaiIBQQN2LQAADQsgASACKwMAOQMACyAEQfgBOgAEIARB+PEDOwACIARB+PEDOwAKIAVBjuyArwQ2AgACQCAKBEAgBEL169ev3779+nU3AAAgBEL169ev3779+nU3AAggCigCfEEAOgAADAELIARCADcAACAEQQA7AAwgBEEANgAICyMEIAlJIAkjBUlyBEAgCRBJCyAJJAAgAw8LIAEQugsACwALIAEQtQsACwALIAwQugsACyADELULAAsgCBC1CwALIAIQtQsACyABELoLAAsgAhC1CwALIAEQugsACyACELoLAAuZAQEDfCAAIACiIgMgAyADoqIgA0R81c9aOtnlPaJE65wriublWr6goiADIANEff6xV+Mdxz6iRNVhwRmgASq/oKJEpvgQERERgT+goCEFIAMgAKIhBCACRQRAIAQgAyAFokRJVVVVVVXFv6CiIACgDwsgACADIAFEAAAAAAAA4D+iIAUgBKKhoiABoSAERElVVVVVVcU/oqChC6oEAQZ/IwAiAiEGIAJBIGtBYHEiASMESyABIwVJcgRAIAEQSQsgASQAQYTLuJIBKAIABEAQgwshBQsgBSICRQRAIAFBMGtBYHEiAiMESyACIwVJcgRAIAIQSQsgAiQACyABIAI2AhwgAkHPAjYCCCACQYejqJIBNgIEIAJBs5XWjQQ2AgAgAkEDdiIEQfHj40c2AAAgBEGAgMyffzYAAgJAAkACfCAAvUIgiKdB/////wdxIgFB+8Ok/wNNBEBEAAAAAAAA8D8gAUGewZryA0kNARogAEQAAAAAAAAAABCNBQwBCyAAIAChIAFBgIDA/wdPDQAaAkACQAJAAkAgACACQRBqIgEQkAVBA3EOAwABAgMLIAFBA3YtAAANBCABQQhqIgNBA3YtAAANBSABKwMAIAMrAwAQjQUMAwsg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ESAMIBdqIgsgCyARSBsiCCAiSg0EIABBICAIIAsgBxD5BSAAIBMgFxD1BSAAQTAgCCALIAdBgIAEcxD5BSAAQTAgDCAUQQAQ+QUgACAJIBQQ9QUgAEEgIAggCyAHQYDAAHMQ+QUMAAsACyAOELkLAAtBACEQDAMLQT0hAQtBhNylEiwAACIAQQAgAEEDTBsNAkGg4K2SASABNgIAC0F/IRALIA1B+AE6ABIgDUH4AToAFiANQfgBOgAMIA1B+PHjRzYACCANQfgBOgAEIA1B+AE6AAIgEkGO7ICvBDYCAAJAIB4EQCANQvXr16/fvv36dTcAACANQvXr16/fvv36dTcAGCANQvXr16/fvv36dTcAECANQvXr16/fvv36dTcACCAeKAL8AUEAOgAADAELIA1CADcAACANQgA3ABAgDUIANwAICyMEIB1JIB0jBUlyBEAgHRBJCyAdJAAgEA8LQaDgrZIBELkLAAsgARCyCwALIAEQtAsACz0BAX8gAEEDdiwAACIDQQAgAEEHcUEDaiADThtFBEAgAC0AAEEgcUUEQCABIAIgABC2BRoLDwsgABC0CwALrQIBBX8CQAJAAkACQCAAQQN2LAAAIgJBACAAQQdxQQNqIAJOGw0AIAAoAgAiAUEDdiwAACICQQAgAUEHcSACThsNAUEAIQIgASwAABC7BUUEQEEADwsgAEEDdiEEIABBB3FBA2ohBQNAQX8hASACQcyZs+YATQRAIAQsAAAiAUEAIAEgBUwbDQIgACgCACIBQQN2LAAAIgNBACABQQdxIANOGw0EQX8gASwAAEEwayIBIAJBCmwiAmogASACQf////8Hc0obIQELIAQsAAAiAkEAIAIgBUwbDQEgACAAKAIAQQFqIgM2AgAgA0EDdiwAACICQQAgA0EHcSACThsNBCABIQIgAywAABC7BQ0ACyACDwsgABC0CwALIAEQsgsACyABELILAAsgAxCyCwALmgwAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgAUEJaw4SAAECBQMEBgcICQoLDA0ODxAREgsgAkEDdiwAACIBQQAgAkEHcUEDaiABThsNEiACIAIoAgAiAUEEajYCACABQQN2LAAAIgJBACABQQdxQQNqIAJOGw0WIAEoAgAh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AgR/A34jAEGAAWsiBSIGIwRLIAYjBUlyBEAgBhBJCyAGJAACQAJAAkAgAyAEQgBCABCgBkUNAAJ/IARC////////P4MhCgJ/IARCMIinQf//AXEiBkH//wFHBEBBBCAGDQEaQQJBAyADIAqEUBsMAgsgAyAKhFALCyEGIAJCMIinIghB//8BcSIHQf//AUYNACAGDQELIAVBEGogASACIAMgBBCrBiAFIAUpAxAiAiAFKQMYIgEgAiABEKIGIAUpAwghAiAFKQMAIQQMAQsgASACQv///////////wCDIgogAyAEQv///////////wCDIgkQoAZBAEwEQCABIAogAyAJEKAGBEAgASEEDAILIAVB8ABqIAEgAkIAQgAQqwYgBSkDeCECIAUpA3AhBAwBCyAEQjCIp0H//wFxIQYgBwR+IAEFIAVB4ABqIAEgCkIAQoCAgICAgMC7wAAQqwYgBSkDaCIKQjCIp0H4AGshByAFKQNgCyEEIAZFBEAgBUHQAGogAyAJQgBCgICAgICAwLvAABCrBiAFKQNYIglCMIinQfgAayEGIAUpA1AhAwsgCUL///////8/g0KAgICAgIDAAIQhCyAKQv///////z+DQoCAgICAgMAAhCEKIAYgB0gEQANAAn4gCiALfSADIARWrX0iCUIAWQRAIAkgBCADfSIEhFAEQCAFQSBqIAEgAkIAQgAQqwYgBSkDKCECIAUpAyAhBAwFCyAJQgGGIARCP4iEDAELIApCAYYgBEI/iIQLIQogBEIBhiEEIAdBAWsiByAGSg0ACyAGIQcLAkAgCiALfSADIARWrX0iCUIAUwRAIAohCQwBCyAJIAQgA30iBIRCAFINACAFQTBqIAEgAkIAQgAQqwYgBSkDOCECIAUpAzAhBAwBCyAJQv///////z9YBEADQCAEQj+IIQEgB0EBayEHIARCAYYhBCABIAlCAYaEIglCgICAgICAwABUDQALCyAIQYCAAnEhBiAHQQBMBEAgBUFAayAEIAlC////////P4MgB0H4AGogBnKtQjCGhEIAQoCAgICAgMDDPxCrBiAFKQNIIQIgBSkDQCEEDAELIAlC////////P4MgBiAHcq1CMIaEIQILIAAgBDcDACAAIAI3AwggBUGAAWoiACMESyAAIwVJcgRAIAAQSQsgACQAC6soAg9/B34jAEEw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AkAgAVAiBSACQv///////////wCDIgpCgICAgICAwP//AH1CgICAgICAwICAf1QgClAbRQRAIANCAFIgCUKAgICAgIDA//8AfSILQoCAgICAgMCAgH9WIAtCgICAgICAwICAf1EbDQELIAUgCkKAgICAgIDA//8AVCAKQoCAgICAgMD//wBRG0UEQCACQoCAgICAgCCEIQQgASEDDAILIANQIAlCgICAgICAwP//AFQgCUKAgICAgIDA//8AURtFBEAgBEKAgICAgIAghCEEDAILIAEgCkKAgICAgIDA//8AhYRQBEBCgICAgICA4P//ACACIAEgA4UgAiAEhUKAgICAgICAgIB/hYRQIgUbIQRCACABIAUbIQMMAgsgAyAJQoCAgICAgMD//wCFhFANASABIAqEUARAIAMgCYRCAFINAiABIAODIQMgAiAEgyEEDAILIAMgCYRQRQ0AIAEhAyACIQQMAQsgAyABIAEgA1QgCSAKViAJIApRGyIIGyEKIAQgAiAIGyILQv///////z+DIQkgAiAEIAgbIgJCMIinQf//AXEhByALQjCIp0H//wFxIgVFBEAgBkHgAGogCiAJIAogCSAJUCIFG3kgBUEGdK18pyIFQQ9rEJ8GIAYpA2ghCSAGKQNgIQpBECAFayEFCyABIAMgCBshAyACQv///////z+DIQQgB0UEQCAGQdAAaiADIAQgAyAEIARQIgcbeSAHQQZ0rXynIgdBD2sQnwZBECAHayEHIAYpA1ghBCAGKQNQIQMLIARCA4YgA0I9iIRCgICAgICAgASEIQEgCUIDhiAKQj2IhCEEIAIgC4UhDQJ+IANCA4YiAiAFIAdGDQAaIAUgB2siB0H/AEsEQEIAIQFCAQwBCyAGQUBrIAIgAUGAASAHaxCfBiAGQTBqIAIgASAHEKoGIAYpAzghASAGKQMwIAYpA0AgBikDSIRCAFKthAshCSAEQoCAgICAgIAEhCEMIApCA4YhCgJAIA1CAFMEQEIAIQNCACEEIAkgCoUgASAMhYRQDQIgCiAJfSECIAwgAX0gCSAKVq19IgRC/////////wNWDQEgBkEgaiACIAQgAiAEIARQIgcbeSAHQQZ0rXynQQxrIgcQnwYgBSAHayEFIAYpAyghBCAGKQMgIQIMAQsgCSAKfCICIAlUrSABIAx8fCIEQoCAgICAgIAIg1ANACAJQgGDIARCP4YgAkIBiISEIQIgBUEBaiEFIARCAYghBAsgC0KAgICAgICAgIB/gyEBIAVB//8BTgRAIAFCgICAgICAwP//AIQhBEIAIQMMAQtBACEHAkAgBUEASgRAIAUhBwwBCyAGQRBqIAIgBCAFQf8AahCfBiAGIAIgBEEBIAVrEKoGIAYpAwAgBikDECAGKQMYhEIAUq2EIQIgBikDCCEECyACp0EHcSIFQQRLrSAEQj2GIAJCA4iEIgJ8IgMgAlStIARCA4hC////////P4MgB61CMIaEIAGEfCEEAkAgBUEERgRAIAQgA0IBgyIBIAN8IgMgAVStfCEEDAELIAVFDQELCyAAIAM3AwAgACAENwMIIAZB8ABqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAtQAQF+AkAgA0HAAHEEQCABIANBQGqthiECQgAhAQwBCyADRQ0AIAIgA60iBIYgAUHAACADa62IhCECIAEgBIYhAQsgACABNwMAIAAgAjcDCAvbAQIBfwJ+QQEhBAJAIABCAFIgAUL///////////8AgyIFQoCAgICAgMD//wBWIAVCgICAgICAwP//AFEbDQAgAkIAUiADQv///////////wCDIgZCgICAgICAwP//AFYgBkKAgICAgIDA//8AURsNACAAIAKEIAUgBoSEUARAQQAPCyABIAODQgBZBEBBfyEEIAAgAlQgASADUyABIANRGw0BIAAgAoUgASADhYRCAFIPC0F/IQQgACACViABIANVIAEgA1EbDQAgACAChSABIAOFhEIAUiEECyAEC8ABAgF/An5BfyEDAkAgAEIAUiABQv///////////wCDIgRCgICAgICAwP//AFYgBEKAgICAgIDA//8AURsNACACQv///////////wCDIgVCgICAgICAwP//AFYgBUKAgICAgIDA//8AUnENACAAIAQgBYSEUARAQQAPCyABIAKDQgBZBEAgASACUiABIAJTcQ0BIAAgASAChYRCAFIPCyAAQgBSIAEgAlUgASACURsNACAAIAEgAoWEQgBSIQMLIAML5A8CBX8PfiMAQdACayIFIwRLIAUjBUlyBEAgBRBJCyAFJAAgBEL///////8/gyELIAJC////////P4MhCiACIASFQoCAgICAgICAgH+DIQ0gBEIwiKdB//8B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AyAFKQMQViABIAUpAxgiBFYgASAEURtxrXwiAlatfCIEIAIgBEKAgICAgIDA//8AVCADIAUpAwBWIAEgBSkDCCIDViABIANRG3GtfCIBIAJUrXwgDYQhDQsgACABNwMAIAAgDTcDCCAFQdACaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALJQBBsICukgEoAgBFBEBBsICukgEgADYCAEG0gK6SASABNgIACwuOAQEDf0G4gK6SAUG4gK6SASgCAEEBaiIFNgIAIAAgBTYCACADBEADQCACIARBA3RqIgYoAgBFBEAgBiAFNgIAIAIgBEEDdGoiACABNgIEIABBADYCCCADJAEgAg8LIARBAWoiBCADRw0ACwsgACABIAIgA0EEdEEIchCdCyADQQF0IgAQpAYhASAAJAEgAQtBAQJ/AkAgAkUNAANAIAEgA0EDdGooAgAiBEUNASAAIARGBEAgASADQQN0aigCBA8LIANBAWoiAyACRw0ACwtBAAsLACAAIAEQowYQOAugAgIDfgJ/IwBBEGsiBSMESyAFIwVJcgRAIAUQSQsgBSQAAn4gAb0iA0L///////////8AgyICQoCAgICAgIAIfUL/////////7/8AWARAIAJCPIYhBCACQgSIQoCAgICAgICAPHwMAQsgAkKAgICAgICA+P8AWgRAIANCPIYhBCADQgSIQoCAgICAgMD//wCEDAELIAJQBEBCAAwBCyAFIAJCACADp2dBIGogAkIgiKdnIAJCgICAgBBUGyIGQTFqEJ8GIAUpAwAhBCAFKQMIQoCAgICAgMAAhUGM+AAgBmutQjCGhAshAiAAIAQ3AwAgACACIANCgICAgICAgICAf4OENwMIIAVBEGoiACMESyAAIwVJcgRAIAAQSQsgACQAC6UBAgJ/AX4jAEEQayICIwRLIAIjBUlyBEAgAhBJCyACJAAgAAJ+IAFFBEBCAAwBCyACIAEgAUEfdSIDcyADayIDrUIAIANnIgNB0QBqEJ8GIAIpAwhCgICAgICAwACFQZ6AASADa61CMIZ8IAFBgICAgHhxrUIghoQhBCACKQMACzcDACAAIAQ3AwggAkEQaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALigECAX8BfiMAQRBrIgIjBEsgAiMFSXIEQCACEEkLIAIkACAAAn4gAUUEQEIADAELIAIgAa1CACABZyIBQdEAahCfBiACKQMIQoCAgICAgMAAhUGegAEgAWutQjCGfCEDIAIpAwALNwMAIAAgAzcDCCACQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAtQAQF+AkAgA0HAAHEEQCACIANBQGqtiCEBQgAhAgwBCyADRQ0AIAJBwAAgA2uthiABIAOtIgSIhCEBIAIgBIghAgsgACABNwMAIAAgAjcDCAvvCgIFfw9+IwBB4ABrIgUjBEsgBSMFSXIEQCAFEEkLIAUkACAEQv///////z+DIQwgAiAEhUKAgICAgICAgIB/gyEKIAJC////////P4MiDUIgiCEOIARCMIinQf//AXEhBwJAAkAgAkIwiKdB//8BcSIJQf//AWtBgoB+TwRAIAdB//8Ba0GBgH5LDQELIAFQIAJC////////////AIMiC0KAgICAgIDA//8AVCALQoCAgICAgMD//wBRG0UEQCACQoCAgICAgCCEIQoMAgsgA1AgBEL///////////8AgyICQoCAgICAgMD//wBUIAJCgICAgICAwP//AFEbRQRAIARCgICAgICAIIQhCiADIQEMAgsgASALQoCAgICAgMD//wCFhFAEQCACIAOEUARAQoCAgICAgOD//wAhCkIAIQEMAwsgCkKAgICAgIDA//8AhCEKQgAhAQwCCyADIAJCgICAgICAwP//AIWEUARAIAEgC4QhAkIAIQEgAlAEQEKAgICAgIDg//8AIQoMAwsgCkKAgICAgIDA//8AhCEKDAILIAEgC4RQBEBCACEBDAILIAIgA4RQBEBCACEBDAILIAtC////////P1gEQCAFQdAAaiABIA0gASANIA1QIgYbeSAGQQZ0rXynIgZBD2sQnwZBECAGayEGIAUpA1giDUIgiCEOIAUpA1AhAQsgAkL///////8/Vg0AIAVBQGsgAyAMIAMgDCAMUCIIG3kgCEEGdK18pyIIQQ9rEJ8GIAYgCGtBEGohBiAFKQNIIQwgBSkDQCEDCyADQg+GIgtCgID+/w+DIgIgAUIgiCIEfiIQIAtCIIgiEyABQv////8PgyIBfnwiD0IghiIRIAEgAn58IgsgEVStIAIgDUL/////D4MiDX4iFSAEIBN+fCIRIAxCD4YiEiADQjGIhEL/////D4MiAyABfnwiFCAPIBBUrUIghiAPQiCIhHwiDyACIA5CgIAEhCIMfiIWIA0gE358Ig4gEkIgiEKAgICACIQiAiABfnwiECADIAR+fCISQiCGfCIXfCEBIAcgCWogBmpB//8AayEGAkAgAiAEfiIYIAwgE358IgQgGFStIAQgBCADIA1+fCIEVq18IAIgDH58IAQgBCARIBVUrSARIBRWrXx8IgRWrXwgAyAMfiIDIAIgDX58IgIgA1StQiCGIAJCIIiEfCAEIAJCIIZ8IgIgBFStfCACIAIgECASVq0gDiAWVK0gDiAQVq18fEIghiASQiCIhHwiAlatfCACIAIgDyAUVK0gDyAXVq18fCICVq18IgRCgICAgICAwACDUEUEQCAGQQFqIQYMAQsgC0I/iCEDIARCAYYgAkI/iIQhBCACQgGGIAFCP4iEIQIgC0IBhiELIAMgAUIBhoQhAQsgBkH//wFOBEAgCkKAgICAgIDA//8AhCEKQgAhAQwBCwJ+IAZBAEwEQEEBIAZrIgdB/wBNBEAgBUEwaiALIAEgBkH/AGoiBhCfBiAFQSBqIAIgBCAGEJ8GIAVBEGogCyABIAcQqgYgBSACIAQgBxCqBiAFKQMwIAUpAziEQgBSrSAFKQMgIAUpAxCEhCELIAUpAyggBSkDGIQhASAFKQMAIQIgBSkDCAwCC0IAIQEMAgsgBEL///////8/gyAGrUIwhoQLIAqEIQogC1AgAUIAWSABQoCAgICAgICAgH9RG0UEQCAKIAJCAXwiASACVK18IQoMAQsgCyABQoCAgICAgICAgH+FhFBFBEAgAiEBDAELIAogAiACQgGDfCIBIAJUrXwhCgsgACABNwMAIAAgCjcDCCAFQeAAaiIAIwRLIAAjBUlyBEAgABBJCyAAJAALdQEBfiAAIAEgBH4gAiADfnwgA0IgiCICIAFCIIgiBH58IANC/////w+DIgMgAUL/////D4MiAX4iBUIgiCADIAR+fCIDQiCIfCABIAJ+IANC/////w+DfCIBQiCIfDcDCCAAIAVC/////w+DIAFCIIaENwMAC2sBAX8jAEEQayIFIwRLIAUjBUlyBEAgBRBJCyAFJAAgBSABIAIgAyAEQoCAgICAgICAgH+FEJ4GIAUpAwAhASAAIAUpAwg3AwggACABNwMAIAVBEGoiACMESyAAIwVJcgRAIAAQSQsgACQAC/kDAgJ+An8jAEEgayIEIwRLIAQjBUlyBEAgBBBJCyAEJAACQCABQv///////////wCDIgNCgICAgICAwIA8fSADQoCAgICAgMD/wwB9VARAIAFCBIYgAEI8iIQhAyAAQv//////////D4MiAEKBgICAgICAgAhaBEAgA0KBgICAgICAgMAAfCECDAILIANCgICAgICAgIBAfSECIABCgICAgICAgIAIUg0BIAIgA0IBg3whAgwBCyAAUCADQoCAgICAgMD//wBUIANCgICAgICAwP//AFEbRQRAIAFCBIYgAEI8iIRC/////////wODQoCAgICAgID8/wCEIQIMAQtCgICAgICAgPj/ACECIANC////////v//DAFYNAEIAIQIgA0IwiKciBUGR9wBJDQAgBEEQaiAAIAFC////////P4NCgICAgICAwACEIgIgBUGB9wBrEJ8GIAQgACACQYH4ACAFaxCqBiAEKQMIQgSGIAQpAwAiAEI8iIQhAiAEKQMQIAQpAxiEQgBSrSAAQv//////////D4OEIgBCgYCAgICAgIAIWgRAIAJCAXwhAgwBCyAAQoCAgICAgICACFINACACQgGDIAJ8IQILIARBIGoiBCMESyAEIwVJcgRAIAQQSQsgBCQAIAIgAUKAgICAgICAgIB/g4S/C94DAgN/AX4jAEEgayIDIgIjBEsgAiMFSXIEQCACEEkLIAIkAAJAIAFC////////////AIMiBUKAgICAgIDAwD99IAVCgICAgICAwL/AAH1UBEAgAUIZiKchBCAAUCABQv///w+DIgVCgICACFQgBUKAgIAIURtFBEAgBEGBgICABGohAgwCCyAEQYCAgIAEaiECIAAgBUKAgIAIhYRCAFINASACIARBAXFqIQIMAQsgAFAgBUKAgICAgIDA//8AVCAFQoCAgICAgMD//wBRG0UEQCABQhmIp0H///8BcUGAgID+B3IhAgwBC0GAgID8ByECIAVC////////v7/AAFYNAEEAIQIgBUIwiKciBEGR/gBJDQAgA0EQaiAAIAFC////////P4NCgICAgICAwACEIgUgBEGB/gBrEJ8GIAMgACAFQYH/ACAEaxCqBiADKQMIIgBCGYinIQIgAykDACADKQMQIAMpAxiEQgBSrYQiBVAgAEL///8PgyIAQoCAgAhUIABCgICACFEbRQRAIAJBAWoh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AUEQaiIBIwRLIAEjBUlyBEAgARBJCyABJAAgAAtUAQF/IwBBEGsiASMESyABIwVJcgRAIAEQSQsgASQAIAFBDGogABD2BiAAEPoGahCpCCgCACEAIAFBEGoiASMESyABIwVJcgRAIAEQSQsgASQAIAALDQAgACgCACABKAIARwsPACAAIAAoAgBBAWo2AgALCwAgACABNgIAIAALEQAgACABIAIgAyAEQQEQow0LqgEBAX8CQCADQYAQcUUNACACRSADQcoAcSIEQQhGIARBwABGcnINACAAQSs6AAAgAEEBaiEACyADQYAEcQRAIABBIzoAACAAQQFqIQALA0AgAS0AACIEBEAgACAEOgAAIABBAWohACABQQFqIQEMAQsLIAACf0HvACADQcoAcSIBQcAARg0AGkHYAEH4ACADQYCAAXEbIAFBCEYNABpB5ABB9QAgAhsLOgAAC24BAX8jAEEQayIFIwRLIAUjBUlyBEAgBRBJCyAFJAAgBSACNgIMIAUgBDYCCCAFQQRqIAVBDGoQiwghAiAAIAEgAyAFKAIIEP8FIQEgAhCMCCAFQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkACABC2MAIAIoAgRBsAFxIgJBIEYEQCABDwsCQCACQRBHDQACQAJAIAAtAAAiAkEraw4DAAEAAQsgAEEBag8LIAJBMEcgASAAa0ECSHINACAALQABQSByQfgARw0AIABBAmohAAsgAAuNBAEIfyMAQRBrIgoiByMESyAHIwVJcgRAIAcQSQsgByQAIAYQkgEhCyAKQQRqIgcgBhDkByIGEKMIAkAgBxDuBwRAIAsgACACIAMQhwggBSADIAIgAGtqIgY2AgAMAQsgBSADNgIAAkACQCAAIgctAAAiCEEraw4DAAEAAQsgCyAIwBCdByEHIAUgBSgCACIIQQFqNgIAIAggBzoAACAAQQFqIQcLAkAgAiAHa0ECSA0AIActAABBMEcNACAHLQABQSByQfgARw0AIAtBMBCdByEIIAUgBSgCACIJQQFqNgIAIAkgCDoAACALIAcsAAEQnQchCCAFIAUoAgAiCUEBajYCACAJIAg6AAAgB0ECaiEHCyAHIAIQyAhBACEJIAYQogghDEEAIQggByEGA38gAiAGTQR/IAMgByAAa2ogBSgCABDICCAFKAIABQJAIApBBGogCBDt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IAcgBCgCBCAFIABBvwFqIAggASAAQcQBaiAAQeAEahD+CEUNACAAQc+QqJIBKAAANgC3ASAAQciQqJIBKQAANwOwASAIIABBsAFqIABBugFqIABBgAFqEJ8IIABB5wM2AhAgAEEIakEAIABBEGoiBBDqByEDAkAgACgCxAEgASgCAGtBiQNOBEAgAyAAKALEASABKAIAa0ECdUECahCaCxDrByADKAIARQ0BIAMoAgAhBAsgAC0AvwEEQCAEQS06AAAgBEEBaiEECyABKAIAIQIDQCAAKALEASACTQRAAkAgBEEAOgAAIAAgBjYCACAAQRBqQZHmp5IBIAAQ4QVBAUcNACADEO8HDAQLBSAEIABBsAFqIABBgAFqIgcgB0EoaiACEKAIIAdrQQJ1ai0AADoAACAEQQFqIQQgAkEEaiECDAELCxCyBgALELIGAAsgAEHsBGogAEHoBGoQ6wYEQCAFIAUoAgBBAnI2AgALIAAoAuwEIQIgAEHAAWoQpgkgARDvByAAQfAEaiIAIwRLIAAjBUlyBEAgABBJCyAAJAAgAgukEQEKfyMAQZAEayILIwRLIAsjBUlyBEAgCxBJCyALJAAgCyAKNgKIBCALIAE2AowEAkAgACALQYwEahDrBgRAIAUgBSgCAEEEcjYCAEEAIQAMAQsgC0HoAzYCSCALIAtB6ABqIAtB8ABqIAtByABqIgEQ6gciDygCACIKNgJkIAsgCkGQA2o2AmAgARDzBiERIAtBPGoQ8wYhDCALQTBqEPMGIQ4gC0EkahDzBiENIAtBGGoQ8wYhECMAQRBrIgojBEsgCiMFSXIEQCAKEEkLIAokACALAn8gAgRAIApBBGoiASADEIMJIgIQ9gggCyAKKAIENgBcIAEgAhD3CCANIAEQhAkgARCmChogASACEOYHIA4gARCECSABEKYKGiALIAIQoQg2AlggCyACEKIINgJUIAEgAhCjCCARIAEQ9AYgARCfChogASACEOUHIAwgARCECSABEKYKGiACEPgIDAELIApBBGoiASADEIUJIgIQ9gggCyAKKAIENgBcIAEgAhD3CCANIAEQhAkgARCmChogASACEOYHIA4gARCECSABEKYKGiALIAIQoQg2AlggCyACEKIINgJUIAEgAhCjCCARIAEQ9AYgARCfChogASACEOUHIAwgARCECSABEKYK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nAlB6KGukgEQlgkiAUKugICAwAU3AgggAUHQgKySATYCACABQRBqEPMGGiAAQeihrpIBQayXrpIBEJsJEJwJQYiirpIBEJYJQYSMrJIBNgIAIABBiKKukgFBsJWukgEQmwkQnAlBkKKukgEQlglB+I2skgE2AgAgAEGQoq6SAUG4la6SARCbCRCcCUGYoq6SARCWCUHMj6ySATYCACAAQZiirpIBQcCVrpIBEJsJEJwJQaCirpIBEJYJQbSRrJIBNgIAIABBoKKukgFByJWukgEQmwkQnAlBqKKukgEQlglBjJmskgE2AgAgAEGooq6SAUHwla6SARCbCRCcCUGwoq6SARCWCUGgmqySATYCACAAQbCirpIBQfiVrpIBEJsJEJwJQbiirpIBEJYJQZSbrJIBNgIAIABBuKKukgFBgJaukgEQmwkQnAlBwKKukgEQlglBiJyskgE2AgAgAEHAoq6SAUGIlq6SARCbCRCcCUHIoq6SARCWCUH8nKySATYCACAAQciirpIBQZCWrpIBEJsJEJwJQdCirpIBEJYJQaCerJIBNgIAIABB0KKukgFBmJaukgEQmwkQnAlB2KKukgEQlglBxJ+skgE2AgAgAEHYoq6SAUGglq6SARCbCRCcCUHgoq6SARCWCUHooKySATYCACAAQeCirpIBQaiWrpIBEJsJEJwJQeiirpIBEJYJIgFB0KqskgE2AgggAUH8kqySATYCACABQayTrJIBNgIIIABB6KKukgFB0JWukgEQmwkQnAlB+KKukgEQlgkiAUH0qqySATYCCCABQYSVrJIBNgIAIAFBtJWskgE2AgggAEH4oq6SAUHYla6SARCbCRCcCUGIo66SARCWCSIBQQhqEJcKIAFB8JaskgE2AgAgAEGIo66SAUHgla6SARCbCRCcCUGYo66SARCWCSIBQQhqEJcKIAFBjJiskgE2AgAgAEGYo66SAUHola6SARCbCRCcCUGoo66SARCWCUGMoqySATYCACAAQaijrpIBQbCWrpIBEJsJEJwJQbCjrpIBEJYJQYSjrJIBNgIAIABBsKOukgFBuJaukgEQmwkQnAlByJaukgFBuKOukgE2AgBB0JaukgFBAToAAEHMlq6SAUHIlq6SATYCAEHIlq6SAQsQpQlB3JaukgFBAToAAEHYlq6SAUHUlq6SATYCAEHUlq6SAQso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JAAgAEECTwR/IABBBGpBfHEiACAAQQFrIgAgAEECRhsFQQELCxkAIAEgAhCCCiEBIAAgAjYCBCAAIAE2AgALHAAgAUH/////A0sEQBCRAQALIAFBAnRBBBCbBwtVAQF/IwBBEGsiAyMESyADIwVJcgRAIAMQSQsgAyQAIAAgAhD0CCADQQA6AA8gASACaiADQQ9qEI8HIANBEGoiACMESyAAIwVJcgRAIAAQSQsgACQACwkAIAAgARCFCgsJACABQQQQkAcLXQEBfyMAQRBrIgMjBEsgAyMFSXIEQCADEEkLIAMkACADIAEQhwo2AgwgAyACEIcKNgIIIAAgA0EMaiADQQhqEIwHIANBEGoiACMESyAAIwVJcgRAIAAQSQsgACQAC00BAX8jAEEQayIBIwRLIAEjBUlyBEAgARBJCyABJAAgASAANgIMIAFBDGoQiAohACABQRBqIgEjBEsgASMFSXIEQCABEEkLIAEkACAAC1EBAX8gACgCACEBIwBBEGsiACMESyAAIwVJcgRAIAAQSQsgACQAIAAgATYCDCAAKAIMIQEgAEEQaiIAIwRLIAAjBUlyBEAgABBJCyAAJAAgAQsLACAAQQA2AgAgAAtqAQF/IwBBEGsiASMESyABIwVJcgRAIAEQSQsgASQAIAAQjAoaIAFB/////wM2AgwgAUH/////BzYCCCABQQxqIAFBCGoQggcoAgAhACABQRBqIgEjBEsgASMFSXIEQCABEEkLIAEkACAACwwAQYyup5IBEJABAAsHACAAQRBqC3EBAX8jAEEQayIDIwRLIAMjBUlyBEAgAxBJCyADJAACQAJAIAJBHksNACABLQB4DQAgAUEBOgB4DAELIANBD2ogAhCCCiEBCyADQRBqIgMjBEsgAyMFSXIEQCADEEkLIAMkACAAIAI2AgQgACABNgIACwcAIABBCGoLJgAgACgCABogACgCABogABCQChogACgCABogABCQChogACgCABoLEwAgABCOCigCACAAKAIAa0ECdQsJACAAQQA2AgALLAAgACgCABogACgCABogABCQChogACgCABogABCYCRogACgCABogABCQChoLVgAjAEEQayICIwRLIAIjBUlyBEAgAhBJCyACJAACQCAAIAFGBEAgAUEAOgB4DAELIAJBD2ogARCFCgsgAkEQaiIAIwRLIAAj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IAVBEGoiACMESyAAIwVJcgRAIAAQSQsgACQAIAIPC0Hc3aeSAUH0AkHLoamSAUIAQgAQ+AwAC3MBAX8gAEH8D2ooAgBBADoAAAJAIABBgIClkgFJBEBBzr64kgEtAAANAQsgAEEDdiEBQQAhAANAIAEgAEEDdGpC9evXr9++/fp1NwMAIABBAWoiAEEgRw0ACw8LQdzdp5IBQfQCQcuhqZIBQgBCABD4DAALlAcCA34Hf0GYvriSASgCAEUEQEEADwtB8L64kgEpAwAhA0J/IQUDQAJAAkACQAJAIANC//+/gICAgIAQg1BFBEAgBkHcC0sNASADQoCAgICAgICAIINQRQRAQfC+uJIBKQMAIQMgBkEBaiEGDAYLQfC+uJIBIANCgICAgICAgIAghEHwvriSASkDACIEIAMgBFEiBxs3AwAgBCEDIAcNBAwCC0HwvriSASAFIANCgICAgICAgIAQhINB8L64kgEpAwAiBCADIARRGzcDACADIARSIQcgBCEDIAcNAUEAIQYCQAJAAkBBgL+4kgEoAgAiCUUNAANAIAkoAgAhB0GYvriSASgCAEECTgRAIAdB99enkgEQiwsLAkAgBygCACIIQUBqIABPDQAgBygCCCAIaiAATQ0AIAEgBkEFdGogB0EgEKYMGiACBEBB8L64kgEpAwBCgICAgICAgIAQg1ANBEGIv7iSASgCACIIRQ0FIAIgBkECdGoCf0EAIAgoAggiC0UNABogCCgCACEMQQAhCAJAA0AgByAMIAhBDGxqIgooAgRPBEAgCigCCCAHTw0CCyAIQQFqIgggC0cNAAtBAAwBCyAKKAIACzYCAAsgBkEBaiIGQQRHDQBBBCEGDAILIAkoAgQiCQ0ACwtB8L64kgEpAwAhAwJAA0ACQCADQv//////////b4MiBEKAgICAgCB9QoCAgICAgICAIIQgBCADQoCAgICAgICA4ACDUCADQoCAgICA4P//D4NCAFJxIgAbIQQCQCAARQRAQfC+uJIBIAQgBEL//7+AgOD//79/g0KAgICAgICAgMAAhCADQhSIQv//P4NCACADQoCAgICAgICAIINQGyIFUCIAG0HwvriSASkDACIEIAMgBFEiARs3AwAgAUUNASAADQRB/L64kgEgBacQvQwgBg8LQfC+uJIBIARB8L64kgEpAwAiBCADIARRIgAb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BUEBOgAACwJAEKALRQ0AIAMoAgRBB2pBeHEiBSADKAIAIgJqQQN2IgZB+QEgAygCCCACaq1C+P////8AfEIDiKcgBmtBAWoQ0QoaIAUgAygCBCICRg0AIAMoAgAgAkF4cWpBA3YgAkEHcSICQQBB1b64kgEtAAAbQXkgAhs6AAALQYy/uJIBQQgQ7QsiAiADNgIAIAJBgL+4kgEoAgA2AgRBgL+4kgEgAjYCACADKAIUBEBBhL+4kgEoAgAiAkUEQEGMv7iSAUEMEO0LIgJBADYCCCACQgA3AgBBhL+4kgEgAjYCACACQYAEEJELQYS/uJIBKAIAIQILIARBQGsgAykCGDcDACAEIAMpAhA3AzggBCADKQIINwMwIAQgAykCADcDKCAEQQA6AEggBEEoaiEGAkACQAJAAkAgAigCCCIDIAIoAgRBJG4iBU0EQCADIAVGBEAgA0EBaiIDrSELIANFDQIgAiADIANBAWtxBH9CAUEgIANnIgNrrYYiDCALWA0EQgEgA0Efc62GIg0gC1oNBSAMpwUgAwsQkQsgAigCCCEDCyACIANBAWo2AgggAigCACADQSRsaiAGQSQQpgwaDAQLQbHcp5IBQYcEQdPIqZIBIAOtIAWtEPgMAAtBsdynkgFBtQNBsZepkgEgC0IAEPgMAAtBsdynkgFBuQNBscipkgEgCyAMEPgMAAtBsdynkgFBugNB28WpkgEgCyANEPgMAAsLIApBAWoiCiABRw0ACwsgACABQQV0QfkBEKELQfC+uJIBKQMAIQsDQAJAIAtC//////////9vgyIMQoCAgICAIH1CgICAgICAgIAghCAMIAtCgICAgICAgIDgAINQIAtCgICAgIDg//8Pg0IAUnEiABshDAJAIABFBEBB8L64kgEgDCAMQv//v4CA4P//v3+DQoCAgICAgICAwACEIAtCFIhC//8/g0IAIAtCgICAgICAgIAgg1AbIg1QIgAbQfC+uJIBKQMAIgwgCyAMUSIBGzcDACABRQ0BIAANCEH8vriSASANpxC9DAwIC0HwvriSASAMQfC+uJIBKQMAIgwgCyAMUSIAGzcDACAADQELIAwhCwwBCwtB+L64kgFBARC9DAwECyACQQFqIQIMAgtB+L64kgEQvAxBACECC0HwvriSASkDACELQv//////////XyENIAJBAWohAgwA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B0EBOgAgCyAFQQFqIgUgCUcNAQwCCwtBsdynkgFB/wNBk72pkgEgBa0gB60Q+AwAC0HwvriSASkDACEBA0ACQCABQv//////////b4MiAkKAgICAgCB9QoCAgICAgICAIIQgAiABQoCAgICAgICA4ACDUCABQoCAgICA4P//D4NCAFJxIgAbIQICQCAARQRAQfC+uJIBIAIgAkL//7+AgOD//79/g0KAgICAgICAgMAAhCABQhSIQv//P4NCACABQoCAgICAgICAIINQGyIDUCIAG0HwvriSASkDACICIAEgAlEiBhs3AwAgBkUNASAADQpB/L64kgEgA6cQvQwMCgtB8L64kgEgAkHwvriSASkDACICIAEgAlEiABs3AwAgAA0BCyACIQEMAQsLQfi+uJIBQQEQvQwMBgsgBEEBaiEEDAILQfi+uJIBELwMQQAhBAtB8L64kgEpAwAhAUL//////////18hAyAEQQFqIQQMAAsAC0Hpu6eSAUGpA0GqmamSAUIAQgAQ+AwAC0Hpu6eSAUGoA0HRl6mSAUIAQgAQ+AwACyAIQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAuHBwIGfwN+AkBBnL64kgEtAABFDQAQoAtFDQBBhL+4kgEoAgBFDQBB0Ne4kgEoAgAEQEHwvriSASkDACEGQn8hCANAAkACQAJAIAZC//+/gICAgIAQg1BFBEAgAEHcC00EQCAGQoCAgICAgICAIINQRQRAQfC+uJIBKQMAIQYgAEEBaiEADAYLQfC+uJIBIAZCgICAgICAgIAghEHwvriSASkDACIHIAYgB1EiARs3AwAgByEGIAENBAwCC0HwvriSASAIIAZCgICAgIAgfINB8L64kgEpAwAiByAGIAdRIgEbNwMAIAchBiABDQIMAQtB8L64kgEgCCAGQoCAgICAgICAEISDQfC+uJIBKQMAIgcgBiAHUSIBGzcDACAHIQYgAUUNAEEAIQECQEGEv7iSASgCACgCCCIEBEADQEGEv7iSASgCACIAKAIIIgIgAU0NAgJAIAAoAgAgAUEkbGoiAC0AIA0AIAAoAgAiAkEDdiIDQQAgACgCCCACaq1C+P////8AfEIDiKcgA2tBAWoQ0QoaIAAoAgRBB2pBeHEiAiAAKAIAIgNqQQN2IgVB+QEgACgCCCADaq1C+P////8AfEID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DEKAgICAgICAgBCEgyAGKQMQIg0gDCANUSILGzcDECANIQwgC0UNAEH9g6qSAUEAEMsMIAkMBAsgB0EBaiEHDAILIAoQvAxBACEHCyAGKQMQIQxC//////////9fIQ4gB0EBaiEHDAALAAshCSAIQdwKaiEGENELIQojAEEQayIHIwRLIAcjBUlyBEAgBxBJCyAHJAAgBiAKNgKECCAGQYgIaiADIAUQ/QogBkEAOgC9CSAGIAQ6ALwJIAYgBTYCtAkgBiACNgKwCSAGIAE2AqwJIAYgADYCqAkgBkEAOgAEIAZBADYCAAJAIAVFDQAgBkEEaiEBIAYCfyAFQQlNBEAgB0G06KeSASgAADYCCCAHQbfop5IBKAAANgALIAcgBUEwajoACCABIAdBCGpBgAgQrwwgBigCACAFQQF2IAVqagwBCyABQanop5IBQYAIEK8MIAYoAgBBD2oLNgIAQRRBASAGLQC8CSIAGyECIAYtAAQEQCABQdaPqZIBQYAIEK8MCyABQdXop5IBQbj6p5IBIAAbQYAIEK8MQYnXp5IBIQAgBkGJ16eSATYCuAkgBiAGKAIAIAJqNgIAIAYCfwJAAkACQCADQYCApZIBSQRAQc6+uJIBLQAADQELQQAhBCAGIANBA3YiAiACLQAARSAGKAK0CUEIS3FqIgIgAiwAAEEASmoiAy0AACIFOgC9CUEAIQICfwJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgBUGsAWsOUgAREREREREREREREREREQkREREREREREREREREREQoKEREREREREREREREREREREREREREREREREREREREREREREREREQEDAxEEAgUHCAARBg0RC0G6j6eSASEEIAZBuo+nkgE2ArgJQQAhAEEKIQIgA0EBaywAAEEASA0KDAsLQeuRp5IBIQQgBkHrkaeSATYCuAlBACEAQRkhAiADQQFrLAAAQQBIDQkMCgtBi82nkgEhACAGQYvNp5IBNgK4CUEBIQIMDgtB7o+nkgEhBCAGQe6Pp5IBNgK4CUEAIQBBGSECIANBAWssAABBAEgNBwwIC0HgzaeSASEAIAZB4M2nkgE2ArgJQQBBEiAGLQC8CRshBEEeIQIMDAsgBkGIzqeSATYCuAlBiM6nkgEMCAtBjY+nkgEhAAwJC0H56aeSASEADAgLQc+P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DQBB3Ne4kgEgADYCAAvmAQEBfyAAQQA2AgQCQEHQ17iSASgCAEUNABDOCyIDRQ0AIAMtAJDbASEFIANBAToAkNsBIAVBAUcEQAJAIAMQzwsaAn8gAy0AHEUEQCADKAIQIgVBACAFIAMoAgxJGwwBCyADKAIYGiADKAIQGiADKAIUGkEACxogACACQQAgBBs2AogIAkACQAJAIAQOAgABAgsgAEEANgIEDAILIAAgATYCDCAAQQE2AgQMAQsgASAAQQxqQf8BIAQgBEH/AU8bEEQhAiAAIAE2AgwgAEEBIAIgAkEBTRs2AgQLCyADQQA6AJDbAQsLSQEDfyAAKAKEASIABEAgAEGA2QFqIQJBACEAA0AgASAAQQJ0IgNqIgQgBCgCACACIANqKAIAajYCACAAQQFqIgBBxABHDQALCwsXAQF/EM4LIgBBgNkBakHg17iSASAAGwu9FgIKfwN+IwBBoAJrIgYjBEsgBiMFSXIEQCAGEEkLIAYkACAGQRBqIgRBAEGQAhDRChogBEEAQZACENEKGhDLCyIBQRhqIQIgASkDECEKQn8hDANAAkACQAJAAkAgCkL//7+AgICAgBCDUEUEQCAAQdwLTQRAIApCgICAgICAgIAgg1BFBEAgASkDECEKIABBAWohAAwHCyABIApCgICAgICAgIAghCABKQMQIgsgCiALUSIFGzcDECALIQogBQ0EDAILIAEgDCAKQoCAgICAIHyDIAEpAxAiCyAKIAtRIgUbNwMQIAshCiAFDQIMAQsgASAMIApCgICAgICAgIAQhIMgASkDECILIAogC1EiBRs3AxAgCyEKIAVFDQAQywtBnQYgBBD7DCABKQMQIQoCQANAAkAgCkL//////////2+DIgtCgICAgIAgfUKAgICAgICAgCCEIAsgCkKAgICAgICAgOAAg1AgCkKAgICAgOD//w+DQgBScSIAGyELAkAgAEUEQCABIAsgC0L//7+AgOD//79/g0KAgICAgICAgMAAhCAKQhSIQv//P4NCACAKQoCAgICAgICAIINQGyIMUCIAGyABKQMQIgsgCiALUSIFGzcDECAFRQ0BIAANBCABQRxqIAynEL0MDAQLIAEgCyABKQMQIgsgCiALUSIAGzcDECAADQELIAshCgwBCwsgAkEBEL0MC0EAIQIDQCAEIAJBAnQiAGoiASABKAIAIABB4Ne4kgFqKAIAajYCACACQQFqIgJBxABHDQALQYDcuJIBKQMAIQpCfyEMQQAhAANAAkACQAJAAkAgCkL//7+AgICAgBCDUEUEQCAAQdwLSw0BIApCgICAgICAgIAgg1BFBEBBgNy4kgEpAwAhCiAAQQFqIQAMBgtBgNy4kgEgCkKAgICAgICAgCCEQYDcuJIBKQMAIgsgCiALUSIBGzcDACALIQogAQ0EDAILQQAhAkGA3LiSASAMIApCgICAgICAgIAQhINBgNy4kgEpAwAiCyAKIAtRIgEbNwMAIAshCiABRQ0BA0AgBCACQQJ0IgBqIgEgASgCACAAQfDZuJIBaigCAGo2AgAgAkEBaiICQcQARw0AC0GA3LiSASkDACEKAkADQAJAIApC//////////9vgyILQoCAgICAIH1CgICAgICAgIAghCALIApCgICAgICAgIDgAINQIApCgICAgIDg//8Pg0IAUnEiABshCwJAIABFBEBBgNy4kgEgCyALQv//v4CA4P//v3+DQoCAgICAgICAwACEIApCFIhC//8/g0IAIApCgICAgICAgIAgg1AbIgxQIgAbQYDcuJIBKQMAIgsgCiALUSIBGzcDACABRQ0BIAANBEGM3LiSASAMpxC9DAwEC0GA3LiSASALQYDcuJIBKQMAIgsgCiALUSIAGzcDACAADQELIAshCgwBCwtBiNy4kgFBARC9DAsgBCgCBCIAQZDcuJIBKAIASwRAQZDcuJIBIAA2AgALDAgLQYDcuJIBIAwgCkKAgICAgCB8g0GA3LiSASkDACILIAogC1EiARs3AwAgCyEKIAENAQsgAEEBaiEADAILQYjcuJIBELwMQQAhAAtBgNy4kgEpAwAhCkL//////////18hDCAAQQFqIQAMAAsACyAAQQFqIQAMAwsgAhC8DEEAIQALIAEpAxAhCkL//////////18hDCAAQQFqIQAMAQsLQZjcuJIBKQMAIQpCfyEMA0ACQAJAAkAgCkL//7+AgICAgBCDUEUEQCADQdwLTQRAIApCgICAgICAgIAgg1BFBEBBmNy4kgEpAwAhCiADQQFqIQMMBgtBmNy4kgEgCkKAgICAgICAgCCEQZjcuJIBKQMAIgsgCiALUSIAGzcDACALIQogAA0EDAILQZjcuJIBIAwgCkKAgICAgCB8g0GY3LiSASkDACILIAogC1EiABs3AwAgCyEKIAANAgwBC0GY3LiSASAMIApCgICAgICAgIAQhINBmNy4kgEpAwAiCyAKIAtRIgAbNwMAIAshCiAARQ0AIwBBkAFrIgAjBEsgACMFSXIEQCAAEEkLIAAkACAGQRBqIgEoAgQhAiABKAIIIQMgACABKAIANgKIASAAIANBFHY2AoQBIAAgAkEUdjYCgAFBkeepkgEgAEGAAWoQywwgASgCICECIAAgASgCHDYCdCAAIAJBFHY2AnBB7eapkgEgAEHwAGoQywwgASgCECECIAAgASgCDDYCZCAAIAJBFHY2AmBBzeapkgEgAEHgAGoQywwgASgCGCECIAAgASgCFDYCVCAAIAJBFHY2AlBBpuapkgEgAEHQAGoQywwgASgCKCECIAEoAjAhAyABKAIkIQQgAEFAayABKAIsNgIAIAAgBDYCPCAAIANBFHY2AjggACACQRR2NgI0IAAgAiADa0EUdjYCMEHe5KmSASAAQTBqEMsMIABB3c+pkgE2AiBBl62nkgEgAEEgahDLDEEAIQIDQCABIAJBAnRqKAI4IgMEQCAAIAM2AhQgACACNgIQQbLOqZIBIABBEGoQywwLIAJBAWoiAkE2Rw0AC0HBtqqSAUEAEMsMIAAgASgCNDYCAEGi46mSASAAEMsMIABBkAFqIgAjBEsgACMFSXIEQCAAEEkLIAAkACAGQQhqENUMIAYgBigCCDYCACAGIAYoAgxBFHY2AgRBj/2pkgEgBhDLDEEAIQMjAEHQAGsiACMESyAAIwVJcgRAIAAQSQsgACQAQZThtpIBKAIAIQFBmOG2kgEoAgAhAkGc4baSASgCACEEIABBkOG2kgEoAgAiBTYCQCAAIARBFHY2AkwgACACQQp2NgJIIAAgBSABazYCREH3z6mSASAAQUBrEMsMQQAhAQNAIAFBAnRBoOG2kgFqKAIAIgIEQCAAIAI2AjQgACABNgIwQbzOqZIBIABBMGoQywwLIAFBAWoiAUHAAEcNAAtBACEEQcG2qpIBQQAQywxBiOS2kgEoAgAhASAAQYDktpIBKAIAQRR2NgIgIAAgAUEKdjYCJEGXg6qSASAAQSBqEMsMAkBB1OS2kgEoAgAiAUUEQEEAIQFBACEFQQAhAgwBC0EAIQJBACEFA0AgA0GAIGohAyAEQQFqIQQgASgCCCAFaiEFIAEoAgQgAmohAiABKAIAIgENAAtBACEBIAQEQCAFQeQAbCAEQf0HbCIIbiEBCyACIANrIQcgAiADRg0AIANB5ABsIAduIQkLIAAgCTYCGCAAIAE2AhQgACAINgIQIAAgBTYCDCAAIAc2AgggACACNgIEIAAgBDYCAEHk/qmSASAAEMsMIABB0ABqIgAjBEsgACMFSXIEQCAAEEkLIAAkAEGY3LiSASkDACEKAkADQAJAIApC//////////9vgyILQoCAgICAIH1CgICAgICAgIAghCALIApCgICAgICAgIDgAINQIApCgICAgIDg//8Pg0IAUnEiABshCwJAIABFBEBBmNy4kgEgCyALQv//v4CA4P//v3+DQoCAgICAgICAwACEIApCFIhC//8/g0IAIApCgICAgICAgIAgg1AbIgxQIgAbQZjcuJIBKQMAIgsgCiALUSIBGzcDACABRQ0BIAANBEGk3LiSASAMpxC9DAwEC0GY3LiSASALQZjcuJIBKQMAIgsgCiALUSIAGzcDACAADQELIAshCgwBCwtBoNy4kgFBARC9DAsgBkGgAmoiACMESyAAIwVJcgRAIAAQSQsgACQADwsgA0EBaiEDDAILQaDcuJIBELwMQQAhAwtBmNy4kgEpAwAhCkL//////////18hDCADQQFqIQMMAAsAC3UBAn8jAEEQayIBIwRLIAEjBUlyBEAgARBJCyABJABBqNy4kgEoAgAiAkUEQEGhu6eSAUE8QcySqZIBQgBCABD4DAALIAIgAEGkvaySASABQQxqEOIMIQIgAUEQaiIAIwRLIAAjBUlyBEAgABBJCyAAJAAgAgt3AQJ/IwBBEGsiAiMESyACIwVJcgRAIAIQSQsgAiQAIAEoAgQiAwRAIAIgAygCCDYCCCACIAMpAgA3AwAgACACENYMNgKAAQsgACABKAIAIgE2AoQBIAEgADYCACACQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkAAsKACAAQQA2AoQBCzsAQZjduJIBLQAABEBBiN64kgEoAgAPCxD5DEGY3biSAUEBOgAAQYjeuJIBQaDduJIBNgIAQaDduJIBC8IFAgJ/A35BkN64kgEpAwAhA0J/IQUDQAJAAkACQCADQv//v4CAgICAEINQRQRAIAFB3AtNBEAgA0KAgICAgICAgCCDUEUEQEGQ3riSASkDACEDIAFBAWohAQwGC0GQ3riSASADQoCAgICAgICAIIRBkN64kgEpAwAiBCADIARRIgIbNwMAIAQhAyACDQQMAgtBkN64kgEgBSADQoCAgICAIHyDQZDeuJIBKQMAIgQgAyAEUSICGzcDACAEIQMgAg0CDAELQZDeuJIBIAUgA0KAgICAgICAgBCEg0GQ3riSASkDACIEIAMgBFEiAhs3AwAgBCEDIAJFDQBBoN64kgFBiAEQ7QsiAUEANgJ0IAFCADcCbCABQQA6AGggAUEANgJkIAFBADYCICABQgA3AxggAUEANgIQIAFCADcDCCABIAA2AgQgAUEANgJ4IAFBADoAJCABQdTErJIBNgIAIAEiAEIANwOAASABQYAIOwF8IAFBvL2skgE2AgBBkN64kgEpAwAhAwJAA0ACQCADQv//////////b4MiBEKAgICAgCB9QoCAgICAgICAIIQgBCADQoCAgICAgICA4ACDUCADQoCAgICA4P//D4NCAFJxIgEbIQQCQCABRQRAQZDeuJIBIAQgBEL//7+AgOD//79/g0KAgICAgICAgMAAhCADQhSIQv//P4NCACADQoCAgICAgICAIINQGyIFUCIBG0GQ3riSASkDACIEIAMgBFEiAhs3AwAgAkUNASABDQRBnN64kgEgBacQvQwgAA8LQZDeuJIBIARBkN64kgEpAwAiBCADIARRIgEbNwMAIAENAQsgBCEDDAELC0GY3riSAUEBEL0MCyAADwsgAUEBaiEBDAILQZjeuJIBELwMQQAhAQtBkN64kgEpAwAhA0L//////////18hBSABQQFqIQEMAAsAC38BAn8Cf0GY3biSAS0AAARAQYjeuJIBKAIADAELEPkMQZjduJIBQQE6AABBiN64kgFBoN24kgE2AgBBoN24kgELIgIoAjwiAUUEQEEADwsgACABSQRAIAIoAjQgAEECdGooAgAPC0Gx3KeSAUH/A0GTvamSASAArSABrRD4DAALFgEBfxCmCyIARQRAQQAPCyAAKAKEAQtKAQN/IAAtABxFBEAgACgCDCIBQQAgACgCECABSRsPCyAAKAIUIgEgACgCDCICIAEjAEEQayIDQQ9qSxsgAiAAKAIYIANBD2pNGwumBQIGfwN+IwBBEGsiBSIBIwRLIAEjBUlyBEAgARBJCyAB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An9BoN+4kgEpAwAhAEJ/IQIDQAJAAkACQCAAQv//v4CAgICAEINQRQRAIANB3AtNBEAgAEKAgICAgICAgCCDUEUEQEGg37iSASkDACEAIANBAWohAwwGC0Gg37iSASAAQoCAgICAgICAIIRBoN+4kgEpAwAiASAAIAFRIgQbNwMAIAEhACAEDQQMAgtBoN+4kgEgAiAAQoCAgICAIHyDQaDfuJIBKQMAIgEgACABUSIEGzcDACABIQAgBA0CDAELQaDfuJIBIAIgAEKAgICAgICAgBCEg0Gg37iSASkDACIBIAAgAVEiBBs3AwAgASEAIARFDQACQEH94LiSAS0AAA0AQf3guJIBQQE6AABB/OC4kgEQ2AsiAzoAACADRQ0AQfiTxJIBKAIABEAQ9wwACwtBoN+4kgEpAwAhAAJAA0ACQCAAQv//////////b4MiAUKAgICAgCB9QoCAgICAgICAIIQgASAAQoCAgICAgICA4ACDUCAAQoCAgICA4P//D4NCAFJxIgMbIQECQCADRQRAQaDfuJIBIAEgAUL//7+AgOD//79/g0KAgICAgICAgMAAhCAAQhSIQv//P4NCACAAQoCAgICAgICAIINQGyICUCIDG0Gg37iSASkDACIBIAAgAVEiBBs3AwAgBEUNASADDQRBrN+4kgEgAqcQvQwPC0Gg37iSASABQaDfuJIBKQMAIgEgACABUSIDGzcDACADDQELIAEhAAwBCwtBqN+4kgFBARC9DAsPCyADQQFqIQMMAgtBqN+4kgEQvAxBACEDC0Gg37iSASkDACEAQv//////////XyECIANBAWohAwwACwALtA4BEX8jAEFAaiIBIwRLIAEjBUlyBEAgARBJCyABJAAQ1QsgAUEANgI4IAFBADYCLCABQgA3AiQgAUEAOgA8IAFCADcCMCABQSRqEOcLAkACQCABLQA8RQ0AAkADQCABQgA3AhAgAUIANwIIIAFBADYCICABQgA3AhgjAEEgayIEIgAjBEsgACMFSXIEQCAAEEkLIAFBCGohCSAAJAACQAJAAkAgASgCOCIARQ0AIAEoAjAiBSAAQQR0aiEOIAlBEGohByAJQQRqIQoDQAJAAkACQCAFKAIMIgNBAkkEQCAFKAIIIQwgBSgCBCEIIAUoAgAhC0G037iSASgCACICBEAgBEEMaiAIENgMIAQg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kgEpAwAiAiABIAJRIgUbNwMAIAIhASAFRQ0AQQIhBwJAAn8gACIFQRR2QYCmrpIBai0AACIABEAgBSAFQf//P3ECf0GAAiAAQTVGDQAaIABBBHQgAEEQTQ0AGiAAQQNxQYACIABBEGtBAnZ0IgBBAnZsIABqC3BrDAELIAUQ3AoLIgRFDQACQCAEKAIAQbmtuuN8RgRAIAQoAgQiAA0BCyAEIgBBFHZBgKaukgFqLQAARQ0BCyAALQAAQf4BcUECRw0AIAAtAABBAkcNACAAQRBqIgQgBUsNACAAKAIEIARqIAVNDQBBASEHIAAtAAEiBEEMcUEMRg0AIAAgBEEMcjoAAUEAIQcLAkACQAJAAkACQCAHDgMCAQAEC0G18KmSASEEQZz3wpIBKAIADQIMAwtBu/2pkgEhBEGc98KSASgCAA0BDAILQYHwqZIBIQRBnPfCkgEoAgBFDQELIAYgBTYCACAEIAYQzQwLQaDfuJIBKQMAIQEDQAJAIAFC//////////9vgyICQoCAgICAIH1CgICAgICAgIAghCACIAFCgICAgICAgIDgAINQIAFCgICAgIDg//8Pg0IAUnEiABshAgJAIABFBEBBoN+4kgEgAiACQv//v4CA4P//v3+DQoCAgICAgICAwACEIAFCFIhC//8/g0IAIAFCgICAgICAgIAgg1AbIgNQIgAbQaDfuJIBKQMAIgIgASACUSIFGzcDACAFRQ0BIAANCEGs37iSASADpxC9DAwIC0Gg37iSASACQaDfuJIBKQMAIgIgASACUSIAGzcDACAADQELIAIhAQwBCwtBqN+4kgFBARC9DAwECyAEQQFqIQQMAgtBqN+4kgEQvAxBACEEC0Gg37iSASkDACEBQv//////////XyEDIARBAWohBAwACwALIAZBEGoiACMESyAAIwVJcgRAIAAQSQsgACQAC7sFAgN+A38jAEEQayIGIgUjBEsgBSMFSXIEQCAFEEkLIAUkAEGg37iSASkDACECQn8hBEEAIQUDQAJAAkACQCACQv//v4CAgICAEINQRQRAIAVB3AtNBEAgAkKAgICAgICAgCCDUEUEQEGg37iSASkDACECIAVBAWohBQwGC0Gg37iSASACQoCAgICAgICAIIRBoN+4kgEpAwAiAyACIANRIgcbNwMAIAMhAiAHDQQMAgtBoN+4kgEg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aiABSHJFBEAgABC0CwALIAAqAgALJQEBfyAAQQN0IQEgAEH/////AXEtAAAEQCABELULAAsgASsDAAsrAQF/IABBA3YsAAAiAkUgAEEHcSACSHJFBEAgABC3CwALIAAgAToAACABCzMBAX8gAEEBdCIAQQN2LAAAIgJFIABBB3FBAWogAkhyRQRAIAAQuAsACyAAIAE7AQAgAQszAQF/IABBAnQiAEEDdiwAACICRSAAQQdxQQNqIAJIckUEQCAAELkLAAsgACABNgIAIAELMwEBfyAAQQJ0IgBBA3YsAAAiAkUgAEEHcUEDaiACSHJFBEAgABC5CwALIAAgATgCACABCykBAX8gAEEDdCECIABB/////wFxLQAABEAgAhC6CwALIAIgATkDACABCwQAIwALGAAjBCAASSAAIwVJcgRAIAAQSQsgACQACyIAIwAgAGtBcHEiACMESyAAIwVJcgRAIAAQSQsgACQAIAALCgAgACQEIAEkBQsiAQF+IAEgAq0gA61CIIaEIAQgABETACIFQiCIpyQBIAWnCxkAIAEgAiADrSAErUIghoQgBSAGIAARLwALGQAgASACIAMgBCAFrSAGrUIghoQgABEWAAsjACABIAIgAyAEIAWtIAatQiCGhCAHrSAIrUIghoQgABEhAAslACABIAIgAyAEIAUgBq0gB61CIIaEIAitIAmtQiCGhCAAESIACxgBAX4gASACIAARGgAiA0IgiKckASADpwscACAAIAFBCCACpyACQiCIpyADpyADQiCIpxBKC1ABAX8jAEEQayIDIwRLIAMjBUlyBEAgAxBJCyADJABBABA7IAMgA0EMaiAAIAIgAUEBELELIANBEGoiACMESyAAIwVJcgRAIAAQSQsgACQAC1kBAX8jAEEQayIEIwRLIAQjBUlyBEAgBBBJCyAEJAAgBCAAKAIEKAIANgIAIAEgAiADIAQQzgwhASAEQRBqIgAjBEsgACMFSXIEQCAAEEkLIAAkACABIAJJC3ACAX8BfiMAQRBrIgMjBEsgAyMFSXIEQCADEEkLIAMkACABIANBDGoQpQwhBCAAKAIEIAQ+AgAgAygCDC0AACIABEAgAyABNgIAIAIgAxDLDAsgA0EQaiIBIwRLIAEjBUlyBEAgARBJCyABJAAgAEUL0gECAX8BfiABrSEEAkACQCABBEAgACgC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IGB4ID49IG1NaW5YYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgd2lkdGggPj0gNWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHdpZHRoID49IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3aWR0aCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBweXJhbWlkLT5zaXplKCkgPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbVN0YXJ0VGltZSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHNyY193aWR0aCUyKSA9PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0ud2lkdGgoKSA9PSBpbS5zdGVwKCkvc2l6ZW9mKGZsb2F0KWAgZmFpbGVkIGluIAAgCQoNAEVycm9yOiBtYWxsb2MKAEVycm9yIDE6IGljcEdldEluaXRYdzJYYwoAID09PSBtYXRyaXggKCVkLCVkKSA9PT0KACA9PT0gdmVjdG9yICglZCkgPT09CgA/Pz8gMQoARXJyb3I6IGxhYmVsaW5nIHdvcmsgb3ZlcmZsb3cuCgAjIyMgRmVhdHVyZSBjYW5kaWRhdGVzIGZvciB0cmFja2luZyBhcmUgb3ZlcmZsb3cuCgBhcmdsQ2FtZXJhRnJ1c3R1bVJIKCk6IGFyUGFyYW1EZWNvbXBNYXQoKSBpbmRpY2F0ZWQgcGFyYW1ldGVyIGVycm9yLgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIvcmVmSW1hZ2UuCgBTdGFydCB0cmFja2luZ190aHJlYWQgIyVkLgoAT3V0IG9mIG1lbW9yeSEhCgBEYXRhIG51bSBlcnJvciEhCgBjb2xvcjogIzY2NDQwMDsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmY5OTsgYm9yZGVyLXJhZGl1czogNHB4OyBwYWRkaW5nOiAycHgAdwAlcyVzACVzLiVzAHZlY3RvcgAvc3JjL2Vtc2NyaXB0ZW4vV2ViQVJLaXRMaWIvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9vcmllbnRhdGlvbl9hc3NpZ25tZW50LmNwcAAvc3JjL2Vtc2NyaXB0ZW4vV2ViQVJLaXRMaWIvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2ZyYW1ld29yay90aW1lcnMuY3BwAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL2hhcnJpcy5jcHAAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvRG9HX3NjYWxlX2ludmFyaWFudF9kZXRlY3Rvci5jcHAAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy9ob3VnaF9zaW1pbGFyaXR5X3ZvdGluZy5jcHAAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9mcmFtZXdvcmsvaW1hZ2UuY3BwAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL2dhdXNzaWFuX3NjYWxlX3NwYWNlX3B5cmFtaWQuY3BwAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL3B5cmFtaWQuY3BwAGluZm8ARXJyb3I6IGljcEdldEpfVV9YYwB3YgByYgBBUl9QSVhFTF9GT1JNQVRfUkdCAFBhdHRlcm4gZXh0cmFjdGlvbiBmYWlsZWQuAEFzc2VydGlvbiBgcHlyYW1pZGAgZmFpbGVkIGluIABUcmFja2luZyB0aHJlYWQgPSAlZAoAU0laRSA9ICVkLCAlZAoARXJyb3IgMjogaWNwR2V0SW5pdFh3MlhjCgA/Pz8gMgoARXJyb3I6IHVuc3VwcG9ydGVkIHBpeGVsIGZvcm1hdC4KAFVua25vd24gb3IgdW5zdXBwb3J0ZWQgbGFiZWxpbmcgdGhyZXNob2xkIG1vZGUgcmVxdWVzdGVkLiBTZXQgdG8gbWFudWFsLgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiAwIHhzaXplL3lzaXplL2RwaS4KAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIGNhbWVyYSBwYXJhbWV0ZXJzIGZpbGUgIiVzIiBmb3Igd3JpdGluZy4KAEVycm9yOiBOVUxMIHBhdHRIYW5kbGUuCgBFbmQgdHJhY2tpbmdfdGhyZWFkICMlZC4KAE91dCBvZiBtZW1vcnkhIQoAcgAvc3JjL2Vtc2NyaXB0ZW4vV2ViQVJLaXRMaWIvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2ZyZWFrLmgAd2FybmluZwAgJTEwZwAlNGQAd2IAcmIAJWPwn5qpW3dlYmFya2l0LWVycm9yOl0AQVJfUElYRUxfRk9STUFUX0JHUgBNQU5VQUwAR2VuZXJpYyBlcnJvciBkdXJpbmcgbWF0Y2hpbmcgcGhhc2UuACBsaW5lIAAlcyVzCgBGaWxlIG9wZW4gZXJyb3IuICVzCgBEaXN0b3J0aW9uIGZhY3RvcjogazE9JTEuMTBmLCBrMj0lMS4xMGYsIHAxPSUxLjEwZiwgcDI9JTEuMTBmCgBFcnJvcjogbWFsbG9jCgBFcnJvciAzOiBpY3BHZXRJbml0WHcyWGMKAEVycm9yIGljcEdldEpfVV9TCgA9PT09PT0gJXMgPT09PT09PT0KAD8/PyAzCgBFcnJvcjogY2FuJ3QgbG9hZCBwYXR0ZXJuIGZyb20gTlVMTCBidWZmZXIuCgBrcG1TZXRSZWZEYXRhU2V0KCk6IE5VTEwga3BtSGFuZGxlL2ZpbGVuYW1lLgoARXJyb3Igc2F2aW5nIGZlYXR1cmUgbWFwOiBlcnJvciB3cml0aW5nIGRhdGEuCgBPdXQgb2YgbWVtb3J5ISEKAGNvbG9yOiAjZmZmZmZmOyBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwMTAxOyBib3JkZXItcmFkaXVzOiA0cHg7IHBhZGRpbmc6IDJweABJRCBhbHJlYWR5IGV4aXN0cwBlcnJvcgBGcmVhayBmZWF0dXJlcyAtICVkAHJiAEFVVE9fTUVESUFOAEFSX1BJWEVMX0ZPUk1BVF9SR0JBAEluc3VmZmljaWVudCBjb250cmFzdCBkdXJpbmcgbWF0Y2hpbmcuACU3LjVmIAAgbGluZSAARXJyb3Igb3BlbmluZyBmaWxlICclcyc6IAAgICAgICAgICAgICAgICAgICBmeD0lZiwgZnk9JWYsIHgwPSVmLCB5MD0lZiwgcz0lZgoARXJyb3IgNDogaWNwR2V0SW5pdFh3MlhjCgBFcnJvciBpY3BHZXRVX2Zyb21fWF9ieV9NYXRYMlUKAEVycm9yIGFsbG9jYXRpbmcgbWVtb3J5LgoARXJyb3I6IG91dCBvZiBtZW1vcnkuCgBFcnJvcjogVW5hYmxlIHRvIG9wZW4gZmlsZSAnJXMnIGZvciB3cml0aW5nLgoARXJyb3I6IHVuYWJsZSB0byBvcGVuIGZpbGUgJyVzJXMnIGZvciByZWFkaW5nLgoAT3V0IG9mIG1lbW9yeSEhCgBTdGVwIHNpemUgbXVzdCBiZSBlcXVhbCB0byB3aWR0aCBmb3Igbm93ACVzAFdpZHRoIGNhbm5vdCBiZSB6ZXJvAFNvdXJjZSB3aWR0aCBtdXN0IGJlIGV2ZW4ASW1hZ2UgaXMgdG9vIHNtYWxsAHggb3V0IG9mIHJhbmdlAEJ1aWxkIFB5cmFtaWQAQ2xvY2sgaGFzIG5vdCBiZWVuIHN0YXJ0ZWQAUHlyYW1pZCBpcyBub3QgYWxsb2NhdGVkAHJiACVj4pqg77iPW3dlYmFya2l0LXdhcm46XQBBVVRPX09UU1UAQVJfUElYRUxfRk9STUFUX0JHUkEAd3AgbXVzdCBiZSBhdCBsZWFzdCAxAEJhcmNvZGUgbWF0Y2hpbmcgY291bGQgbm90IGZpbmQgY29ycmVjdCBiYXJjb2RlIGxvY2F0b3IgcGF0dGVybi4AWyVzXSAAOiAAJXMlcwoARGlzdG9ydGlvbiBmYWN0b3IgPSAlZiAlZiAlZiAlZiAlZiAlZgoARXJyb3IgNTogaWNwR2V0SW5pdFh3MlhjCgBFcnJvciBpY3BHZXRYY19mcm9tX1h3X2J5X01hdFh3MlhjCgBFcnJvciByZWFkaW5nIGltYWdlU2V0LgoARXJyb3Igd2hpbGUgYWRkaW5nIHJlZmVyZW5jZSBkYXRhIHNldDoga3BtR2VuUmVmRGF0YVNldCgpIGZhaWxlZC4KAEVycm9yIG9wZW5pbmcgJyVzJy4KAENhbid0IG9wZW4gSlBFRyBmaWxlICclcycKAE91dCBvZiBtZW1vcnkhIQoAUGF0dGVybiBEYXRhIHJlYWQgZXJyb3IhIQoAUmVhZCBlcnJvciEhCgBjb2xvcjogIzc3NDQwMDsgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmY5OTsgYm9yZGVyLXJhZGl1czogNHB4OyBwYWRkaW5nOiAycHgAJWYAd2IAQVJfUElYRUxfRk9STUFUX0FCR1IAUHlyYW1pZCBpcyBOVUxMAEFVVE9fQURBUFRJVkUAQmFyY29kZSBtYXRjaGluZyBlcnJvciBkZXRlY3Rpb24vY29ycmVjdGlvbiBmb3VuZCB1bnJlY292ZXJhYmxlIGVycm9yLgBFcnJvciBjcmVhdGluZyBmdWxsIGZpbGUgcGF0aCBmcm9tICclcycgYW5kICclcycAQXNzZXJ0aW9uIGB4IDwgbU1heFhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBoZWlnaHQgPj0gNWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGhlaWdodCA+PSAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaGVpZ2h0ID4gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1JbWFnZXMuc2l6ZSgpID4gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHggPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1TdG9wVGltZSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHN0ICE9IDBgIGZhaWxlZCBpbiAAJXMlcwoARGlzdG9ydGlvbiBmYWN0b3IgPSAlZiAlZiAlZiAlZiAlZgoARXJyb3IgPSAlZgoARXJyb3IgNjogaWNwR2V0SW5pdFh3MlhjCgAgICAgICAgICBJbWFnZVNpemUgPSAlN2RbcGl4ZWxdCgA9PT09PT09PT0gJWQgPT09PT09PT09PT0KAEltYWdlc2V0IGNvbnRhaW5zICVkIGltYWdlcy4KAEVycm9yOiBVbmFibGUgdG8gb3BlbiBmaWxlICclcycgZm9yIHJlYWRpbmcuCgBFcnJvciAoJWQpOiB1bmFibGUgdG8gb3BlbiBjYW1lcmEgcGFyYW1ldGVycyBmaWxlICIlcyIgZm9yIHJlYWRpbmcuCgBFcnJvciByZWFkaW5nIHBhdHRlcm4gZmlsZSAnJXMnLgoARXh0cmFjdCBGZWF0dXJlcwBIZWlnaHQgY2Fubm90IGJlIHplcm8AJWYgJWYgJWYgJWYAeCBtdXN0IGJlIHBvc2l0aXZlAExhcGxhY2lhbiBweXJhbWlkIGhhcyBub3QgYmVlbiBhbGxvY2F0ZWQAQ2xvY2sgaGFzIG5vdCBiZWVuIHN0b3BwZWQAQVJfUElYRUxfRk9STUFUX01PTk8ARGVzdGluYXRpb24gaXMgTlVMTABBVVRPX0JSQUNLRVRJTkcAaHAgbXVzdCBiZSBhdCBsZWFzdCAxAEVycm9yICglZCk6IHVuYWJsZSB0byBkZXRlcm1pbmUgZmlsZSBsZW5ndGguAE1hdGNoaW5nIGNvbmZpZGVuY2UgY3V0b2ZmIHZhbHVlIG5vdCByZWFjaGVkLgBBc3NlcnRpb24gYHkgPj0gbU1pbllgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbWFnZS50eXBlKCkgPT0gSU1BR0VfVUlOVDhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBzdG9yZS5zaXplKCkgPT0gcG9pbnRzLnNpemUoKWAgZmFpbGVkIGluIAAlcyVzCgBEaXN0b3J0aW9uIGZhY3RvciA9ICVmICVmICVmICVmCgBFcnJvciA3OiBpY3BHZXRJbml0WHcyWGMKAEV4dHJhY3RlZCBmZWF0dXJlcyA9ICU3ZFtwaXhlbF0KAEVycm9yIGljcDJHZXRUUwoARmFsbGluZyBiYWNrIHRvIHJlYWRpbmcgJyVzJXMnIGluIEFSVG9vbEtpdCB2NC54IGZvcm1hdC4KAEVycm9yIGluIG9wZW5pbmcgJyVzJyBpbiB6aXBmaWxlLgoARXJyb3IgcmVhZGluZyBKUEVHIGZpbGUuCgBFcnJvciB3aGlsZSBhZGRpbmcgcmVmZXJlbmNlIGRhdGEgc2V0OiBrcG1NZXJnZVJlZkRhdGFTZXQoKSBmYWlsZWQuCgBFcnJvciBzYXZpbmcgZmVhdHVyZSBzZXQ6IGVycm9yIHdyaXRpbmcgZGF0YS4KAE91dCBvZiBtZW1vcnkhIQoAQfCppZIBC4knZUhJEl9KSRK4TEkS305JEm1SSRJbJXNdIFslc10gWyVzXSA6ICVzOiAlZiBtcwBbJXNdIFslc10gWyVzXSA6IEZvdW5kICVkIGZlYXR1cmVzAEltYWdlIG11c3QgYmUgZ3JheXNjYWxlAHkgb3V0IG9mIHJhbmdlAEZlYXR1cmUgc3RvcmUgaGFzIG5vdCBiZWVuIGFsbG9jYXRlZAAlZAB3YgBBUl9QSVhFTF9GT1JNQVRfQVJHQgBNYXhpbXVtIGFsbG93YWJsZSBwb3NlIGVycm9yIGV4Y2VlZGVkLgBBc3NlcnRpb24gYHN0ZXAgPj0gd2lkdGhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpKzErY2h1bmtfc2l6ZSA8IHdpZHRoYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgcHlyYW1pZC0+bnVtT2N0YXZlcygpID4gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHNyYyAhPSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeCA8IG1HcmFkaWVudHNbb2N0YXZlKm1OdW1TY2FsZXNQZXJPY3RhdmUrc2NhbGVdLndpZHRoKClgIGZhaWxlZCBpbiAARXJyb3IgaW4gb3BlbmluZyAnJXMnIGZvciByZWFkaW5nCgAgRmlsdGVyZWQgZmVhdHVyZXMgPSAlN2RbcGl4ZWxdCgBMYWJlbGluZyB0aHJlc2hvbGQgbW9kZSBzZXQgdG8gJXMuCgBFcnJvciByZWFkaW5nIEpQRUcgZmlsZSBoZWFkZXIuCgBFcnJvcjogc3VwcGxpZWQgZmlsZSBkb2VzIG5vdCBhcHBlYXIgdG8gYmUgYW4gQVJUb29sS2l0IGNhbWVyYSBwYXJhbWV0ZXIgZmlsZS4KAGtwbURlbGV0ZVJlZkRhdGFTZXQoKTogTlVMTCByZWZEYXRhU2V0UHRyMS9yZWZEYXRhU2V0UHRyMi4KAENhbid0IHJlYWQgSlBFRyBmaWxlICclcycKAEFSX1BJWEVMX0ZPUk1BVF8ydnV5AFB5cmFtaWQgZG9lcyBub3QgY29udGFpbiBhbnkgbGV2ZWxzAFN0ZXAgbXVzdCBiZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdGhlIHdpZHRoAHggbXVzdCBiZSBsZXNzIHRoYW4gdGhlIGltYWdlIHdpZHRoAEV4dGVuZGluZyBiZXlvbmQgdGhlIHdpZHRoIG9mIHRoZSBpbWFnZQBTb3VyY2UgaXMgTlVMTABFcnJvciAoJWQpOiB1bmFibGUgdG8gcmVhZCBmcm9tIGZpbGUuAE11bHRpLW1hcmtlciBwb3NlIGVycm9yIHZhbHVlIGV4Y2VlZGVkLgANJTRkLyU0ZC4AQXNzZXJ0aW9uIGB5IDwgbU1heFlgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbWFnZS5jaGFubmVscygpID09IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBudW1fcG9pbnRzID09IHBvaW50cy5zaXplKClgIGZhaWxlZCBpbiAAJTcuNWYgACBJTkZPICAAa3BtU2V0UmVmRGF0YVNldCgpOiBOVUxMIGtwbUhhbmRsZS9yZWZEYXRhU2V0LgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIuCgBFcnJvcjogdW5hYmxlIHRvIG9wZW4gZmlsZSAnJXMnIGZvciB3cml0aW5nLgoARXJyb3I6IFVuc3VwcG9ydGVkIHBpeGVsIGZvcm1hdCAoJWQpIHJlcXVlc3RlZC4KAEVycm9yIGluIHJlYWRpbmcgJyVzJy4KAAojIyMgU3VyZmFjZSBOby4lZCAjIyMKAEJ1aWxkIEluZGV4AEFSX1BJWEVMX0ZPUk1BVF95dXZzACVzAEltYWdlIG11c3QgaGF2ZSAxIGNoYW5uZWwAU2hvdWxkIGJlIHNhbWUgc2l6ZQBSZWplY3RlZCBmcmVxdWVudGx5IG1pc3JlY29nbmlzZWQgbWF0cml4IG1hcmtlci4AQXNzZXJ0aW9uIGBidWNrZXRbMF0uZmlyc3QgPj0gYnVja2V0W25dLmZpcnN0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYW5nbGUgPiAtUElgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBjaGFubmVscyA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBzcmNfd2lkdGggPiAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHluYW1pY19jYXN0PGNvbnN0IEJpbm9taWFsUHlyYW1pZDMyZio+KHB5cmFtaWQpYCBmYWlsZWQgaW4gAGtwbVNhdmVSZWZEYXRhU2V0KCk6IE5VTEwgZmlsZW5hbWUvcmVmRGF0YVNldC4KAGtwbVNldFJlZkRhdGFTZXQoKTogcmVmRGF0YVNldC4KAEVycm9yOiBzdXBwbGllZCBidWZmZXIgZG9lcyBub3QgYXBwZWFyIHRvIGJlIEFSVG9vbEtpdCBjYW1lcmEgcGFyYW1ldGVycy4KAEVycm9yIGluIHdyaXRpbmcgJyVzJyBpbiB0aGUgemlwZmlsZS4KAEVycm9yIHNhdmluZyBpbWFnZSBzZXQ6IGVycm9yIHdyaXRpbmcgZGF0YS4KAE51bWJlciBvZiBjaGFubmVscyBjYW5ub3QgYmUgemVybwB5IG11c3QgYmUgcG9zaXRpdmUAV2lkdGggbXVzdCBiZSBwb3NpdGl2ZQBhbmdsZSBvdXQgb2YgcmFuZ2UAT25seSBiaW5vbWlhbCBweXJhbWlkIGlzIHN1cHBvcnRlZABudGhfZWxlbWVudCBmYWlsZWQAQVJfUElYRUxfRk9STUFUX1JHQl81NjUAQXNzZXJ0aW9uIGBtUHlyYW1pZC5zaXplKCkgPT0gbU51bU9jdGF2ZXMqbU51bVNjYWxlc1Blck9jdGF2ZWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHB5cmFtaWRgIGZhaWxlZCBpbiAARmllbGQtb2YtdmlldyB2ZXJ0aWNhbCA9ICUuMWYsIGhvcml6b250YWwgPSAlLjFmIGRlZ3JlZXMsIGFzcGVjdCByYXRpbyA9ICUuM2YKAE1heCBmZWF0dXJlID0gJWQKACAgUmVhZCBJbWFnZVNldC4KAEVycm9yIHNhdmluZyBLUE0gZGF0YTogdW5hYmxlIHRvIG9wZW4gZmlsZSAnJXMlcyVzJyBmb3Igd3JpdGluZy4KAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIGV4dGVybmFsIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciB3cml0aW5nLgoARXJyb3IgaW4gY2xvc2luZyAlcyBpbiB0aGUgemlwZmlsZS4KAEF1dG8gdGhyZXNob2xkIChicmFja2V0KSBtYXJrZXIgY291bnRzIC1bJTNkOiAlM2RdIFslM2Q6ICUzZF0gWyUzZDogJTNkXSsuCgBPdXQgb2YgbWVtb3J5ISEKAFB5cmFtaWQgaGFzIG5vdCBiZWVuIGFsbG9jYXRlZCB5ZXQAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy92aXN1YWxfZGF0YWJhc2UuaABBUl9QSVhFTF9GT1JNQVRfUkdCQV81NTUxAC4AQXNzZXJ0aW9uIGBwWzBdID4gcG0xWy0xXWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGFuZ2xlIDw9IFBJYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZC50eXBlKCkgPT0gSU1BR0VfRjMyYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc3JjX2hlaWdodCA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBvY3RhdmUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHkgPCBtR3JhZGllbnRzW29jdGF2ZSptTnVtU2NhbGVzUGVyT2N0YXZlK3NjYWxlXS5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1EYXRhLmdldCgpYCBmYWlsZWQgaW4gACUzZDogKCUzZCwlM2QpIDogJWYgbWluPSVmIG1heD0lZiwgc2Q9JWYKAHBhZ2UgJWQsIGltYWdlIG51bSAlZCwgcG9pbnRzIC0gJWQKAEVycm9yICglZCk6IHVuYWJsZSB0byBvcGVuIGV4dGVybmFsIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciByZWFkaW5nLgoAQXV0byB0aHJlc2hvbGQgKGJyYWNrZXQpIGFkanVzdGVkIHRocmVzaG9sZCB0byAlZC4KAEVycm9yIG9wZW5pbmcgZmlsZSAnJXMuaXNldCcuCgBFcnJvciBpbiBjbG9zaW5nICclcycuCgB5IG11c3QgYmUgbGVzcyB0aGFuIHRoZSBpbWFnZSBoZWlnaHQAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvZ2F1c3NpYW5fc2NhbGVfc3BhY2VfcHlyYW1pZC5oAEhlaWdodCBtdXN0IGJlIHBvc2l0aXZlAE9ubHkgRjMyIGltYWdlcyBzdXBwb3J0ZWQAU2hvdWxkIGJlIG1heGltYQBEYXRhIHBvaW50ZXIgaXMgTlVMTABBUl9QSVhFTF9GT1JNQVRfUkdCQV80NDQ0AEFzc2VydGlvbiBgc2NhbGUgPj0gbU1pblNjYWxlYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW1hZ2Uud2lkdGgoKSA9PSBtUHlyYW1pZFswXS53aWR0aCgpYCBmYWlsZWQgaW4gACBsaW5lIABbJSAuM2YgJSAuM2YgJSAuM2ZdIFslIDYuMWZdCgBFcnJvciAoJWQpOiB1bmFibGUgdG8gb3BlbiBvcHRpY2FsIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciB3cml0aW5nLgoAa3BtU2V0UmVmRGF0YVNldEZpbGUoKTogTlVMTCBrcG1IYW5kbGUvZmlsZW5hbWUuCgAgICAgZW5kLgoAQXV0byB0aHJlc2hvbGQgKCVzKSBhZGp1c3RlZCB0aHJlc2hvbGQgdG8gJWQuCgAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KAEFSX1BJWEVMX0ZPUk1BVF80MjB2AG1lZGlhbgBPY3RhdmUgbXVzdCBiZSBwb3NpdGl2ZQBzY2FsZSBvdXQgb2YgcmFuZ2UASW1hZ2Ugb2Ygd3Jvbmcgc2l6ZSBmb3IgcHlyYW1pZABBc3NlcnRpb24gYHBbMF0gPiBwbTFbMF1gIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTEudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABBc3NlcnRpb24gYGcuY2hhbm5lbHMoKSA9PSAyYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc3JjX3N0ZXAgPiAwYCBmYWlsZWQgaW4gADogACUzZCwgJTNkOiBtYXhfc2ltID0gJWYKACAgUmVhZCBGZWF0dXJlU2V0LgoAQ2Fubm90IGZpbmQgdGhlIHBhZ2UgZm9yIHNraXBwaW5nLgoARXJyb3IgKCVkKTogdW5hYmxlIHRvIG9wZW4gb3B0aWNhbCBwYXJhbWV0ZXJzIGZpbGUgIiVzIiBmb3IgcmVhZGluZy4KAEVycm9yIHNhdmluZyBLUE0gZGF0YTogZXJyb3Igd3JpdGluZyBkYXRhLgoAT3RzdQBBUl9QSVhFTF9GT1JNQVRfNDIwZgBTdGVwIG11c3QgYmUgcG9zaXRpdmUASW52YWxpZCBpbWFnZSB0eXBlAFB5cmFtaWQgaXMgTlVMTABOdW1iZXIgb2YgY2hhbm5lbHMgc2hvdWxkIGJlIDIA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dGVwID4gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHNjYWxlID49IDBgIGZhaWxlZCBpbiAASlBFRyBmaWxlIGhhcyB1bnN1cHBvcnRlZCAlZC1jb21wb25lbnQgcGl4ZWxzCgBFcnJvciBsb2FkaW5nIEtQTSBkYXRhOiBlcnJvciByZWFkaW5nIGRhdGEuCgBhclV0aWxHZXRQaXhlbEZvcm1hdE5hbWU6IEVycm9yLCB1bnJlY29nbmlzZWQgcGl4ZWwgZm9ybWF0ICglZCkuCgBTY2FsZSBtdXN0IGJlIHBvc2l0aXZlAFVua25vd24gaW1hZ2UgdHlwZQBBc3NlcnRpb24gYHBbMF0gPiBwcDFbLTFdYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaGlzdCAhPSBOVUxMYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHNyY193aWR0aCUyKSA9PSAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0xLmNoYW5uZWxzKCkgPT0gMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1SZWZJbWFnZVdpZHRoID4gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHB5cmFtaWQtPmltYWdlcygpLnNpemUoKSA+IDBgIGZhaWxlZCBpbiAAT3V0IG9mIG1lbW9yeS4KAGtwbUNoYW5nZVBhZ2VOb09mUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXQuCgBFcnJvciBvcGVuaW5nIGZpbGUgJyVzLm1yaycuCgBQeXJhbWlkIGlzIGVtcHR5ACUlJTAyeAB2ZWN0b3IAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvb3JpZW50YXRpb25fYXNzaWdubWVudC5oACVmICVmICVmICVmAHdpZHRoIG11c3QgYmUgcG9zaXRpdmUAVW5zdXBwb3J0ZWQgaW1hZ2UgdHlwZQBTb3VyY2Ugd2lkdGggbXVzdCBiZSBvZGQAQXNzZXJ0aW9uIGBzY2FsZSA8IG1OdW1TY2FsZXNQZXJPY3RhdmVgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBwWzBdID4gcHAxWzBdYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0yLmNoYW5uZWxzKCkgPT0gMWAgZmFpbGVkIGluIAAvcHJvYy9zZWxmL2V4ZQBTY2FsZSBtdXN0IGJlIGxlc3MgdGhhbiBudW1iZXIgb2Ygc2NhbGUgcGVyIG9jdGF2ZQBIaXN0b2dyYW0gcG9pbnRlciBpcyBOVUxMAEFzc2VydGlvbiBgcFswXSA+IHBwMVsxXWAgZmFpbGVkIGluIABBc3NlcnRpb24gYChjaHVua19zaXplJTIpPT0wYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbVJlZkltYWdlSGVpZ2h0ID4gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHB5cmFtaWQtPmltYWdlcygpWzBdLndpZHRoKCkgPT0gZGV0ZWN0b3ItPndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkLndpZHRoKCkgPT0gaW0yLndpZHRoKClgIGZhaWxlZCBpbiAAVHJhbnNmb3JtYXRpb24gbWF0cml4IHJlYWQgZXJyb3IhIQoAdmVjdG9yAEltYWdlcyBtdXN0IGhhdmUgdGhlIHNhbWUgd2lkdGgAUHlyYW1pZCBhbmQgZGV0ZWN0b3Igc2l6ZSBtaXNtYXRjaABqcGcAVW50ZXN0ZWQgYmVoYXZpb3IgZm9yIG9kZCBjaHVuayBzaXplAGhlaWdodCBtdXN0IGJlIHBvc2l0aXZlAE9jdGF2ZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGAoZmJpbiswLjVmKSA+IDAgJiYgKGZiaW4tMC41ZikgPCBudW1fYmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYCFpc2luZih1WzBdKWAgZmFpbGVkIGluIAAlcyVzCgBXaWR0aCBpcyB6ZXJvAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvaG91Z2hfc2ltaWxhcml0eV92b3RpbmcuaABEZWNpbWFsIGJpbiBwb3NpdGlvbiBpbmRleCBvdXQgb2YgcmFuZ2UAU2NhbGUgb3V0IG9mIHJhbmdlAElORgBBc3NlcnRpb24gYHB5cmFtaWQtPmltYWdlcygpWzBdLmhlaWdodCgpID09IGRldGVjdG9yLT5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGQuaGVpZ2h0KCkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEltYWdlcyBtdXN0IGhhdmUgdGhlIHNhbWUgaGVpZ2h0AC8uLi9zaGFyZS8lcwBIZWlnaHQgaXMgemVybwBBc3NlcnRpb24gYChpbnQpc3RkOjpmbG9vcih4KSA9PSAoaW50KXhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBhc3NpZ25tZW50LnNpemUoKSA9PSBudW1faW5kaWNlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGluZGV4ID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtYWduaXR1ZGUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYCFpc2luZih1WzFdKWAgZmFpbGVkIGluIABTdGVwIGlzIHplcm8AL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy9iaW5hcnlfaGllcmFyY2hpY2FsX2NsdXN0ZXJpbmcuaAAvc3JjL2Vtc2NyaXB0ZW4vV2ViQVJLaXRMaWIvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9pbnRlcnBvbGF0ZS5oAE1hZ25pdHVkZSBjYW5ub3QgYmUgbmVnYXRpdmUAaW5kZXggb3V0IG9mIHJhbmdlAEhPTUUAQXNzZXJ0aW9uIGBpbTEud2lkdGgoKSA9PSBpbTIud2lkdGgoKWAgZmFpbGVkIGluIAAvc3JjL2Vtc2NyaXB0ZW4vV2ViQVJLaXRMaWIvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9oYXJyaXMtaW5saW5lLmgAQXNzaWdubWVudCBzaXplIHdyb25nAC9wcm9jL3NlbGYvY21kbGluZQBmbG9vcigpIGFuZCBjYXN0IG5vdCB0aGUgc2FtZQBBc3NlcnRpb24gYG51bV9iaW5zID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5YID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoaT4+MSkgPCBzdGQ6OmNlaWwoKHNyY19oZWlnaHQtMSkvMi5mKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltMS5oZWlnaHQoKSA9PSBpbTIuaGVpZ2h0KClgIGZhaWxlZCBpbiAASW5kZXggaXMgb3V0IG9mIGJvdW5kcwBOdW1iZXIgYmlucyBtdXN0IGJlIHBvc2l0aXZlAGJpblggb3V0IG9mIHJhbmdlAE91dCBvZiByYW5nZQBEb0cgUHlyYW1pZAByYgBBc3NlcnRpb24gYChpbnQpc3RkOjpmbG9vcih5KSA9PSAoaW50KXlgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBhc3NpZ25tZW50W2ldICE9IC0xYCBmYWlsZWQgaW4gAE5vbi1tYXggc3VwcHJlc3Npb24AQXNzaWdubWVudCBpcyBpbnZhbGlkAEFzc2VydGlvbiBgeXAgPj0gMCAmJiB5cCA8IGhlaWdodGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblggPCBtTnVtWEJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbWFnZS50eXBlKCkgPT0gSU1BR0VfVUlOVDhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MSA+PSAwYCBmYWlsZWQgaW4gACVzOiAlcwoAeXAgb3V0IG9mIGJvdW5kcwBTdWJwaXhlbAB3MSBtdXN0IGJlIHBvc2l0aXZlAFVuYWJsZSB0byBkZXRlcm1pbmUgcHJvY2VzcyBuYW1lAE9ubHkgZ3JheSBzY2FsZSBpbWFnZXMgYXJlIHN1cHBvcnRlZABBc3NlcnRpb24gYGFzc2lnbm1lbnRbaV0gPCBudW1faW5kaWNlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblkgPj0gMGAgZmFpbGVkIGluIABwcnVuZUZlYXR1cmVzACVzJXMAQXNzaWdubWVudCBvdXQgb2YgcmFuZ2UAYmluWSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGB5cF9wbHVzXzEgPj0gMCAmJiB5cF9wbHVzXzEgPCBoZWlnaHRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBvY3RhdmUgPCBtTnVtT2N0YXZlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYHcyID49IDBgIGZhaWxlZCBpbiAARmluZCBPcmllbnRhdGlvbnMAeXBfcGx1c18xIG91dCBvZiBib3VuZHMAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvZ2F1c3NpYW5fc2NhbGVfc3BhY2VfcHlyYW1pZC5oAHcyIG11c3QgYmUgcG9zaXRpdmUAL3Zhci9jYWNoZQBBc3NlcnRpb24gYGJpblkgPCBtTnVtWUJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbmRpY2VzW2Fzc2lnbm1lbnRbaV1dIDwgbnVtX2ZlYXR1cmVzYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHN0W2ldID49IC0yNTgwNjRgIGZhaWxlZCBpbiAALy5jYWNoZQBPY3RhdmUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYjEgPj0gMCAmJiBiMSA8IG51bV9iaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeHAgPj0gMCAmJiB4cCA8IHdpZHRoYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHN0W2ldIDw9IDI1ODA2NGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpbkFuZ2xlID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpdC0+c2Vjb25kLnNpemUoKSAhPSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0wLmhlaWdodCgpID09IGltMS5oZWlnaHQoKWAgZmFpbGVkIGluIABIZWlnaHQgaXMgaW5jb25zaXN0ZW50AHhwIG91dCBvZiBib3VuZHMAJXMvJXMAQ2x1c3RlciBtdXN0IGhhdmUgYXRsZWFzZXQgMSBmZWF0dXJlAGIxIGJpbiBpbmRleCBvdXQgb2YgcmFuZ2UAYmluQW5nbGUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgc2NhbGUgPCBtTnVtU2NhbGVzUGVyT2N0YXZlYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZHN0W2ldIDw9IDQxMjkwMjRgIGZhaWxlZCBpbiAAU2NhbGUgb3V0IG9mIHJhbmdlAC92YXIvbGliAEFzc2VydGlvbiBgYjIgPj0gMCAmJiBiMiA8IG51bV9iaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluQW5nbGUgPCBtTnVtQW5nbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeHBfcGx1c18xID49IDAgJiYgeHBfcGx1c18xIDwgd2lkdGhgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3RbaV0gPj0gLTQxMjkwMjRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTAuaGVpZ2h0KCkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbUsgPT0gbUNlbnRlcnMuc2l6ZSgpYCBmYWlsZWQgaW4gAHhwX3BsdXNfMSBvdXQgb2YgYm91bmRzAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMva21lZG9pZHMuaAAvLmNvbmZpZwBiMiBiaW4gaW5kZXggb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluU2NhbGUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYChpbTEuaGVpZ2h0KCk+PjEpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIABrIHNob3VsZCBtYXRjaCB0aGUgbnVtYmVyIG9mIGNsdXN0ZXIgY2VudGVycwB2ZWN0b3IAYmluU2NhbGUgb3V0IG9mIHJhbmdlAFRNUERJUgBBc3NlcnRpb24gYGd4eCA8PSA0MTI5MDI0YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgdzAgPj0gMCAmJiB3MCA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoaW0wLmhlaWdodCgpPj4xKSA9PSBpbTEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAdmVjdG9yAC90bXAAT3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluU2NhbGUgPCBtTnVtU2NhbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbnVtX2ZlYXR1cmVzID4gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYGd4eCA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGltMC5oZWlnaHQoKT4+MSkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEVycm9yIGxvb2tpbmcgZm9yIHJlc291cmNlcyBkaXJlY3RvcnkgcGF0aABOdW1iZXIgb2YgZmVhdHVyZXMgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYHJvdyA8IG1IZWlnaHRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtQnVja2V0cy5zaXplKCkgPT0gbU51bUJ1Y2tldHNYYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZ3l5IDw9IDQxMjkwMjRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MSA+PSAwICYmIHcxIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGluZGV4IDw9IChiaW5YICsgYmluWSptTnVtWEJpbnMgKyBiaW5BbmdsZSptTnVtWEJpbnMqbU51bVlCaW5zICsgYmluU2NhbGUqbU51bVhCaW5zKm1OdW1ZQmlucyptTnVtQW5nbGVCaW5zKWAgZmFpbGVkIGluIABFcnJvciBjcmVhdGluZyByZXNvdXJjZXMgZGlyZWN0b3J5IHBhdGgAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9mcmFtZXdvcmsvaW1hZ2UuaABCdWNrZXRzIGFyZSBub3QgYWxsb2NhdGVkAEFzc2VydGlvbiBgbnVtX2luZGljZXMgPD0gbnVtX2ZlYXR1cmVzYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgdzIgPj0gMCAmJiB3MiA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBneXkgPj0gMGAgZmFpbGVkIGluIABNb3JlIGluZGljZXMgdGhhbiBmZWF0dXJlcwByb3cgb3V0IG9mIGJvdW5kcwB2ZWN0b3IAQXNzZXJ0aW9uIGBtQnVja2V0c1swXS5zaXplKCkgPT0gbU51bUJ1Y2tldHNZYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZ3h5IDw9IDQxMjkwMjRgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MyA+PSAwICYmIHczIDw9IDEuMDAwMWAgZmFpbGVkIGluIABFcnJvcjogVW5hYmxlIHRvIGNoYW5nZSB3b3JraW5nIGRpcmVjdG9yeSB0byAnJXMnLgoAQXNzZXJ0aW9uIGBtRmVhdHVyZVBvaW50cy5zaXplKCkgPD0gbU1heE51bUZlYXR1cmVQb2ludHNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBudW1faW5kaWNlcyA+PSBtS2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGd4eSA+PSAtNDEyOTAyNGAgZmFpbGVkIGluIABBc3NlcnRpb24gYCh3MCt3MSt3Mit3MykgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbiA+IDBgIGZhaWxlZCBpbiAAWyUgLjNmICUgLjNmICUgLjNmXSBbJSA2LjFmXQoAAAAAAwAAAAMAAAAEAAAABAAAAAQAAAABAAAABAAAAAIAAAACAAAAAgAAAAIAAAACAAAAAQAAAAEAAAABAAAAAAAAAAQAAACIAAAABQAAAJAAAAAGAAAAmAAAAAkAAACwAAAAGEBJEgZGSRIhSEkSQkpJEi5pc2V0AHJiAE42dmlzaW9uMjVHYXVzc2lhblNjYWxlU3BhY2VQeXJhbWlkRQAAAPAaSxKZi0kSVG9vIG1hbnkgZmVhdHVyZSBwb2ludHMATm90IGVub3VnaCBmZWF0dXJlcwB2ZWN0b3IAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci91dGlscy9wYXJ0aWFsX3NvcnQuaABBc3NlcnRpb24gYHBvcyA9PSA2NjZgIGZhaWxlZCBpbiAAQXNzaWdubWVudCBzaXplIGlzIGluY29ycmVjdABuIG11c3QgYmUgcG9zaXRpdmUAUG9zaXRpb24gaXMgbm90IHdpdGhpbiByYW5nZQBBc3NlcnRpb24gYGtwLnNjYWxlIDwgbUxhcGxhY2lhblB5cmFtaWQubnVtU2NhbGVQZXJPY3RhdmUoKWAgZmFpbGVkIGluIABGZWF0dXJlIHBvaW50IHNjYWxlIGlzIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGBudW1fY2VudGVycyA+IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBrID4gMGAgZmFpbGVkIGluIABUaGVyZSBtdXN0IGJlIGF0IGxlYXN0IDEgY2VudGVyAGsgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYGtwLnNjb3JlID09IGxhcDEuZ2V0PGZsb2F0Pih5KVt4XWAgZmFpbGVkIGluIABbJXNdIFslc10gWyVzXSA6IEZvdW5kICVkIGZlYXR1cmVzIGluIHF1ZXJ5AFNjb3JlIGlzIG5vdCBjb25zaXN0ZW50IHdpdGggdGhlIERvRyBpbWFnZQBGaW5kIE1hdGNoZXMgKDEpAEFzc2VydGlvbiBgYnVja2V0WzBdLmZpcnN0ID49IGJ1Y2tldFtuXS5maXJzdGAgZmFpbGVkIGluIABudGhfZWxlbWVudCBmYWlsZWQASG91Z2ggVm90aW5nICgxKQBGaW5kIEhvdWdoIE1hdGNoZXMgKDEpAEFzc2VydGlvbiBgb2N0YXZlIDwgbU51bU9jdGF2ZXNgIGZhaWxlZCBpbiAAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvZ2F1c3NpYW5fc2NhbGVfc3BhY2VfcHlyYW1pZC5oAEVzdGltYXRlIEhvbW9ncmFwaHkgKDEpAE9jdGF2ZSBvdXQgb2YgcmFuZ2UARmluZCBJbmxpZXJzICgxKQBGaW5kIE1hdGNoZXMgKDIpAEFzc2VydGlvbiBgc2NhbGUgPCBtTnVtU2NhbGVzUGVyT2N0YXZlYCBmYWlsZWQgaW4gAFNjYWxlIG91dCBvZiByYW5nZQBIb3VnaCBWb3RpbmcgKDIpAEZpbmQgSG91Z2ggTWF0Y2hlcyAoMikAQXNzZXJ0aW9uIGBpbmRleCA8IG1JbWFnZXMuc2l6ZSgpYCBmYWlsZWQgaW4gAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL0RvR19zY2FsZV9pbnZhcmlhbnRfZGV0ZWN0b3IuaABFc3RpbWF0ZSBIb21vZ3JhcGh5ICgyKQBJbmRleCBpcyBvdXQgb2YgcmFuZ2UARmluZCBJbmxpZXJzICgyKQBBc3NlcnRpb24gYHNjYWxlID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiZXN0X2luZGV4ICE9IHN0ZDo6bnVtZXJpY19saW1pdHM8c2l6ZV90Pjo6bWF4KClgIGZhaWxlZCBpbiAAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9tYXRjaGVycy9mZWF0dXJlX21hdGNoZXItaW5saW5lLmgAU2NhbGUgbXVzdCBiZSBwb3NpdGl2ZQBTY2FsZSBtdXN0IGJlIGxlc3MgdGhhbiBudW1iZXIgb2Ygc2NhbGUgcGVyIG9jdGF2ZQBTb21ldGhpbmcgc3RyYW5nZQBBc3NlcnRpb24gYGxhcDAuaGVpZ2h0KCkgPT0gbGFwMS5oZWlnaHQoKSA9PSBsYXAyLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbU1hdGNoZXMuc2l6ZSgpIDw9IGZlYXR1cmVzMS0+c2l6ZSgpYCBmYWlsZWQgaW4gAFdpZHRoL2hlaWdodCBhcmUgbm90IGNvbnNpc3RlbnQATnVtYmVyIG9mIG1hdGNoZXMgc2hvdWxkIGJlIGxvd2VyAEFzc2VydGlvbiBgKGxhcDAuaGVpZ2h0KCkgPT0gbGFwMS5oZWlnaHQoKSkgJiYgKChsYXAxLmhlaWdodCgpPj4xKSA9PSBsYXAyLmhlaWdodCgpKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYG1Sb290LmdldCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbWluaSAhPSAtMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYDBgIGZhaWxlZCBpbiAASW1hZ2Ugc2l6ZXMgYXJlIGluY29uc2lzdGVudABNaW5pbXVtIGluZGV4IG5vdCBzZXQAQXNzZXJ0aW9uIGAoeC0xKSA+PSAwICYmICh4KzEpIDwgbGFwMS53aWR0aCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbiA8PSBpbl9tYXRjaGVzLnNpemUoKWAgZmFpbGVkIGluIAB4IG91dCBvZiBib3VuZHMAU2hvdWxkIGJlIHRoZSBzYW1lAEFzc2VydGlvbiBgYmluWCA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHktMSkgPj0gMCAmJiAoeSsxKSA8IGxhcDEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAeSBvdXQgb2YgYm91bmRzAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvaG91Z2hfc2ltaWxhcml0eV92b3RpbmcuaABiaW5YIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGxhcDAud2lkdGgoKSA9PSBsYXAxLndpZHRoKClgIGZhaWxlZCBpbiAASW1hZ2UgZGltZW5zaW9ucyBpbmNvbnNpc3RlbnQAQXNzZXJ0aW9uIGBiaW5YIDwgbU51bVhCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluWSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgbGFwMC53aWR0aCgpID09IGxhcDIud2lkdGgoKWAgZmFpbGVkIGluIABiaW5ZIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGxhcDAuaGVpZ2h0KCkgPT0gbGFwMS5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblkgPCBtTnVtWUJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBsYXAwLmhlaWdodCgpID09IGxhcDIuaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5BbmdsZSA+PSAwYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHgtMSkgPj0gMCAmJiAoeCsxKSA8IGltLndpZHRoKClgIGZhaWxlZCBpbiAAYmluQW5nbGUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgKHktMSkgPj0gMCAmJiAoeSsxKSA8IGltLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluQW5nbGUgPCBtTnVtQW5nbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGxhcDAud2lkdGgoKT4+MSkgPT0gbGFwMi53aWR0aCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgYmluU2NhbGUgPj0gMGAgZmFpbGVkIGluIABBc3NlcnRpb24gYChsYXAwLmhlaWdodCgpPj4xKSA9PSBsYXAyLmhlaWdodCgpYCBmYWlsZWQgaW4gAGJpblNjYWxlIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYHhfZGl2XzItMC41ZiA+PSAwYCBmYWlsZWQgaW4gAHhfZGl2XzIgb3V0IG9mIGJvdW5kcyBvdXQgb2YgYm91bmRzIGZvciBpbnRlcnBvbGF0aW9uAEFzc2VydGlvbiBgYmluU2NhbGUgPCBtTnVtU2NhbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeV9kaXZfMi0wLjVmID49IDBgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkaXN0QmluQW5nbGUgPj0gMGAgZmFpbGVkIGluIAB5X2Rpdl8yIG91dCBvZiBib3VuZHMgb3V0IG9mIGJvdW5kcyBmb3IgaW50ZXJwb2xhdGlvbgBkaXN0QmluQW5nbGUgbXVzdCBub3QgYmUgbmVnYXRpdmUAQXNzZXJ0aW9uIGBoeXAuc2l6ZSgpID49IDkqbWF4X251bV9oeXBvdGhlc2VzYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeF9kaXZfMiswLjVmIDwgbGFwMi53aWR0aCgpYCBmYWlsZWQgaW4gAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvaG9tb2dyYXBoeV9lc3RpbWF0aW9uL3JvYnVzdF9ob21vZ3JhcGh5LmgAQXNzZXJ0aW9uIGB5X2Rpdl8yKzAuNWYgPCBsYXAyLmhlaWdodCgpYCBmYWlsZWQgaW4gAGh5cCB2ZWN0b3Igc2hvdWxkIGJlIG9mIHNpemUgOSptYXhfbnVtX2h5cG90aGVzZXMAQXNzZXJ0aW9uIGAobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAxLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB0bXBfaS5zaXplKCkgPj0gbnVtX3BvaW50c2AgZmFpbGVkIGluIABBc3NlcnRpb24gYChsYXAwLmhlaWdodCgpPj4xKSA9PSBsYXAxLmhlaWdodCgpYCBmYWlsZWQgaW4gAHZlY3RvcgBBc3NlcnRpb24gYGh5cF9jb3N0cy5zaXplKCkgPj0gbWF4X251bV9oeXBvdGhlc2VzYCBmYWlsZWQgaW4gAGh5cF9jb3N0cyB2ZWN0b3Igc2hvdWxkIGJlIG9mIHNpemUgbWF4X251bV9oeXBvdGhlc2VzAEFzc2VydGlvbiBgcm93IDwgbUhlaWdodGAgZmFpbGVkIGluIAAvc3JjL2Vtc2NyaXB0ZW4vV2ViQVJLaXRMaWIvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2ZyYW1ld29yay9pbWFnZS5oAEFzc2VydGlvbiBgbiA+IDBgIGZhaWxlZCBpbiAAcm93IG91dCBvZiBib3VuZHMAL3NyYy9lbXNjcmlwdGVuL1dlYkFSS2l0TGliL2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci91dGlscy9wYXJ0aWFsX3NvcnQuaABuIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGAoaW50KXN0ZDo6Zmxvb3IoeCkgPT0gKGludCl4YCBmYWlsZWQgaW4gAC9zcmMvZW1zY3JpcHRlbi9XZWJBUktpdExpYi9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL2ludGVycG9sYXRlLmgAQXNzZXJ0aW9uIGBrID4gMGAgZmFpbGVkIGluIABrIG11c3QgYmUgcG9zaXRpdmUAZmxvb3IoKSBhbmQgY2FzdCBub3QgdGhlIHNhbWUAQXNzZXJ0aW9uIGAoaW50KXN0ZDo6Zmxvb3IoeSkgPT0gKGludCl5YCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgMGAgZmFpbGVkIGluIABGYWlsZWQgdG8gY29tcHV0ZSBtYXRyaXggaW52ZXJzZQBBc3NlcnRpb24gYHlwID49IDAgJiYgeXAgPCBoZWlnaHRgIGZhaWxlZCBpbiAAeXAgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYHlwX3BsdXNfMSA+PSAwICYmIHlwX3BsdXNfMSA8IGhlaWdodGAgZmFpbGVkIGluIAB5cF9wbHVzXzEgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYHhwID49IDAgJiYgeHAgPCB3aWR0aGAgZmFpbGVkIGluIAB4cCBvdXQgb2YgYm91bmRzAEFzc2VydGlvbiBgeHBfcGx1c18xID49IDAgJiYgeHBfcGx1c18xIDwgd2lkdGhgIGZhaWxlZCBpbiAAeHBfcGx1c18xIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGB3MCA+PSAwICYmIHcwIDw9IDEuMDAwMWAgZmFpbGVkIGluIABPdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGB3MSA+PSAwICYmIHcxIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHcyID49IDAgJiYgdzIgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgdzMgPj0gMCAmJiB3MyA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAodzArdzErdzIrdzMpIDw9IDEuMDAwMWAgZmFpbGVkIGluIAAAAAAAAAAAwItJEhAAAAARAAAAAAAAADSgSRISAAAAEwAAAE42dmlzaW9uOUV4Y2VwdGlvbkUAGBtLEvSfSRIwHEsSTjZ2aXNpb24xOEJpbm9taWFsUHlyYW1pZDMyZkUAAAAYG0sSFKBJEsCLSRIAAAAACKBJEg4AAAAUAAAAFQAAALlSjD6OWuc+uVKMPgAAAAAAAAAACKFJEhYAAAAXAAAAGAAAABkAAAAaAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX3BvaW50ZXJJUE42dmlzaW9uOEtleWZyYW1lSUxpOTZFRUVOU18xMHNoYXJlZF9wdHJJUzNfRTI3X19zaGFyZWRfcHRyX2RlZmF1bHRfZGVsZXRlSVMzX1MzX0VFTlNfOWFsbG9jYXRvcklTM19FRUVFABgbSxKAoEkS6BVLEk5TdDNfXzIxMHNoYXJlZF9wdHJJTjZ2aXNpb244S2V5ZnJhbWVJTGk5NkVFRUUyN19fc2hhcmVkX3B0cl9kZWZhdWx0X2RlbGV0ZUlTM19TM19FRQBib29sIHZpc2lvbjo6VmlzdWFsRGF0YWJhc2U8dmlzaW9uOjpGUkVBS0V4dHJhY3RvciwgdmlzaW9uOjpCaW5hcnlGZWF0dXJlU3RvcmUsIHZpc2lvbjo6QmluYXJ5RmVhdHVyZU1hdGNoZXI8OTY+Pjo6cXVlcnkoY29uc3QgR2F1c3NpYW5TY2FsZVNwYWNlUHlyYW1pZCAqKSBbRkVBVFVSRV9FWFRSQUNUT1IgPSB2aXNpb246OkZSRUFLRXh0cmFjdG9yLCBTVE9SRSA9IHZpc2lvbjo6QmluYXJ5RmVhdHVyZVN0b3JlLCBNQVRDSEVSID0gdmlzaW9uOjpCaW5hcnlGZWF0dXJlTWF0Y2hlcjw5Nj5dAFJvb3QgY2Fubm90IGJlIE5VTEwAdG1wX2kgdmVjdG9yIHNob3VsZCBiZSBvZiBzaXplIG51bV9wb2ludHMAAAAAALK+uT4S3KC+kL45PhLcoL6Qvjm+AAAAgLK+ub4S3KA+kL45vhLcoD6Qvjk+0nIYvwAAAADScpi+OgYEv9JymD46BgS/0nIYPwAAAIDScpg+OgYEP9JymL46BgQ/AAAAgFa4Pb9mTSQ/Vri9vmZNJD9WuL0+AAAAAFa4PT9mTSS/Vri9PmZNJL9WuL2+DOlYPwAAAIAM6dg+mdk7Pwzp2L6Z2Ts/DOlYvwAAAAAM6di+mdk7vwzp2D6Z2Tu/AAAAAPxTbj/xZU6/DVTuPvFlTr8NVO6+AAAAgPxTbr/xZU4/DVTuvvFlTj8NVO4+AACAvwAAAAAAAAC/0LNdvwAAAD/Qs12/AACAPwAAAIAAAAA/0LNdPwAAAL/Qs10/AAAAAEikSRIWAAAAGwAAABwAAAAdAAAAHgAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9wb2ludGVySVBoMTZOdWxsQXJyYXlEZWxldGVySWhFTlNfOWFsbG9jYXRvckloRUVFRQAAAAAYG0sS/KNJEugVSxIxNk51bGxBcnJheURlbGV0ZXJJaEUAAAAAAAAA8KRJEhYAAAAfAAAAIAAAACEAAAAiAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX3BvaW50ZXJJUGhOU18xMHNoYXJlZF9wdHJJaEUyN19fc2hhcmVkX3B0cl9kZWZhdWx0X2RlbGV0ZUloaEVFTlNfOWFsbG9jYXRvckloRUVFRQAYG0sSiKRJEugVSxJOU3QzX18yMTBzaGFyZWRfcHRySWhFMjdfX3NoYXJlZF9wdHJfZGVmYXVsdF9kZWxldGVJaGhFRQB2aXNpb246OlNjb3BlZFRpbWVyOjp+U2NvcGVkVGltZXIoKQBpaWkAaWlpaQBpaWlpAEGAy6aSAQsgaW5pdCBBUlRvb2xLaXRORlQgY29uc3RydWN0b3IuLi4AQeDLppIBCyZhckZpbHRlclRyYW5zTWF0IGVycm9yIHdpdGggbWFya2VyICVkLgBBwMymkgELEVRyYWNraW5nIGxvc3QuICVkAEGAzaaSAQsaVHJhY2tlZCBwYWdlICVkIChtYXggJWQpLgoAQcDNppIBCwJpZABB4M2mkgELBWVycm9yAEGAzqaSAQsFZm91bmQAQaDOppIBCwRwdXNoAEHAzqaSAQsEcG9zZQBB4M6mkgELF0Vycm9yOiBhcjJDcmVhdGVIYW5kbGUuAEGgz6aSAQsuKioqIENhbWVyYSBQYXJhbWV0ZXIgcmVzaXplZCBmcm9tICVkLCAlZC4gKioqCgBBgNCmkgELJHNldENhbWVyYSgpOiBFcnJvcjogYXJQYXJhbUxUQ3JlYXRlLgBB4NCmkgELI3NldENhbWVyYSgpOiBFcnJvcjogYXJDcmVhdGVIYW5kbGUuAEHA0aaSAQslc2V0Q2FtZXJhKCk6IEVycm9yIGNyZWF0aW5nIDNEIGhhbmRsZQBBoNKmkgELOWxvYWRDYW1lcmEoKTogRXJyb3IgbG9hZGluZyBwYXJhbWV0ZXIgZmlsZSAlcyBmb3IgY2FtZXJhLgBBgNOmkgELG0Vycm9yIGV4Y2VlZCBtYXhpbXVtIHBhZ2VzLgBBwNOmkgELGWRhdGFzZXRQYXRobmFtZXMgc2l6ZTogJWkAQYDUppIBCxVhZGQgTkZUIG1hcmtlci0+ICclcycAQcDUppIBCxBSZWFkaW5nICVzLmZzZXQzAEGA1aaSAQsFZnNldDMAQaDVppIBCyRFcnJvciByZWFkaW5nIEtQTSBkYXRhIGZyb20gJXMuZnNldDMAQYDWppIBCxVBc3NpZ25lZCBwYWdlIG5vLiAlZC4AQcDWppIBCyJFcnJvcjoga3BtQ2hhbmdlUGFnZU5vT2ZSZWZEYXRhU2V0AEGg16aSAQsZRXJyb3I6IGtwbU1lcmdlUmVmRGF0YVNldABB4NemkgELBURvbmUuAEGA2KaSAQsPUmVhZGluZyAlcy5mc2V0AEGg2KaSAQsEZnNldABBwNimkgELH0Vycm9yIHJlYWRpbmcgZGF0YSBmcm9tICVzLmZzZXQAQYDZppIBCxhORlQgbnVtLiBvZiBJbWFnZVNldDogJWkAQcDZppIBCxRORlQgbWFya2VyIHdpZHRoOiAlaQBBgNqmkgELFU5GVCBtYXJrZXIgaGVpZ2h0OiAlaQBBwNqmkgELEk5GVCBtYXJrZXIgZHBpOiAlaQBBgNumkgELF0Vycm9yOiBrcG1TZXRSZWZEYXRhU2V0AEHA26aSAQsdTG9hZGluZyBvZiBORlQgZGF0YSBjb21wbGV0ZS4AQYDcppIBCxNUaHJlc2hvbGQgc2V0IHRvICVkAEHA3KaSAQsYVGhyZXNob2xkIG1vZGUgc2V0IHRvICVkAEGA3aaSAQsURGVidWcgbW9kZSBzZXQgdG8gJXMAQcDdppIBCwNvbi4AQeDdppIBCwRvZmYuAEGA3qaSAQsbSW1hZ2UgcHJvYy4gbW9kZSBzZXQgdG8gJWQuAEHA3qaSAQsbQWxsb2NhdGVkIHZpZGVvRnJhbWVTaXplICVkAEGA36aSAQsKU3RyaW5nTGlzdABBoN+mkgELB0ludExpc3QAQcDfppIBCwpuZnRNYXJrZXJzAEHg36aSAQsMQVJUb29sS2l0TkZUAEGA4KaSAQsMZGV0ZWN0TWFya2VyAEGg4KaSAQsPZGV0ZWN0TkZUTWFya2VyAEHA4KaSAQsMZ2V0TkZUTWFya2VyAEHg4KaSAQsKZ2V0TkZURGF0YQBBgOGmkgELCHNldHVwQVIyAEGg4aaSAQsIdGVhcmRvd24AQcDhppIBCwtfbG9hZENhbWVyYQBB4OGmkgELBXNldHVwAEGA4qaSAQsNZ2V0Q2FtZXJhTGVucwBBoOKmkgELDXBhc3NWaWRlb0RhdGEAQcDippIBCw5fYWRkTkZUTWFya2VycwBB4OKmkgELC3NldExvZ0xldmVsAEGA46aSAQsLZ2V0TG9nTGV2ZWwAQaDjppIBCxZzZXRQcm9qZWN0aW9uTmVhclBsYW5lAEHg46aSAQsWZ2V0UHJvamVjdGlvbk5lYXJQbGFuZQBBoOSmkgELFXNldFByb2plY3Rpb25GYXJQbGFuZQBB4OSmkgELFWdldFByb2plY3Rpb25GYXJQbGFuZQBBoOWmkgELEHNldFRocmVzaG9sZE1vZGUAQeDlppIBCxBnZXRUaHJlc2hvbGRNb2RlAEGg5qaSAQsMc2V0VGhyZXNob2xkAEHA5qaSAQsMZ2V0VGhyZXNob2xkAEHg5qaSAQsQc2V0SW1hZ2VQcm9jTW9kZQBBoOemkgELEGdldEltYWdlUHJvY01vZGUAQeDnppIBCwxzZXREZWJ1Z01vZGUAQYDoppIBCwxnZXREZWJ1Z01vZGUAQaDoppIBCxJnZXRQcm9jZXNzaW5nSW1hZ2UAQeDoppIBCwluZnRNYXJrZXIAQYDpppIBCwV3aWR0aABBoOmmkgELBmhlaWdodABBwOmmkgELA2RwaQBB4OmmkgELIEVSUk9SX01BUktFUl9JTkRFWF9PVVRfT0ZfQk9VTkRTAEHA6qaSAQsQQVJfREVCVUdfRElTQUJMRQBBgOumkgELD0FSX0RFQlVHX0VOQUJMRQBBoOumkgELFUFSX0RFRkFVTFRfREVCVUdfTU9ERQBB4OumkgELGkFSX0RFRkFVTFRfTEFCRUxJTkdfVEhSRVNIAEGg7KaSAQsZQVJfSU1BR0VfUFJPQ19GUkFNRV9JTUFHRQBB4OymkgELGUFSX0lNQUdFX1BST0NfRklFTERfSU1BR0UAQaDtppIBCxpBUl9ERUZBVUxUX0lNQUdFX1BST0NfTU9ERQBB4O2mkgELEUFSX01BWF9MT09QX0NPVU5UAEGg7qaSAQsUQVJfTE9PUF9CUkVBS19USFJFU0gAQeDuppIBCxJBUl9MT0dfTEVWRUxfREVCVUcAQaDvppIBCxFBUl9MT0dfTEVWRUxfSU5GTwBB4O+mkgELEUFSX0xPR19MRVZFTF9XQVJOAEGg8KaSAQsSQVJfTE9HX0xFVkVMX0VSUk9SAEHg8KaSAQsVQVJfTE9HX0xFVkVMX1JFTF9JTkZPAEGg8aaSAQseQVJfTEFCRUxJTkdfVEhSRVNIX01PREVfTUFOVUFMAEHg8aaSAQsjQVJfTEFCRUxJTkdfVEhSRVNIX01PREVfQVVUT19NRURJQU4AQcDyppIBCyFBUl9MQUJFTElOR19USFJFU0hfTU9ERV9BVVRPX09UU1UAQaDzppIBCyVBUl9MQUJFTElOR19USFJFU0hfTU9ERV9BVVRPX0FEQVBUSVZFAEGA9KaSAQsgQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX05PTkUAQeD0ppIBCy5BUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfUEFUVEVSTl9FWFRSQUNUSU9OAEHA9aaSAQspQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX01BVENIX0dFTkVSSUMAQaD2ppIBCypBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQ09OVFJBU1QAQYD3ppIBCzNBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQkFSQ09ERV9OT1RfRk9VTkQAQeD3ppIBCzJBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQkFSQ09ERV9FRENfRkFJTABBwPimkgELLEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9DT05GSURFTkNFAEGg+aaSAQsmQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX1BPU0VfRVJST1IAQYD6ppIBCyxBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfUE9TRV9FUlJPUl9NVUxUSQBB4PqmkgELPkFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9IRVVSSVNUSUNfVFJPVUJMRVNPTUVfTUFUUklYX0NPREVTAEHA+6aSAQsJcHVzaF9iYWNrAEHg+6aSAQsGcmVzaXplAEGA/KaSAQsEc2l6ZQBBoPymkgELA2dldABBwPymkgELA3NldABB4PymkgELBnZlY3RvcgBBgP2mkgELzAJOU3QzX18yNnZlY3RvcklOU18xMmJhc2ljX3N0cmluZ0ljTlNfMTFjaGFyX3RyYWl0c0ljRUVOU185YWxsb2NhdG9ySWNFRUVFTlM0X0lTNl9FRUVFAAAA8BpLEoC+SRJQTlN0M19fMjZ2ZWN0b3JJTlNfMTJiYXNpY19zdHJpbmdJY05TXzExY2hhcl90cmFpdHNJY0VFTlNfOWFsbG9jYXRvckljRUVFRU5TNF9JUzZfRUVFRQAA0BtLEuC+SRIAAAAA2L5JElBLTlN0M19fMjZ2ZWN0b3JJTlNfMTJiYXNpY19zdHJpbmdJY05TXzExY2hhcl90cmFpdHNJY0VFTlNfOWFsbG9jYXRvckljRUVFRU5TNF9JUzZfRUVFRQDQG0sSSL9JEgEAAADYvkkSaWkAdgB2aQA4v0kSAAAAAGJhc2ljX3N0cmluZwBB4P+mkgELsAEsGksSOL9JEizASRJOU3QzX18yMTJiYXNpY19zdHJpbmdJY05TXzExY2hhcl90cmFpdHNJY0VFTlNfOWFsbG9jYXRvckljRUVFRQAA8BpLEuy/SRJ2aWlpAAAAAAAAAAAsGksSOL9JErAaSxIswEkSdmlpaWkAAACwGksSoL9JEmlpaQCEwEkS2L5JErAaSxJOMTBlbXNjcmlwdGVuM3ZhbEUAAPAaSxJwwEkSaWlpaQBBoIGnkgELxAFEGksS2L5JErAaSxIswEkSaWlpaWkATlN0M19fMjZ2ZWN0b3JJaU5TXzlhbGxvY2F0b3JJaUVFRUUAAADwGksStsBJElBOU3QzX18yNnZlY3RvcklpTlNfOWFsbG9jYXRvcklpRUVFRQAAAADQG0sS5MBJEgAAAADcwEkSUEtOU3QzX18yNnZlY3RvcklpTlNfOWFsbG9jYXRvcklpRUVFRQAAANAbSxIcwUkSAQAAANzASRIMwUkSLBpLEgzBSRKMGksSAEHwgqeSAQskLBpLEgzBSRKwGksSjBpLErAaSxJEwUkShMBJEtzASRKwGksSAEGgg6eSAQuUAkQaSxLcwEkSsBpLEowaSxJOU3QzX18yNnZlY3Rvckk5bmZ0TWFya2VyTlNfOWFsbG9jYXRvcklTMV9FRUVFAADwGksSsMFJElBOU3QzX18yNnZlY3Rvckk5bmZ0TWFya2VyTlNfOWFsbG9jYXRvcklTMV9FRUVFANAbSxLowUkSAAAAAODBSRJQS05TdDNfXzI2dmVjdG9ySTluZnRNYXJrZXJOU185YWxsb2NhdG9ySVMxX0VFRUUAAAAA0BtLEijCSRIBAAAA4MFJEhjCSRIsGksSGMJJEojCSRI5bmZ0TWFya2VyAADwGksSfMJJEiwaSxIYwkkSsBpLEojCSRKwGksSXMJJEoTASRLgwUkSsBpLEgBBwIWnkgELxAFEGksS4MFJErAaSxKIwkkSMTJBUlRvb2xLaXRORlQAAPAaSxLQwkkSUDEyQVJUb29sS2l0TkZUANAbSxLowkkSAAAAAODCSRJQSzEyQVJUb29sS2l0TkZUAAAAANAbSxIIw0kSAQAAAODCSRL4wkkSjBpLEvjCSRKEwEkS+MJJEowaSxKIwkkS+MJJEowaSxKMGksS+MJJEizASRIAAAAAjBpLEvjCSRKMGksSjBpLEowaSxJpaWlpaWkAAITASRL4wkkSAEGQh6eSAQtVjBpLEvjCSRKEwEkShMBJEtzASRL4wkkS2L5JEiwaSxL4wkkSjBpLEiwaSxL4wkkS4BpLEnZpaWQAAAAA4BpLEvjCSRJkaWkAjBpLEvjCSRKMGksSaQBBgIinkgELBmxlbmd0aABBoIinkgELQE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWhFRQAA8BpLEiDESRIsGksShMBJEiwaSxLgGksSLBpLEowaSxIAQYCJp5IBC+atA3ZlcmJvc2l0eQBNaXNzaW5nIEh1ZmZtYW4gY29kZSB0YWJsZSBlbnRyeQBwcmludF9mdWxsX3RocmVhZF9oaXN0b3J5AG91dC1vZi1tZW1vcnkASW5pdGlhbGl6ZVNoYWRvd01lbW9yeQBGZWJydWFyeQBKYW51YXJ5AHByaW50X3N1bW1hcnkAbWVtY3B5AGR1bW15AEp1bHkARXhwZXJpbWVudGFsIGhlYXAgcHJvZmlsZXIsIGFzYW4tb25seQBUaHVyc2RheQBUdWVzZGF5AFdlZG5lc2RheQBTYXR1cmRheQBTdW5kYXkATW9uZGF5AEZyaWRheQBNYXkAJW0vJWQvJXkAKzB4JXp4AGxvZ19zdWZmaXgAc3RyaXBfcGF0aF9wcmVmaXgATUFYX0FMTE9DX0NIVU5LIGlzIHdyb25nLCBwbGVhc2UgZml4AEFMSUdOX1RZUEUgaXMgd3JvbmcsIHBsZWFzZSBmaXgAZXJybXNnaWR4AE5vdCBhIEpQRUcgZmlsZTogc3RhcnRzIHdpdGggMHglMDJ4IDB4JTAyeABDb3JydXB0IEpQRUcgZGF0YTogJXUgZXh0cmFuZW91cyBieXRlcyBiZWZvcmUgbWFya2VyIDB4JTAyeABVbmV4cGVjdGVkIG1hcmtlciAweCUwMngAVW5zdXBwb3J0ZWQgbWFya2VyIHR5cGUgMHglMDJ4AFVuc3VwcG9ydGVkIEpQRUcgcHJvY2VzczogU09GIHR5cGUgMHglMDJ4AERlZmluZSBIdWZmbWFuIFRhYmxlIDB4JTAyeABEZWZpbmUgQXJpdGhtZXRpYyBUYWJsZSAweCUwMng6IDB4JTAyeAAweABCb2d1cyBEQUMgdmFsdWUgMHgleABkZXRlY3RfY29udGFpbmVyX292ZXJmbG93AHNpbGVuY2VfdW5zaWduZWRfb3ZlcmZsb3cAZmxvYXQtY2FzdC1vdmVyZmxvdwBpbnRyYS1vYmplY3Qtb3ZlcmZsb3cAcG9pbnRlci1vdmVyZmxvdwBjb250YWluZXItb3ZlcmZsb3cAdW5zaWduZWQtaW50ZWdlci1vdmVyZmxvdwBoZWFwLWJ1ZmZlci1vdmVyZmxvdwBnbG9iYWwtYnVmZmVyLW92ZXJmbG93AGR5bmFtaWMtc3RhY2stYnVmZmVyLW92ZXJmbG93AGNhbGxvYy1vdmVyZmxvdwBBcHBlbmROdW1iZXIgYnVmZmVyIG92ZXJmbG93AF9fbmV4dF9wcmltZSBvdmVyZmxvdwBIdWZmbWFuIGNvZGUgc2l6ZSB0YWJsZSBvdmVyZmxvdwBJZiB0cnVlLCBob25vciB0aGUgY29udGFpbmVyIG92ZXJmbG93IGFubm90YXRpb25zLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9zYW5pdGl6ZXJzL3dpa2kvQWRkcmVzc1Nhbml0aXplckNvbnRhaW5lck92ZXJmbG93AHN0YWNrLWJ1ZmZlci11bmRlcmZsb3cAbm9faHVnZV9wYWdlc19mb3Jfc2hhZG93AGxvdyBzaGFkb3cAaGlnaCBzaGFkb3cAb3BlcmF0b3IgbmV3AHNhbmNvdgBOb3YAc3RyaXBfZW52AGhhbmRsZV9zZWd2ACVzLiVzLiV6dQBUaHUAICAgICAgICAlNHUgJTR1ICU0dSAlNHUgJTR1ICU0dSAlNHUgJTR1AEpQRUcgcGFyYW1ldGVyIHN0cnVjdCBtaXNtYXRjaDogbGlicmFyeSB0aGlua3Mgc2l6ZSBpcyAldSwgY2FsbGVyIGV4cGVjdHMgJXUARGVmaW5lIFJlc3RhcnQgSW50ZXJ2YWwgJXUAV2FybmluZzogdGh1bWJuYWlsIGltYWdlIHNpemUgZG9lcyBub3QgbWF0Y2ggZGF0YSBsZW5ndGggJXUATWlzY2VsbGFuZW91cyBtYXJrZXIgMHglMDJ4LCBsZW5ndGggJXUASkZJRiBleHRlbnNpb24gbWFya2VyOiB0eXBlIDB4JTAyeCwgbGVuZ3RoICV1AEpGSUYgZXh0ZW5zaW9uIG1hcmtlcjogcGFsZXR0ZSB0aHVtYm5haWwgaW1hZ2UsIGxlbmd0aCAldQBKRklGIGV4dGVuc2lvbiBtYXJrZXI6IEpQRUctY29tcHJlc3NlZCB0aHVtYm5haWwgaW1hZ2UsIGxlbmd0aCAldQBKRklGIGV4dGVuc2lvbiBtYXJrZXI6IFJHQiB0aHVtYm5haWwgaW1hZ2UsIGxlbmd0aCAldQBVbmtub3duIEFQUDE0IG1hcmtlciAobm90IEFkb2JlKSwgbGVuZ3RoICV1AFVua25vd24gQVBQMCBtYXJrZXIgKG5vdCBKRklGKSwgbGVuZ3RoICV1AE9idGFpbmVkIFhNUyBoYW5kbGUgJXUARnJlZWQgWE1TIGhhbmRsZSAldQBPYnRhaW5lZCBFTVMgaGFuZGxlICV1AEZyZWVkIEVNUyBoYW5kbGUgJXUAdW5zdXBwb3J0ZWQgbG9jYWxlIGZvciBzdGFuZGFyZCBpbnB1dABzdGRvdXQAY292XzhiaXRfY291bnRlcnNfb3V0AGNvdl9wY3Nfb3V0AEF1Z3VzdABJbnZhbGlkIGNyb3AgcmVxdWVzdABVbnN1cHBvcnRlZCBjb2xvciBjb252ZXJzaW9uIHJlcXVlc3QAaW52YWxpZC1vYmpjLWNhc3QAaHRtbF9jb3ZfcmVwb3J0AENyYXNoIHRoZSBwcm9ncmFtIGFmdGVyIHByaW50aW5nIHRoZSBmaXJzdCBlcnJvciByZXBvcnQASW5jbHVkZSBmdWxsIHN0YWNrdHJhY2UgaW50byBhbiBlcnJvciByZXBvcnQAdW5zaWduZWQgc2hvcnQAaGFuZGxlX2Fib3J0AEphdmFTY3JpcHQAY29tcHJlc3Nfc3RhY2tfZGVwb3QAc2xvdAB1bnNpZ25lZCBpbnQAc2hpZnQtZXhwb25lbnQAaW52YWxpZC1hbGxvY2F0aW9uLWFsaWdubWVudABpbnZhbGlkLXBvc2l4LW1lbWFsaWduLWFsaWdubWVudABDb3JydXB0IEpQRUcgZGF0YTogcHJlbWF0dXJlIGVuZCBvZiBkYXRhIHNlZ21lbnQAZGVmYXVsdABhdGV4aXQAbGVha19jaGVja19hdF9leGl0AHVubWFwX3NoYWRvd19vbl9leGl0AHNsZWVwX2FmdGVyX2luaXQAc2xlZXBfYmVmb3JlX2luaXQAdHpzZXQuZG9uZV9pbml0AGFmdGVyIGluaXQAYmVmb3JlIGluaXQAJXAgaXMgbG9jYXRlZCAlemQgYnl0ZXMgdG8gdGhlIHJpZ2h0ACVwIGlzIGxvY2F0ZWQgJXpkIGJ5dGVzIHRvIHRoZSBsZWZ0AEZyYWN0aW9uYWwgc2FtcGxpbmcgbm90IGltcGxlbWVudGVkIHlldABDQ0lSNjAxIHNhbXBsaW5nIG5vdCBpbXBsZW1lbnRlZCB5ZXQATm90IGltcGxlbWVudGVkIHlldABzdGQ6Ol9fMjo6cGllY2V3aXNlX2NvbnN0cnVjdABJbmRpcmVjdABEaXJlY3QAT2N0AGludGVyY2VwdF9zdGF0AGZsb2F0AHN0YWNrX3RyYWNlX2Zvcm1hdABTYXQAdWludDY0X3QAYWx3YXlzAHBhcnRpYWxseSBvdmVyZmxvd3MAcGFydGlhbGx5IHVuZGVyZmxvd3MAaGFuZGxlX3NpZ2J1cwBpbmNsdWRlX2lmX2V4aXN0cwBDYW5ub3QgcXVhbnRpemUgbW9yZSB0aGFuICVkIGNvbG9yIGNvbXBvbmVudHMAU3RhcnQgT2YgU2NhbjogJWQgY29tcG9uZW50cwB4ZGlnaXRzAHJlcG9ydF9vYmplY3RzAHByaW50X3N0YXRzAHByaW50X3NjYXJpbmVzcwBzaGFkb3ctYWNjZXNzAEJvZ3VzIHZpcnR1YWwgYXJyYXkgYWNjZXNzAHZlcmlmeV9pbnRlcmNlcHRvcnMAQm9ndXMgc2FtcGxpbmcgZmFjdG9ycwB3aW5kb3dzX2hvb2tfcnRsX2FsbG9jYXRvcnMAUXVhbnRpemluZyB0byAlZCA9ICVkKiVkKiVkIGNvbG9ycwBRdWFudGl6aW5nIHRvICVkIGNvbG9ycwBDYW5ub3QgcXVhbnRpemUgdG8gZmV3ZXIgdGhhbiAlZCBjb2xvcnMAQ2Fubm90IHF1YW50aXplIHRvIG1vcmUgdGhhbiAlZCBjb2xvcnMAZGV0ZWN0X2ludmFsaWRfcG9pbnRlcl9wYWlycwBkdW1wX3JlZ2lzdGVycwB1c2VfcmVnaXN0ZXJzAFJvb3Qgc2V0OiBpbmNsdWRlIHRocmVhZCByZWdpc3RlcnMAbG9nX3BvaW50ZXJzAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogdHdvIFNPSSBtYXJrZXJzAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogdHdvIFNPRiBtYXJrZXJzAGVudnZhcnMAZGVjb3JhdGVfcHJvY19tYXBzAFNtb290aGluZyBub3Qgc3VwcG9ydGVkIHdpdGggbm9uc3RhbmRhcmQgc2FtcGxpbmcgcmF0aW9zAF9fc2lnX2FjdGlvbnMAdXNlX2xkX2FsbG9jYXRpb25zAHByaW50X3N1cHByZXNzaW9ucwB1c2Vfcm9vdF9yZWdpb25zAGNhbWVyYVBhcmFtcwBhbGxvY2F0b3JfcmVsZWFzZV90b19vc19pbnRlcnZhbF9tcwB1c2VfdGxzAExpbWl0IHRoZSBhbW91bnQgb2YgbW1hcC1lZCBtZW1vcnkgKGV4Y2x1ZGluZyBzaGFkb3cpIGluIE1iOyBub3QgYSB1c2VyLWZhY2luZyBmbGFnLCB1c2VkIG1vc2x5IGZvciB0ZXN0aW5nIHRoZSB0b29scwBNYXhpbXVtIHN1cHBvcnRlZCBpbWFnZSBkaW1lbnNpb24gaXMgJXUgcGl4ZWxzAHJlcG9ydF9nbG9iYWxzAHVzZV9nbG9iYWxzAGRldGVjdF9kZWFkbG9ja3MAc3RyaWN0X3N0cmluZ19jaGVja3MAdXNlX3N0YWNrcwBSb290IHNldDogaW5jbHVkZSB0aHJlYWQgc3RhY2tzAG1heF9sZWFrcwBkZXRlY3RfbGVha3MAbWFwcGluZ3MASWYgPj0yLCBkZXRlY3QgdmlvbGF0aW9uIG9mIE9uZS1EZWZpbml0aW9uLVJ1bGUgKE9EUik7IElmID09MSwgZGV0ZWN0IE9EUi12aW9sYXRpb24gb25seSBpZiB0aGUgdHdvIHZhcmlhYmxlcyBoYXZlIGRpZmZlcmVudCBzaXplcwB5ZXMAc3lzY29uZi52YWx1ZXMAZHVtcF9pbnN0cnVjdGlvbl9ieXRlcwAlemQgYnl0ZXMAc3RhdGVzAEFwcGxpY2F0aW9uIHRyYW5zZmVycmVkIHRvbyBtYW55IHNjYW5saW5lcwBBcHBsaWNhdGlvbiB0cmFuc2ZlcnJlZCB0b28gZmV3IHNjYW5saW5lcwBzeW1ib2xpemVfaW5saW5lX2ZyYW1lcwBJZiBzZXQsIGRlY29yYXRlIHNhbml0aXplciBtYXBwaW5ncyBpbiAvcHJvYy9zZWxmL21hcHMgd2l0aCB1c2VyLXJlYWRhYmxlIG5hbWVzAHRsc19lbnRyaWVzAGZhci1mcm9tLWJvdW5kcwBsb2dfdGhyZWFkcwBzdXBwcmVzc19lcXVhbF9wY3MAYXJtdjdzAGRlY2Zsb2F0LnAxMHMAJXMlcyV4JXglcyVzAD09JXMAOiVzACVzLyVzLiV6ZC4lcwAoJXMAJXM6IGdsb2JhbCAnJXMnIGF0ICVzAGluICVzAEZhaWxlZCB0byBjcmVhdGUgdGVtcG9yYXJ5IGZpbGUgJXMAQ2xvc2VkIHRlbXBvcmFyeSBmaWxlICVzAE9wZW5lZCB0ZW1wb3JhcnkgZmlsZSAlcwBBZGRyZXNzICVwIGlzIGxvY2F0ZWQgaW4gc3RhY2sgb2YgdGhyZWFkICVzAFRocmVhZCAlcwBTVU1NQVJZOiAlczogJXMAaW50ZXJjZXB0X3N0cnN0cgBlcnJtc2dzdHIAcmVwbGFjZV9zdHIALnN0cgB2cHRyAF9fYXRleGl0X2xvY2twdHIAX19zdGRpb19vZmxfbG9ja3B0cgBfX2xvY2FsZV9sb2NrcHRyAHN0ZGVycgBBcHIAdmVjdG9yAEludGVybmFsTW1hcFZlY3RvcgBTaXplQ2xhc3NBbGxvY2F0b3IATGFyZ2VNbWFwQWxsb2NhdG9yAGFib3J0X29uX2Vycm9yAGhhbHRfb25fZXJyb3IAT3ZlcnJpZGUgdGhlIHByb2dyYW0gZXhpdCBzdGF0dXMgaWYgdGhlIHRvb2wgZm91bmQgYW4gZXJyb3IASW5wdXQgZmlsZSByZWFkIGVycm9yAGNvbG9yAGNvdmVyYWdlX2RpcgBpbnRlcmNlcHRfc3RyY2hyAEFkZHJlc3NTYW5pdGl6ZXIAYmFkLV9fc2FuaXRpemVyX2Fubm90YXRlX2NvbnRpZ3VvdXNfY29udGFpbmVyAGFsbG93X3VzZXJfc2Vndl9oYW5kbGVyAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogbWlzc2luZyBTT1MgbWFya2VyAFJlYWRGaWxlVG9CdWZmZXIAQXBwZW5kVG9FcnJvck1lc3NhZ2VCdWZmZXIAc3RyaWN0X2luaXRfb3JkZXIAY2hlY2tfaW5pdGlhbGl6YXRpb25fb3JkZXIAdmVyaWZ5X2FzYW5fbGlua19vcmRlcgBPY3RvYmVyAE5vdmVtYmVyAFNlcHRlbWJlcgBEZWNlbWJlcgBpbnRlcmNlcHRfdGxzX2dldF9hZGRyADEgMTYgNCAxMyBmdW5jdGlvbi5hZGRyADIgMTYgOCAxMCBBcmcxLmJ5dmFsIDQ4IDggMTkgbWVtYmVyRnVuY3Rpb24uYWRkcgAxIDE2IDQgMTAgZmllbGQuYWRkcgB1bnNpZ25lZCBjaGFyAGlvc19iYXNlOjpjbGVhcgBNYXIAVW5yZWNvZ25pemVkIGNvbXBvbmVudCBJRHMgJWQgJWQgJWQsIGFzc3VtaW5nIFlDYkNyAGludGVyY2VwdF9zdHJuZHVwAFZpcnR1YWwgYXJyYXkgY29udHJvbGxlciBtZXNzZWQgdXAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfdGhyZWFkX3JlZ2lzdHJ5LmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9hc2FuL2FzYW5fbWFsbG9jX2xpbnV4LmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9wb3NpeC5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvYXNhbi9hc2FuX3Bvc2l4LmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9tdXRleC5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfY292ZXJhZ2VfbGliY2RlcF9uZXcuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl9yZXBvcnQuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVyX3N0YWNrZGVwb3QuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl9zdGF0cy5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvYXNhbi9hc2FuX2Vycm9ycy5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvYXNhbi9hc2FuX2Rlc2NyaXB0aW9ucy5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfc3VwcHJlc3Npb25zLmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9hc2FuL2FzYW5fc3VwcHJlc3Npb25zLmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9hc2FuL2FzYW5fZ2xvYmFscy5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfZmxhZ3MuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl9mbGFncy5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvYXNhbi9hc2FuX2ludGVyY2VwdG9yc19tZW1pbnRyaW5zaWNzLmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9hbGxvY2F0b3IuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl9hbGxvY2F0b3IuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVyX3N0YWNrdHJhY2VfcHJpbnRlci5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfZmxhZ19wYXJzZXIuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVyX3N5bWJvbGl6ZXJfbGliY2RlcC5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfc3RhY2t0cmFjZV9saWJjZGVwLmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9jb21tb24uY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2xzYW4vbHNhbl9jb21tb24uY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl9hY3RpdmF0aW9uLmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9lbXNjcmlwdGVuLmNwcAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9hc2FuL2FzYW5fZW1zY3JpcHRlbi5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvYXNhbi9hc2FuX3J0bC5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvYXNhbi9hc2FuX2Zha2Vfc3RhY2suY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl9wb2lzb25pbmcuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL3Vic2FuL3Vic2FuX2RpYWcuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVyX3ByaW50Zi5jcHAAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfc3RhY2tfc3RvcmUuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl90aHJlYWQuY3BwAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVyX2xpYmMuY3BwAHVzZV9tYWR2X2RvbnRkdW1wAGRpc2FibGVfY29yZWR1bXAAMSAxNiAxMiA3IGFnZy50bXAAaW50ZXJjZXB0X3N0cmNtcABpbnRlcmNlcHRfbWVtY21wAHN0cmljdF9tZW1jbXAAaGVscABTZXAAaGFuZGxlX3NpZ3RyYXAAdGVzdF9vbmx5X2VtdWxhdGVfbm9fbWVtb3J5bWFwAHByaW50X21vZHVsZV9tYXAAJXMtcGFyYW0tb3ZlcmxhcABwcm90ZWN0X3NoYWRvd19nYXAASWYgc2V0LCBtcHJvdGVjdCB0aGUgc2hhZG93IGdhcABwb2lzb25faGVhcABfX2h3Y2FwAFR3b0xldmVsTWFwAERlbnNlTWFwAHN0cnRvay5wACVJOiVNOiVTICVwAGF1dG8AYWxsb2NhdG9yX2ZyZWVzX2FuZF9yZXR1cm5zX251bGxfb25fcmVhbGxvY196ZXJvAGZsb2F0LWRpdmlkZS1ieS16ZXJvAGludGVnZXItZGl2aWRlLWJ5LXplcm8Abm8AZW1wdHlfbW8AYXRhbmxvAGluaXRpYWxpemF0aW9uLW9yZGVyLWZpYXNjbwBTdW4ASnVuAGRldGVjdF9zdGFja191c2VfYWZ0ZXJfcmV0dXJuAG51bGxhYmlsaXR5LXJldHVybgBzdGFjay11c2UtYWZ0ZXItcmV0dXJuAGludGVyY2VwdF9zdHJzcG4AdXNlLWFmdGVyLXBvaXNvbgBfX2Vudmlyb24AcmVzb2x1dGlvbgBzdGQ6OmV4Y2VwdGlvbgBCb2d1cyBIdWZmbWFuIHRhYmxlIGRlZmluaXRpb24AZnVuY3Rpb24AU2VsZWN0ZWQgJWQgY29sb3JzIGZvciBxdWFudGl6YXRpb24ASW1hZ2UgdG9vIHdpZGUgZm9yIHRoaXMgaW1wbGVtZW50YXRpb24AZGV0ZWN0X29kcl92aW9sYXRpb24Ab2RyLXZpb2xhdGlvbgBpbXBsaWNpdC11bnNpZ25lZC1pbnRlZ2VyLXRydW5jYXRpb24AaW1wbGljaXQtc2lnbmVkLWludGVnZXItdHJ1bmNhdGlvbgBoZXhhZ29uAE1vbgBidWlsdGluAGludGVyY2VwdF9pbnRyaW4AcmVwbGFjZV9pbnRyaW4Ac3RkaW4AbnVsbGFiaWxpdHktYXNzaWduAENhbm5vdCBkdW1wIG1lbW9yeSBtYXAgb24gZW1zY3JpcHRlbgBpbnRlcmNlcHRfc3RybGVuAHN3aXRjaC50YWJsZS5fX2Zsb2F0c2NhbgBEaWRuJ3QgZXhwZWN0IG1vcmUgdGhhbiBvbmUgc2NhbgBTYW1wbGluZyBmYWN0b3JzIHRvbyBsYXJnZSBmb3IgaW50ZXJsZWF2ZWQgc2NhbgBKYW4AZW51bQBjYW5fdXNlX3Byb2NfbWFwc19zdGF0bQBsb2NhbHRpbWUudG0AaW50ZXJjZXB0X21lbW1lbQBuZWdhdGl2ZS1zaXplLXBhcmFtABtbMW0bWzM2bQAbWzFtG1szNW0AG1sxbRtbMzRtABtbMW0bWzMzbQAbWzFtG1szMm0AG1sxbRtbMzFtABtbMW0bWzBtAEp1bABoYW5kbGVfaW9jdGwAYm9vbABTYW5pdGl6ZXJUb29sAGFsbG9jYXRvcl9tYXlfcmV0dXJuX251bGwAaGFuZGxlX3NpZ2lsbABCdWZmZXIgcGFzc2VkIHRvIEpQRUcgbGlicmFyeSBpcyB0b28gc21hbGwAQXByaWwAZW1zY3JpcHRlbjo6dmFsAGZhc3RfdW53aW5kX29uX2ZhdGFsAG1icmxlbi5pbnRlcm5hbABwb2lzb25fcGFydGlhbABpbnRlcmNlcHRfc3RycGJyawBpbnRlcmNlcHRfc3RydG9rAGluaXRfamsAb2ZsX2xvY2sAX19sb2NhbGVfbG9jawB0enNldC5sb2NrAGZhc3RfdW53aW5kX29uX2NoZWNrAHVzZV9zaWdhbHRzdGFjawBGYWtlU3RhY2sAU3RhY2tTdG9yZVVucGFjawBTdGFja1N0b3JlUGFjawBhcm12N2sARnJpAGF0YW5oaQBjZmkAYmFkX2FycmF5X25ld19sZW5ndGgAZGVkdXBfdG9rZW5fbGVuZ3RoAEJvZ3VzIG1hcmtlciBsZW5ndGgAc2FuY292X3BhdGgAZXh0ZXJuYWxfc3ltYm9saXplcl9wYXRoAGxvZ19wYXRoAGRlY2Zsb2F0LnRoAHVua25vd24tY3Jhc2gAbmV3X2RlbGV0ZV90eXBlX21pc21hdGNoAGFsbG9jX2RlYWxsb2NfbWlzbWF0Y2gAbmV3LWRlbGV0ZS10eXBlLW1pc21hdGNoAGFsbG9jLWRlYWxsb2MtbWlzbWF0Y2gAU2VhcmNoAE1hcmNoAHg4Nl82NGgAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfYWxsb2NhdG9yX3NlY29uZGFyeS5oAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVyX211dGV4LmgAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfbHp3LmgAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfbGlzdC5oAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL2FzYW4vYXNhbl9lcnJvcnMuaAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9hc2FuL2FzYW5fZGVzY3JpcHRpb25zLmgAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfZGVuc2VfbWFwLmgAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfY29tbW9uLmgAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvc2FuaXRpemVyX2NvbW1vbi9zYW5pdGl6ZXJfYWxsb2NhdG9yX2Rsc3ltLmgAL2Vtc2RrL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9jb21waWxlci1ydC9saWIvYXNhbi9hc2FuX21hcHBpbmcuaAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9zdGFja2RlcG90YmFzZS5oAC9lbXNkay9lbXNjcmlwdGVuL3N5c3RlbS9saWIvY29tcGlsZXItcnQvbGliL3Nhbml0aXplcl9jb21tb24vc2FuaXRpemVyX3F1YXJhbnRpbmUuaAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9hbGxvY2F0b3JfbG9jYWxfY2FjaGUuaAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9zdG9wdGhld29ybGQuaAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9hbGxvY2F0b3JfY29tYmluZWQuaAAvZW1zZGsvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2NvbXBpbGVyLXJ0L2xpYi9zYW5pdGl6ZXJfY29tbW9uL3Nhbml0aXplcl9hbGxvY2F0b3JfcHJpbWFyeTMyLmgAZGVidWcAQXVnAG51bGxhYmlsaXR5LWFyZwBsb2dfdG9fc3lzbG9nAG1heF91YXJfc3RhY2tfc2l6ZV9sb2cAbWluX3Vhcl9zdGFja19zaXplX2xvZwB1bnNpZ25lZCBsb25nAHNsZWVwX2JlZm9yZV9keWluZwBiZWZvcmUgZHlpbmcAc3RkOjp3c3RyaW5nAGJhc2ljX3N0cmluZwBzdGQ6OnN0cmluZwBzdGQ6OnUxNnN0cmluZwBzdGQ6OnUzMnN0cmluZwB1bnRlcm1pbmF0ZWQgc3RyaW5nAGFsbG93X3VzZXJfcG9pc29uaW5nAERlYnVnIGxvZ2dpbmcAQ29weXJpZ2h0IChDKSAyMDE4LCBUaG9tYXMgRy4gTGFuZSwgR3VpZG8gVm9sbGJlZGluZwBhbGxvY2F0aW9uLXNpemUtdG9vLWJpZwBidWYAY2hlY2tfcHJpbnRmACVwIGlzIGxvY2F0ZWQgJXpkIGJ5dGVzIHRvIHRoZSByaWdodCBvZgAlcCBpcyBsb2NhdGVkICV6ZCBieXRlcyB0byB0aGUgbGVmdCBvZgAlcCBpcyBsb2NhdGVkICV6ZCBieXRlcyBpbnNpZGUgb2YAJS4wTGYAJUxmAHN3aXRjaC50YWJsZS5hdGFuMmYAX19jb25zdC5fX3NtYWxsX3ZzbnByaW50Zi5mAF9fY29uc3QudnNuaXByaW50Zi5mAG1hbGxvY19jb250ZXh0X3NpemUAbWF4X2ZyZWVfZmlsbF9zaXplAG1heF9tYWxsb2NfZmlsbF9zaXplAHF1YXJhbnRpbmVfc2l6ZQBjaGVja19tYWxsb2NfdXNhYmxlX3NpemUAb2JqZWN0LXNpemUAc3ltYm9saXplAHVhcl9ub3Jlc2VydmUAYWxsb2NhdGUgbm9yZXNlcnZlAGV4Y2x1c2l2ZQB0cnVlAFR1ZQBmcmVlX2ZpbGxfYnl0ZQBtYWxsb2NfZmlsbF9ieXRlAG11bHRpLWJ5dGUAPy1ieXRlAHJldHVybnMtbm9ubnVsbC1hdHRyaWJ1dGUAd3JpdGUAb3BlcmF0b3IgZGVsZXRlAG1icnRvd2MuaW50ZXJuYWxfc3RhdGUAQ3JlYXRlAGFsbG9jYXRlAEFsbG9jYXRlAGludmFsaWQtYnVpbHRpbi11c2UAZmFsc2UAc2hpZnQtYmFzZQBTdGFja1N0b3JlAFN1c3BlbnNpb24gbm90IGFsbG93ZWQgaGVyZQByZXBvcnRfZXJyb3JfdHlwZQBzdGFjay11c2UtYWZ0ZXItc2NvcGUAaGFuZGxlX3NpZ2ZwZQBKdW5lAG1heF9yZWR6b25lAGRlZmF1bHRfbG9jYWxlX2luaXRfZG9uZQBwcmludF9jbWRsaW5lAGFsbG93X2FkZHIybGluZQBSZXF1ZXN0ZWQgZmVhdHVyZSB3YXMgb21pdHRlZCBhdCBjb21waWxlIHRpbWUAbG9nX2V4ZV9uYW1lAHN5bWJvbGl6ZV92c19zdHlsZQBoZWFwX3Byb2ZpbGUAU2VlayBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUAUmVhZCBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUARW1wdHkgaW5wdXQgZmlsZQBQcmVtYXR1cmUgZW5kIG9mIGlucHV0IGZpbGUAcmVhZCBtb3JlIG9wdGlvbnMgZnJvbSB0aGUgZ2l2ZW4gZmlsZQBQcmVtYXR1cmUgZW5kIG9mIEpQRUcgZmlsZQBkZW1hbmdsZQBkb3VibGUAcHRhYmxlAHVucmVhY2hhYmxlAHJlYWRhYmxlAGRlZmF1bHRfbG9jYWxlAGRlZmF1bHRfY3R5cGVfbG9jYWxlAF9fY19sb2NhbGUAX19jX2RvdF91dGY4X2xvY2FsZQBwb2lzb25fYXJyYXlfY29va2llAERDVCBjb2VmZmljaWVudCBvdXQgb2YgcmFuZ2UAaW1wbGljaXQtc2lnbmVkLWludGVnZXItdHJ1bmNhdGlvbixpbXBsaWNpdC1pbnRlZ2VyLXNpZ24tY2hhbmdlAEludmFsaWQgY29sb3IgcXVhbnRpemF0aW9uIG1vZGUgY2hhbmdlAF9fZXJybm9fc3RvcmFnZQBSb290IHNldDogaW5jbHVkZSBUTFMgYW5kIHRocmVhZC1zcGVjaWZpYyBzdG9yYWdlAGNvdmVyYWdlAEpQRUcgZGF0YXN0cmVhbSBjb250YWlucyBubyBpbWFnZQAgICAgd2l0aCAlZCB4ICVkIHRodW1ibmFpbCBpbWFnZQBTdGFydCBvZiBJbWFnZQBFbmQgT2YgSW1hZ2UAaGVhcC11c2UtYWZ0ZXItZnJlZQBkb3VibGUtZnJlZQBiYWQtZnJlZQBpbmNsdWRlAEZsYWdIYW5kbGVySW5jbHVkZQBCb2d1cyBidWZmZXIgY29udHJvbCBtb2RlAGV4aXRjb2RlAENvcnJ1cHQgSlBFRyBkYXRhOiBiYWQgSHVmZm1hbiBjb2RlAENvcnJ1cHQgSlBFRyBkYXRhOiBiYWQgYXJpdGhtZXRpYyBjb2RlAGlzIGluc2lkZQAlcCBpcyBsb2NhdGVkICV6ZCBieXRlcyBpbnNpZGUASWYgdHJ1ZSwgdHJpZ2dlcnMgd2FybmluZyB3aGVuIHdyaXRhYmxlLWV4ZWN1dGFibGUgcGFnZXMgcmVxdWVzdHMgYXJlIGJlaW5nIG1hZGUAbnVsbC1wb2ludGVyLWRlcmVmZXJlbmNlAEVtQmluZEluaXRfY29uc3RhbnRfYmluZGluZ3NfaW5zdGFuY2UAcHJpbnRfc3RhY2t0cmFjZQBCb2d1cyBpbnB1dCBjb2xvcnNwYWNlAEJvZ3VzIEpQRUcgY29sb3JzcGFjZQBmdWxsX2FkZHJlc3Nfc3BhY2UAdmxhLWJvdW5kAGxlZ2FjeV9wdGhyZWFkX2NvbmQAaW50ZXJjZXB0X3NlbmQAcHJpbnRfbGVnZW5kAGNsZWFyX3NoYWRvd19tbWFwX3RocmVzaG9sZAB2b2lkAFNhbml0aXplIGNvbXBsZXRlIGFkZHJlc3Mgc3BhY2U7IGJ5IGRlZmF1bHQga2VybmVsIGFyZWEgb24gMzItYml0IHBsYXRmb3JtcyB3aWxsIG5vdCBiZSBzYW5pdGl6ZWQAUmVtb3ZlZABCYWNraW5nIHN0b3JlIG5vdCBzdXBwb3J0ZWQARENUIHNjYWxlZCBibG9jayBzaXplICVkeCVkIG5vdCBzdXBwb3J0ZWQAc3RhcnRfZGVhY3RpdmF0ZWQASWYgc2V0IGNoZWNrIHRoYXQgc3RyaW5nIGFyZ3VtZW50cyBhcmUgcHJvcGVybHkgbnVsbC10ZXJtaW5hdGVkACBUcnVuY2F0ZWQAdGxzX2tleV91c2VkAF9fc3Rkb3V0X3VzZWQAX19zdGRlcnJfdXNlZABfX3N0ZGluX3VzZWQAdXNlX3BvaXNvbmVkAHVuZGVmaW5lZABRdWFudGl6YXRpb24gdGFibGUgMHglMDJ4IHdhcyBub3QgZGVmaW5lZABIdWZmbWFuIHRhYmxlIDB4JTAyeCB3YXMgbm90IGRlZmluZWQAQXJpdGhtZXRpYyB0YWJsZSAweCUwMnggd2FzIG5vdCBkZWZpbmVkAHVzZV91bmFsaWduZWQAZGVmYXVsdC1hbGlnbmVkAFdyaXRlIHRvIFhNUyBmYWlsZWQAUmVhZCBmcm9tIFhNUyBmYWlsZWQAV3JpdGUgdG8gRU1TIGZhaWxlZABSZWFkIGZyb20gRU1TIGZhaWxlZABIYXJkIFJTUyBsaW1pdCBpbiBNYi4gSWYgbm9uLXplcm8sIGEgYmFja2dyb3VuZCB0aHJlYWQgaXMgc3Bhd25lZCBhdCBzdGFydHVwIHdoaWNoIHBlcmlvZGljYWxseSByZWFkcyBSU1MgYW5kIGFib3J0cyB0aGUgcHJvY2VzcyBpZiB0aGUgbGltaXQgaXMgcmVhY2hlZABzZWVkAHJzcy1saW1pdC1leGNlZWRlZABBZGRlZABXZWQAX19tYWluX3B0aHJlYWQAb2ZsX2hlYWQAX19nZXRfbG9jYWxlLmxvY19oZWFkACAgICAgICAgJTNkICUzZCAlM2QgJTNkICUzZCAlM2QgJTNkICUzZABXYXJuaW5nOiB1bmtub3duIEpGSUYgcmV2aXNpb24gbnVtYmVyICVkLiUwMmQAQ29ycnVwdCBKUEVHIGRhdGE6IGZvdW5kIG1hcmtlciAweCUwMnggaW5zdGVhZCBvZiBSU1QlZABTdGFydCBPZiBGcmFtZSAweCUwMng6IHdpZHRoPSV1LCBoZWlnaHQ9JXUsIGNvbXBvbmVudHM9JWQAICAgIENvbXBvbmVudCAlZDogJWRoeCVkdiBxPSVkAEludmFsaWQgcHJvZ3Jlc3NpdmUgcGFyYW1ldGVycyBTcz0lZCBTZT0lZCBBaD0lZCBBbD0lZAAgIFNzPSVkLCBTZT0lZCwgQWg9JWQsIEFsPSVkACAgICBDb21wb25lbnQgJWQ6IGRjPSVkIGFjPSVkACVzOiVkACwlZAAlcyglZABJbnZhbGlkIHByb2dyZXNzaXZlIHBhcmFtZXRlcnMgYXQgc2NhbiBzY3JpcHQgZW50cnkgJWQASW52YWxpZCBzY2FuIHNjcmlwdCBhdCBlbnRyeSAlZABCb2d1cyBEUVQgaW5kZXggJWQAQm9ndXMgREhUIGluZGV4ICVkAEJvZ3VzIERBQyBpbmRleCAlZABUb28gbWFueSBjb2xvciBjb21wb25lbnRzOiAlZCwgbWF4ICVkAEluY29uc2lzdGVudCBwcm9ncmVzc2lvbiBzZXF1ZW5jZSBmb3IgY29tcG9uZW50ICVkIGNvZWZmaWNpZW50ICVkAFdyb25nIEpQRUcgbGlicmFyeSB2ZXJzaW9uOiBsaWJyYXJ5IGlzICVkLCBjYWxsZXIgZXhwZWN0cyAlZABBdCBtYXJrZXIgMHglMDJ4LCByZWNvdmVyeSBhY3Rpb24gJWQAVW5zdXBwb3J0ZWQgSlBFRyBkYXRhIHByZWNpc2lvbiAlZABEZWZpbmUgUXVhbnRpemF0aW9uIFRhYmxlICVkICBwcmVjaXNpb24gJWQAQWRvYmUgQVBQMTQgbWFya2VyOiB2ZXJzaW9uICVkLCBmbGFncyAweCUwNHggMHglMDR4LCB0cmFuc2Zvcm0gJWQASW1wcm9wZXIgY2FsbCB0byBKUEVHIGxpYnJhcnkgaW4gc3RhdGUgJWQAQ2Fubm90IHRyYW5zY29kZSBkdWUgdG8gbXVsdGlwbGUgdXNlIG9mIHF1YW50aXphdGlvbiB0YWJsZSAlZABVbmtub3duIEFkb2JlIGNvbG9yIHRyYW5zZm9ybSBjb2RlICVkAEludmFsaWQgbWVtb3J5IHBvb2wgY29kZSAlZABCb2d1cyBtZXNzYWdlIGNvZGUgJWQASkZJRiBBUFAwIG1hcmtlcjogdmVyc2lvbiAlZC4lMDJkLCBkZW5zaXR5ICVkeCVkICAlZABmYXN0X3Vud2luZF9vbl9tYWxsb2MAc3RkOjpiYWRfYWxsb2MAZGV0ZWN0X3dyaXRlX2V4ZWMARGVjAF9fbGliYwAlbGQlYwBDb21wb25lbnQgaW5kZXggJWQ6IG1pc21hdGNoaW5nIHNhbXBsaW5nIHJhdGlvICVkOiVkLCAlZDolZCwgJWMAc29mdF9yc3NfbGltaXRfbWIAaGFyZF9yc3NfbGltaXRfbWIAbW1hcF9saW1pdF9tYgBtYXhfYWxsb2NhdGlvbl9zaXplX21iAHF1YXJhbnRpbmVfc2l6ZV9tYgB0aHJlYWRfbG9jYWxfcXVhcmFudGluZV9zaXplX2tiAEZlYgBfX2xvZ2ZfZGF0YQBfX2V4cDJmX2RhdGEAX19wb3dmX2xvZzJfZGF0YQBTY2FuIHNjcmlwdCBkb2VzIG5vdCB0cmFuc21pdCBhbGwgZGF0YQBvcGVyYXRvciBuZXcgW10Ab3BlcmF0b3IgZGVsZXRlIFtdAFsAJWEgJWIgJWQgJUg6JU06JVMgJVkASWYgdHJ1ZSwgZHVtcCAxNiBieXRlcyBzdGFydGluZyBhdCB0aGUgaW5zdHJ1Y3Rpb24gdGhhdCBjYXVzZWQgU0VHVgBBQlJUAFJPT1QAREVGQVVMVABCVVMAQUNDRVNTAEludmFsaWQgY29tcG9uZW50IElEICVkIGluIFNPUwBBU0FOX0FDVElWQVRJT05fT1BUSU9OUwBUTFMATUFSS0VSX0lOREVYX09VVF9PRl9CT1VORFMAJUg6JU06JVMAVFJBUABIRUFQAFVOS05PV04AUE0ASlBFR01FTQBBTQBJTEwAVU5LTk9XTiBTSUdOQUwAR0xPQkFMAFNUQUNLAEludmFsaWQgU09TIHBhcmFtZXRlcnMgZm9yIHNlcXVlbnRpYWwgSlBFRwBDYXV0aW9uOiBxdWFudGl6YXRpb24gdGFibGVzIGFyZSB0b28gY29hcnNlIGZvciBiYXNlbGluZSBKUEVHAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogJXMgYmVmb3JlIFNPRgAlTCAlRgBXUklURQBGUEUAX19zdGRvdXRfRklMRQBfX3N0ZGVycl9GSUxFAF9fc3RkaW5fRklMRQBnQVJDb250cm9sbGVySUQAZ0NhbWVyYUlEAElOVkFMSUQAUkVBRABDAE91dHB1dCBmaWxlIHdyaXRlIGVycm9yIC0tLSBvdXQgb2YgZGlzayBzcGFjZT8AV3JpdGUgZmFpbGVkIG9uIHRlbXBvcmFyeSBmaWxlIC0tLSBvdXQgb2YgZGlzayBzcGFjZT8AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZmxvYXQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQ4X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQzMl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQzMl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBjaGFyPgBzdGQ6OmJhc2ljX3N0cmluZzx1bnNpZ25lZCBjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaWduZWQgY2hhcj4APG51bGw+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGxvbmc+ADx1bmtub3duIG1vZHVsZT4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZG91YmxlPgA9PgA9PSVkPT0AJXMlcDoAMSAxNiAzMiA5IGJ5dGVzZXQ6OQAxIDE2IDggOCBrX3JsaW06OQAuc3RyLjk5ADAxMjM0NTY3ODkALnN0ci44OQAuc3RyLjc5ADEgMTYgMjAgOCBfX3Y6MTU2OQAuc3RyLjY5AC5zdHIuNTkAMSAxNiA0IDExIHJlZi50bXA6NDQ5ADEgMTYgMTIgMTEgcmVmLnRtcDo0NDkALnN0ci40OQA0IDE2IDUwNCA3IGJpZzoyMzIgNTkyIDQgNiBlMjoyMzUgNjA4IDIyIDcgYnVmOjIzNiA2NzIgMTIgOSBlYnVmMDoyMzkALnN0ci4zOQAuc3RyLjI5ADEgMTYgNCA1IGFwOjE5AC5zdHIuMTkALnN0ci4xMDkALnN0ci45AF9fZnNtdTgAX19jX2RvdF91dGY4ADEgMTYgMTQ0IDMgZjo4ADEgMTYgMSAzIGM6OAAyIDE2IDQgNyBhcC5hZGRyIDMyIDQgNSBhcDI6OAAuc3RyLjk4AC5zdHIuODgAMSAxNiAyMCA4IF9fdjoxMDc4AC5zdHIuNzgALnN0ci42OAAxIDE2IDQgMTMgdGhyZXNob2xkOjQ1OAAuc3RyLjU4ADIgMTYgNCA3IGFwLmFkZHIgMzIgNCA2IGFwMjo0OAAuc3RyLjQ4AC5zdHIuMzgAMSAxNiA4IDQgeToyOAAxIDE2IDEyIDEwIHJlZi50bXA6MjgALnN0ci4yOAAyIDE2IDQgMTYgZW52aXJvbl9jb3VudDoxNyAzMiA0IDE5IGVudmlyb25fYnVmX3NpemU6MTgANSAxNiA0IDcgYXAuYWRkciAzMiA0IDcgYXAyOjcxNSA0OCA0MCAxMSBubF90eXBlOjcxNiAxMjggODAgMTAgbmxfYXJnOjcxNyAyNDAgODAgMTYgaW50ZXJuYWxfYnVmOjcxOAA5YyAgMTQtSmFuLTIwMTgALnN0ci4xOAA1NSAxNiA4IDIyIGluZGlyZWN0LWFyZy10ZW1wLmkyODYgNDggOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMjgwIDgwIDggMjIgaW5kaXJlY3QtYXJnLXRlbXAuaTI3NCAxMTIgOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMjY4IDE0NCA4IDIyIGluZGlyZWN0LWFyZy10ZW1wLmkyNjIgMTc2IDggMjIgaW5kaXJlY3QtYXJnLXRlbXAuaTI1NiAyMDggOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMjUwIDI0MCA4IDIyIGluZGlyZWN0LWFyZy10ZW1wLmkyNDQgMjcyIDggMjIgaW5kaXJlY3QtYXJnLXRlbXAuaTIzOCAzMDQgOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMjMyIDMzNiA4IDIyIGluZGlyZWN0LWFyZy10ZW1wLmkyMjYgMzY4IDggMjIgaW5kaXJlY3QtYXJnLXRlbXAuaTIyMCA0MDAgOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMjE0IDQzMiA4IDIyIGluZGlyZWN0LWFyZy10ZW1wLmkyMDggNDY0IDggMjIgaW5kaXJlY3QtYXJnLXRlbXAuaTIwMiA0OTYgOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMTk2IDUyOCA4IDIyIGluZGlyZWN0LWFyZy10ZW1wLmkxOTAgNTYwIDggMjIgaW5kaXJlY3QtYXJnLXRlbXAuaTE4NCA1OTIgOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMTc4IDYyNCA4IDIyIGluZGlyZWN0LWFyZy10ZW1wLmkxNzIgNjU2IDggMjIgaW5kaXJlY3QtYXJnLXRlbXAuaTE2NiA2ODggOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMTYwIDcyMCA4IDIyIGluZGlyZWN0LWFyZy10ZW1wLmkxNTQgNzUyIDggMjIgaW5kaXJlY3QtYXJnLXRlbXAuaTE0OCA3ODQgOCAyMiBpbmRpcmVjdC1hcmctdGVtcC5pMTQyIDgxNiA4IDE5IGluZGlyZWN0LWFyZy10ZW1wLmkgODQ4IDEgMTIgcmVmLnRtcDU1OjQ4IDg2NCA0IDEyIHJlZi50bXA2Mjo1OCA4ODAgNCAxMiByZWYudG1wNjM6NTkgODk2IDQgMTIgcmVmLnRtcDY0OjYwIDkxMiA0IDEy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czJkMToyMDAALnN0ci4xMDAAL3Byb2MvAFRhcmdldCBkaXJlY3RvcnkgZm9yIGNvdmVyYWdlIGR1bXBzLiBEZWZhdWx0cyB0byB0aGUgY3VycmVudCBkaXJlY3RvcnkuAElmIGZhbHNlLCB0aGUgYWxsb2NhdG9yIHdpbGwgY3Jhc2ggaW5zdGVhZCBvZiByZXR1cm5pbmcgMCBvbiBvdXQtb2YtbWVtb3J5LgBEaXNhYmxlIGNvcmUgZHVtcGluZy4gQnkgZGVmYXVsdCwgZGlzYWJsZV9jb3JlZHVtcD0xIG9uIDY0LWJpdCB0byBhdm9pZCBkdW1waW5nIGEgMTZUKyBjb3JlIGZpbGUuIElnbm9yZWQgb24gT1NlcyB0aGF0IGRvbid0IGR1bXAgY29yZSBieSBkZWZhdWx0IGFuZCBmb3Igc2FuaXRpemVycyB0aGF0IGRvbid0IHJlc2VydmUgbG90cyBvZiB2aXJ0dWFsIG1lbW9yeS4AQ29tcHJlc3Mgc3RhY2sgZGVwb3QgdG8gc2F2ZSBtZW1vcnkuAFZhbHVlIHVzZWQgdG8gZmlsbCBkZWFsbG9jYXRlZCBtZW1vcnkuAFZhbHVlIHVzZWQgdG8gZmlsbCB0aGUgbmV3bHkgYWxsb2NhdGVkIG1lbW9yeS4AUHJpbnQgc3BlY2lmaWMgZXJyb3IgdHlwZSBpbnN0ZWFkIG9mICd1bmRlZmluZWQtYmVoYXZpb3InIGluIHN1bW1hcnkuAElmIHNldCwgcHJpbnRzIEFTYW4gZXhpdCBzdGF0cyBldmVuIGFmdGVyIHByb2dyYW0gdGVybWluYXRlcyBzdWNjZXNzZnVsbHkuAElmIHRydWUsIGR1bXAgdmFsdWVzIG9mIENQVSByZWdpc3RlcnMgd2hlbiBTRUdWIGhhcHBlbnMuIE9ubHkgYXZhaWxhYmxlIG9uIE9TIFggZm9yIG5vdy4AU29mdCBSU1MgbGltaXQgaW4gTWIuIElmIG5vbi16ZXJvLCBhIGJhY2tncm91bmQgdGhyZWFkIGlzIHNwYXduZWQgYXQgc3RhcnR1cCB3aGljaCBwZXJpb2RpY2FsbHkgcmVhZHMgUlNTLiBJZiB0aGUgbGltaXQgaXMgcmVhY2hlZCBhbGwgc3Vic2VxdWVudCBtYWxsb2MvbmV3IGNhbGxzIHdpbGwgZmFpbCBvciByZXR1cm4gTlVMTCAoZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiBhbGxvY2F0b3JfbWF5X3JldHVybl9udWxsKSB1bnRpbCB0aGUgUlNTIGdvZXMgYmVsb3cgdGhlIHNvZnQgbGltaXQuIFRoaXMgbGltaXQgZG9lcyBub3QgYWZmZWN0IG1lbW9yeSBhbGxvY2F0aW9ucyBvdGhlciB0aGFuIG1hbGxvYy9uZXcuAElmIHNldCwgdGhlIHRvb2wgY2FsbHMgYWJvcnQoKSBpbnN0ZWFkIG9mIF9leGl0KCkgYWZ0ZXIgcHJpbnRpbmcgdGhlIGVycm9yIHJlcG9ydC4AUHJpbnQgYWRkcmVzc2VzIG9mIGxlYWtlZCBvYmplY3RzIGFmdGVyIG1haW4gbGVhayByZXBvcnQuAEdlbmVyYXRlIGh0bWwgY292ZXJhZ2UgcmVwb3J0LgBJZiBzZXQsIGV4cGxpY2l0bHkgdW5tYXBzIHRoZSAoaHVnZSkgc2hhZG93IGF0IGV4aXQuAFByaW50IG1hdGNoZWQgc3VwcHJlc3Npb25zIGF0IGV4aXQuAFdBUk5JTkc6IHN0cmxlbiBpbnRlcmNlcHRvciBpcyBlbmFibGVkIGV2ZW4gdGhvdWdoIHJlcGxhY2Vfc3RyPTAuIFVzZSBpbnRlcmNlcHRfc3RybGVuPTAgdG8gZGlzYWJsZSBpdC4ARm9ybWF0IHN0cmluZyB1c2VkIHRvIHJlbmRlciBzdGFjayBmcmFtZXMuIFNlZSBzYW5pdGl6ZXJfc3RhY2t0cmFjZV9wcmludGVyLmggZm9yIHRoZSBmb3JtYXQgZGVzY3JpcHRpb24uIFVzZSBERUZBVUxUIHRvIGdldCBkZWZhdWx0IGZvcm1hdC4ASW50ZXJjZXB0IGFuZCBoYW5kbGUgaW9jdGwgcmVxdWVzdHMuAElmIGZhbHNlLCBkaXNhYmxlIHByaW50aW5nIGVycm9yIHN1bW1hcmllcyBpbiBhZGRpdGlvbiB0byBlcnJvciByZXBvcnRzLgBTdHJpcHMgdGhpcyBwcmVmaXggZnJvbSBmaWxlIHBhdGhzIGluIGVycm9yIHJlcG9ydHMuAENoZWNrIHByaW50ZiBhcmd1bWVudHMuAE1heGltYWwgc2l6ZSAoaW4gYnl0ZXMpIG9mIHJlZHpvbmVzIGFyb3VuZCBoZWFwIG9iamVjdHMuAElmIGF2YWlsYWJsZSwgdXNlIHRoZSBmYXN0IGZyYW1lLXBvaW50ZXItYmFzZWQgdW53aW5kZXIgb24gZmF0YWwgZXJyb3JzLgBJZiBzZXQsIHVzZXMgY3VzdG9tIHdyYXBwZXJzIGZvciAqc3RhdCBmdW5jdGlvbnMgdG8gZmluZCBtb3JlIGVycm9ycy4ASWYgc2V0LCB1c2VzIGN1c3RvbSB3cmFwcGVycyBmb3Igc3Ryc3RyIGFuZCBzdHJjYXNlc3RyIGZ1bmN0aW9ucyB0byBmaW5kIG1vcmUgZXJyb3JzLgBJZiBzZXQsIHVzZXMgY3VzdG9tIHdyYXBwZXJzIGZvciBzdHJjaHIsIHN0cmNocm51bCwgYW5kIHN0cnJjaHIgZnVuY3Rpb25zIHRvIGZpbmQgbW9yZSBlcnJvcnMuAElmIHNldCwgdXNlcyBjdXN0b20gd3JhcHBlcnMgZm9yIHN0cm5kdXAgZnVuY3Rpb25zIHRvIGZpbmQgbW9yZSBlcnJvcnMuAElmIHNldCwgdXNlcyBjdXN0b20gd3JhcHBlcnMgZm9yIHN0cmNtcCBmdW5jdGlvbnMgdG8gZmluZCBtb3JlIGVycm9ycy4ASWYgc2V0LCB1c2VzIGN1c3RvbSB3cmFwcGVycyBmb3Igc3RybGVuIGFuZCBzdHJubGVuIGZ1bmN0aW9ucyB0byBmaW5kIG1vcmUgZXJyb3JzLgBJZiBzZXQsIHVzZXMgY3VzdG9tIHdyYXBwZXJzIGFuZCByZXBsYWNlbWVudHMgZm9yIGxpYmMgc3RyaW5nIGZ1bmN0aW9ucyB0byBmaW5kIG1vcmUgZXJyb3JzLgBJZiBzZXQsIHVzZXMgY3VzdG9tIHdyYXBwZXJzIGZvciBzZW5kKiBmdW5jdGlvbnMgdG8gZmluZCBtb3JlIGVycm9ycy4ASWYgc2V0LCB1c2VzIGN1c3RvbSB3cmFwcGVycyBmb3IgbWVtc2V0L21lbWNweS9tZW1tb3ZlIGludHJpbnNpY3MgdG8gZmluZCBtb3JlIGVycm9ycy4ASWYgc2V0LCB1c2VzIGN1c3RvbSB3cmFwcGVycyBmb3IgbWVtY21wIGZ1bmN0aW9uIHRvIGZpbmQgbW9yZSBlcnJvcnMuAElmIHNldCwgdXNlcyBjdXN0b20gd3JhcHBlcnMgZm9yIHN0cnNwbiBhbmQgc3RyY3NwbiBmdW5jdGlvbiB0byBmaW5kIG1vcmUgZXJyb3JzLgBJZiBzZXQsIHVzZXMgY3VzdG9tIHdyYXBwZXJzIGZvciBzdHJwYnJrIGZ1bmN0aW9uIHRvIGZpbmQgbW9yZSBlcnJvcnMuAElmIHNldCwgdXNlcyBhIGN1c3RvbSB3cmFwcGVyIGZvciB0aGUgc3RydG9rIGZ1bmN0aW9uIHRvIGZpbmQgbW9yZSBlcnJvcnMuAElmIHNldCwgdXNlcyBhIHdyYXBwZXIgZm9yIG1lbW1lbSgpIHRvIGZpbmQgbW9yZSBlcnJvcnMuAElmIGZhbHNlLCBkbyBub3QgYXR0ZW1wdCB0byByZWFkIC9wcm9jL21hcHMvc3RhdG0uIE1vc3RseSB1c2VmdWwgZm9yIHRlc3Rpbmcgc2FuaXRpemVycy4ASWYgdHJ1ZSwgcG9pc29uIHBhcnRpYWxseSBhZGRyZXNzYWJsZSA4LWJ5dGUgYWxpZ25lZCB3b3JkcyAoZGVmYXVsdD10cnVlKS4gVGhpcyBmbGFnIGFmZmVjdHMgaGVhcCBhbmQgZ2xvYmFsIGJ1ZmZlcnMsIGJ1dCBub3Qgc3RhY2sgYnVmZmVycy4AUHJpbnQgdGhlIGZsYWcgZGVzY3JpcHRpb25zLgBJZiBzZXQsIHVzZSB0aGUgb25saW5lIHN5bWJvbGl6ZXIgZnJvbSBjb21tb24gc2FuaXRpemVyIHJ1bnRpbWUgdG8gdHVybiB2aXJ0dWFsIGFkZHJlc3NlcyB0byBmaWxlL2xpbmUgbG9jYXRpb25zLgBQcmludCBkZW1hbmdsZWQgc3ltYm9scy4ASWYgc2V0LCBwcmludHMgc29tZSBkZWJ1Z2dpbmcgaW5mb3JtYXRpb24gYW5kIGRvZXMgYWRkaXRpb25hbCBjaGVja3MuAFJlcnVuIHdpdGggJXp1IHN1cHByZXNzZWQgc3RhY2tzLgBEbyBub3QgcHJpbnQgbm9uLWZhdGFsIGVycm9yIHJlcG9ydHMgZm9yIHVuc2lnbmVkIGludGVnZXIgb3ZlcmZsb3cuIFVzZWQgdG8gcHJvdmlkZSBmdXp6aW5nIHNpZ25hbCB3aXRob3V0IGJsb3dpbmcgdXAgbG9ncy4AU2l6ZSAoaW4gTWIpIG9mIHF1YXJhbnRpbmUgdXNlZCB0byBkZXRlY3QgdXNlLWFmdGVyLWZyZWUgZXJyb3JzLiBMb3dlciB2YWx1ZSBtYXkgcmVkdWNlIG1lbW9yeSB1c2FnZSBidXQgaW5jcmVhc2UgdGhlIGNoYW5jZSBvZiBmYWxzZSBuZWdhdGl2ZXMuAElmIHNldCwgYXR0ZW1wdHMgdG8gY2F0Y2ggaW5pdGlhbGl6YXRpb24gb3JkZXIgaXNzdWVzLgBQcmludCB0aGUgbGVnZW5kIGZvciB0aGUgc2hhZG93IGJ5dGVzLgBMYXJnZSBzaGFkb3cgcmVnaW9ucyBhcmUgemVyby1maWxsZWQgdXNpbmcgbW1hcChOT1JFU0VSVkUpIGluc3RlYWQgb2YgbWVtc2V0KCkuIFRoaXMgaXMgdGhlIHRocmVzaG9sZCBzaXplIGluIGJ5dGVzLgBJZiBhdmFpbGFibGUsIHVzZSB0aGUgZmFzdCBmcmFtZS1wb2ludGVyLWJhc2VkIHVud2luZGVyIG9uIGludGVybmFsIENIRUNLIGZhaWx1cmVzLgBJZiBzZXQsIHVzZXMgY3VzdG9tIHdyYXBwZXJzIGZvciBtZW1zZXQvbWVtY3B5L21lbW1vdmUgaW50cmluc2ljcy4AUG9pc29uIChvciBub3QpIHRoZSBoZWFwIG1lbW9yeSBvbiBbZGVdYWxsb2NhdGlvbi4gWmVybyB2YWx1ZSBpcyB1c2VmdWwgZm9yIGJlbmNobWFya2luZyB0aGUgYWxsb2NhdG9yIG9yIGluc3RydW1lbnRhdG9yLgBQYXRoIHRvIGV4dGVybmFsIHN5bWJvbGl6ZXIuIElmIGVtcHR5LCB0aGUgdG9vbCB3aWxsIHNlYXJjaCAkUEFUSCBmb3IgdGhlIHN5bWJvbGl6ZXIuAEludGVyY2VwdCBfX3Rsc19nZXRfYWRkci4AKFdpbmRvd3Mgb25seSkgZW5hYmxlIGhvb2tpbmcgb2YgUnRsKEFsbG9jYXRlfEZyZWV8U2l6ZXxSZUFsbG9jYXRlKUhlYXAuAE1pbmltYWwgc2l6ZSAoaW4gYnl0ZXMpIG9mIHJlZHpvbmVzIGFyb3VuZCBoZWFwIG9iamVjdHMuIFJlcXVpcmVtZW50OiByZWR6b25lID49IDE2LCBpcyBhIHBvd2VyIG9mIHR3by4ASW52b2tlIGxlYWsgY2hlY2tpbmcgaW4gYW4gYXRleGl0IGhhbmRsZXIuIEhhcyBubyBlZmZlY3QgaWYgZGV0ZWN0X2xlYWtzPWZhbHNlLCBvciBpZiBfX2xzYW5fZG9fbGVha19jaGVjaygpIGlzIGNhbGxlZCBiZWZvcmUgdGhlIGhhbmRsZXIgaGFzIGEgY2hhbmNlIHRvIHJ1bi4ARW5hYmxlIG1lbW9yeSBsZWFrIGRldGVjdGlvbi4ATWF4IG51bWJlciBvZiBzdGFjayBmcmFtZXMga2VwdCBmb3IgZWFjaCBhbGxvY2F0aW9uL2RlYWxsb2NhdGlvbi4AU2FuY292IHRvb2wgbG9jYXRpb24uAFdBUk5JTkc6IHN0cmNociogaW50ZXJjZXB0b3JzIGFyZSBlbmFibGVkIGV2ZW4gdGhvdWdoIHJlcGxhY2Vfc3RyPTAuIFVzZSBpbnRlcmNlcHRfc3RyY2hyPTAgdG8gZGlzYWJsZSB0aGVtLgBXQVJOSU5HOiBzdHJuZHVwKiBpbnRlcmNlcHRvcnMgYXJlIGVuYWJsZWQgZXZlbiB0aG91Z2ggcmVwbGFjZV9zdHI9MC4gVXNlIGludGVyY2VwdF9zdHJuZHVwPTAgdG8gZGlzYWJsZSB0aGVtLgBJZiA+PSAyLCBkZXRlY3Qgb3BlcmF0aW9ucyBsaWtlIDwsIDw9LCA+LCA+PSBhbmQgLSBvbiBpbnZhbGlkIHBvaW50ZXIgcGFpcnMgKGUuZy4gd2hlbiBwb2ludGVycyBiZWxvbmcgdG8gZGlmZmVyZW50IG9iamVjdHMpOyBJZiA9PSAxLCBkZXRlY3QgaW52YWxpZCBvcGVyYXRpb25zIG9ubHkgd2hlbiBib3RoIHBvaW50ZXJzIGFyZSBub24tbnVsbC4AUHJpbnQgdGhlIHNjYXJpbmVzcyBzY29yZS4gRXhwZXJpbWVudGFsLgBVc2UgbW1hcCB3aXRoICdub3Jlc2VydmUnIGZsYWcgdG8gYWxsb2NhdGUgZmFrZSBzdGFjay4AQWdncmVnYXRlIHR3byBvYmplY3RzIGludG8gb25lIGxlYWsgaWYgdGhpcyBtYW55IHN0YWNrIGZyYW1lcyBtYXRjaC4gSWYgemVybywgdGhlIGVudGlyZSBzdGFjayB0cmFjZSBtdXN0IG1hdGNoLgBNYXhpbXVtIGZha2Ugc3RhY2sgc2l6ZSBsb2cuAE1pbmltdW0gZmFrZSBzdGFjayBzaXplIGxvZy4ASWYgc2V0LCB1c2VzIGFsdGVybmF0ZSBzdGFjayBmb3Igc2lnbmFsIGhhbmRsaW5nLgBXcml0ZSBhbGwgc2FuaXRpemVyIG91dHB1dCB0byBzeXNsb2cgaW4gYWRkaXRpb24gdG8gb3RoZXIgbWVhbnMgb2YgbG9nZ2luZy4AUm9vdCBzZXQ6IG1hcmsgYXMgcmVhY2hhYmxlIGFsbCBhbGxvY2F0aW9ucyBtYWRlIGZyb20gZHluYW1pYyBsaW5rZXIuIFRoaXMgd2FzIHRoZSBvbGQgd2F5IHRvIGhhbmRsZSBkeW5hbWljIFRMUywgYW5kIHdpbGwgYmUgcmVtb3ZlZCBzb29uLiBEbyBub3QgdXNlIHRoaXMgZmxhZy4AV2hldGhlciB0byByZW1vdmUgdGhlIHNhbml0aXplciBmcm9tIERZTERfSU5TRVJUX0xJQlJBUklFUyB0byBhdm9pZCBwYXNzaW5nIGl0IHRvIGNoaWxkcmVuIG9uIEFwcGxlIHBsYXRmb3Jtcy4gRGVmYXVsdCBpcyB0cnVlLgBWZXJpZnkgdGhhdCBpbnRlcmNlcHRvcnMgYXJlIHdvcmtpbmcgb24gQXBwbGUgcGxhdGZvcm1zLiBEZWZhdWx0IGlzIHRydWUuAFByaW50IGlubGluZWQgZnJhbWVzIGluIHN0YWNrdHJhY2VzLiBEZWZhdWx0cyB0byB0cnVlLgBSZXBvcnQgZXJyb3JzIG9uIG1pc21hdGNoIGJldHdlZW4gc2l6ZSBvZiBuZXcgYW5kIGRlbGV0ZS4ARW5hYmxlcyBzdGFjay11c2UtYWZ0ZXItcmV0dXJuIGNoZWNraW5nIGF0IHJ1bi10aW1lLgBTdXBwcmVzc2lvbnMgZmlsZSBuYW1lLgBJZiBzZXQsIGluc3RydWN0cyBrZXJuZWwgdG8gbm90IHN0b3JlIHRoZSAoaHVnZSkgc2hhZG93IGluIGNvcmUgZmlsZS4ASWYgc2V0LCBhbGxvd3Mgb25saW5lIHN5bWJvbGl6ZXIgdG8gcnVuIGFkZHIybGluZSBiaW5hcnkgdG8gc3ltYm9saXplIHN0YWNrIHRyYWNlcyAoYWRkcjJsaW5lIHdpbGwgb25seSBiZSB1c2VkIGlmIGxsdm0tc3ltYm9saXplciBiaW5hcnkgaXMgdW5hdmFpbGFibGUuAElmIGF2YWlsYWJsZSwgdXNlIHRoZSBmYXN0IGZyYW1lLXBvaW50ZXItYmFzZWQgdW53aW5kZXIgb24gbWFsbG9jL2ZyZWUuAEFTYW4gYWxsb2NhdG9yIGZsYWcuIG1heF9mcmVlX2ZpbGxfc2l6ZSBpcyB0aGUgbWF4aW1hbCBhbW91bnQgb2YgYnl0ZXMgdGhhdCB3aWxsIGJlIGZpbGxlZCB3aXRoIGZyZWVfZmlsbF9ieXRlIGR1cmluZyBmcmVlLgBTaXplIChpbiBLYikgb2YgdGhyZWFkIGxvY2FsIHF1YXJhbnRpbmUgdXNlZCB0byBkZXRlY3QgdXNlLWFmdGVyLWZyZWUgZXJyb3JzLiBMb3dlciB2YWx1ZSBtYXkgcmVkdWNlIG1lbW9yeSB1c2FnZSBidXQgaW5jcmVhc2UgdGhlIGNoYW5jZSBvZiBmYWxzZSBuZWdhdGl2ZXMuIEl0IGlzIG5vdCBhZHZpc2VkIHRvIGdvIGxvd2VyIHRoYW4gNjRLYiwgb3RoZXJ3aXNlIGZyZXF1ZW50IHRyYW5zZmVycyB0byBnbG9iYWwgcXVhcmFudGluZSBtaWdodCBhZmZlY3QgcGVyZm9ybWFuY2UuAENvbnNpZGVyIHVuYWxpZ25lZCBwb2ludGVycyB2YWxpZC4AQ29uc2lkZXIgcG9pbnRlcnMgZm91bmQgaW4gcG9pc29uZWQgbWVtb3J5IHRvIGJlIHZhbGlkLgBJZiB0cnVlLCBhc3N1bWUgdGhhdCBkeW5hbWljIGluaXRpYWxpemVycyBjYW4gbmV2ZXIgYWNjZXNzIGdsb2JhbHMgZnJvbSBvdGhlciBtb2R1bGVzLCBldmVuIGlmIHRoZSBsYXR0ZXIgYXJlIGFscmVhZHkgaW5pdGlhbGl6ZWQuAFRoZSBudW1iZXIgb2YgbGVha3MgcmVwb3J0ZWQuAHJlYWxsb2MocCwgMCkgaXMgZXF1aXZhbGVudCB0byBmcmVlKHApIGJ5IGRlZmF1bHQgKFNhbWUgYXMgdGhlIFBPU0lYIHN0YW5kYXJkKS4gSWYgc2V0IHRvIGZhbHNlLCByZWFsbG9jKHAsIDApIHdpbGwgcmV0dXJuIGEgcG9pbnRlciB0byBhbiBhbGxvY2F0ZWQgc3BhY2Ugd2hpY2ggY2FuIG5vdCBiZSB1c2VkLgBJZiBzZXQsIHVzZXIgbWF5IG1hbnVhbGx5IG1hcmsgbWVtb3J5IHJlZ2lvbnMgYXMgcG9pc29uZWQgb3IgdW5wb2lzb25lZC4ARmxhZyBwYXJzaW5nIGZhaWxlZC4ASWYgc2V0LCBkZWFkbG9jayBkZXRlY3Rpb24gaXMgZW5hYmxlZC4ASWYgc2V0LCBwcmludHMgdGhyZWFkIGNyZWF0aW9uIHN0YWNrcyBmb3IgdGhlIHRocmVhZHMgaW52b2x2ZWQgaW4gdGhlIHJlcG9ydCBhbmQgdGhlaXIgYW5jZXN0b3JzIHVwIHRvIHRoZSBtYWluIHRocmVhZC4AUmVwb3J0IGVycm9ycyBvbiBtYWxsb2MvZGVsZXRlLCBuZXcvZnJlZSwgbmV3L2RlbGV0ZVtdLCBldGMuAEFTYW4gYWxsb2NhdG9yIGZsYWcuIG1heF9tYWxsb2NfZmlsbF9zaXplIGlzIHRoZSBtYXhpbWFsIGFtb3VudCBvZiBieXRlcyB0aGF0IHdpbGwgYmUgZmlsbGVkIHdpdGggbWFsbG9jX2ZpbGxfYnl0ZSBvbiBtYWxsb2MuAERlcHJlY2F0ZWQsIHBsZWFzZSB1c2UgcXVhcmFudGluZV9zaXplX21iLgBQb2lzb24gKG9yIG5vdCkgdGhlIGFycmF5IGNvb2tpZSBhZnRlciBvcGVyYXRvciBuZXdbXS4ARW5hYmxlcyBzdXBwb3J0IGZvciBkeW5hbWljIGxpYnJhcmllcyBsaW5rZWQgd2l0aCBsaWJwdGhyZWFkIDIuMi41LgBJZiB0cnVlLCBhc3N1bWUgdGhhdCBtZW1jbXAocDEsIHAyLCBuKSBhbHdheXMgcmVhZHMgbiBieXRlcyBiZWZvcmUgY29tcGFyaW5nIHAxIGFuZCBwMi4ARGVwcmVjYXRlZC4gVHJ1ZSBoYXMgbm8gZWZmZWN0LCB1c2UgaGFuZGxlX3NpZ2J1cz0xLiBJZiBmYWxzZSwgaGFuZGxlXyo9MSB3aWxsIGJlIHVwZ3JhZGVkIHRvIGhhbmRsZV8qPTIuAFByaW50IHZhcmlvdXMgc3RhdGlzdGljcyBhZnRlciBwcmludGluZyBhbiBlcnJvciBtZXNzYWdlIG9yIGlmIGF0ZXhpdD0xLgBJZiBwb3NpdGl2ZSwgYWZ0ZXIgcHJpbnRpbmcgYSBzdGFjayB0cmFjZSBhbHNvIHByaW50IGEgc2hvcnQgc3RyaW5nIHRva2VuIGJhc2VkIG9uIHRoaXMgbnVtYmVyIG9mIGZyYW1lcyB0aGF0IHdpbGwgc2ltcGxpZnkgZGVkdXBsaWNhdGlvbiBvZiB0aGUgcmVwb3J0cy4gRXhhbXBsZTogJ0RFRFVQX1RPS0VOOiBmb28tYmFyLW1haW4nLiBEZWZhdWx0IGlzIDAuAFByaW50IGZpbGUgbG9jYXRpb25zIGluIFZpc3VhbCBTdHVkaW8gc3R5bGUgKGUuZzogIGZpbGUoMTAsNDIpOiAuLi4AQWxsb3dzIHRoZSB1c2VycyB0byB3b3JrIGFyb3VuZCB0aGUgYnVnIGluIE52aWRpYSBkcml2ZXJzIHByaW9yIHRvIDI5NS4qLgBQcmludCBjb21tYW5kIGxpbmUgb24gY3Jhc2ggKGFzYW4gb25seSkuAERlZHVwbGljYXRlIG11bHRpcGxlIHJlcG9ydHMgZm9yIHNpbmdsZSBzb3VyY2UgbG9jYXRpb24gaW4gaGFsdF9vbl9lcnJvcj1mYWxzZSBtb2RlIChhc2FuIG9ubHkpLgBWZXJib3NpdHkgbGV2ZWwgKDAgLSBzaWxlbnQsIDEgLSBhIGJpdCBvZiBvdXRwdXQsIDIrIC0gbW9yZSBvdXRwdXQpLgBQcmludCB0aGUgcHJvY2VzcyBtb2R1bGUgbWFwIHdoZXJlIHN1cHBvcnRlZCAoMCAtIGRvbid0IHByaW50LCAxIC0gcHJpbnQgb25seSBvbmNlIGJlZm9yZSBwcm9jZXNzIGV4aXRzLCAyIC0gcHJpbnQgYWZ0ZXIgZWFjaCByZXBvcnQpLgBDb250cm9scyB0aGUgd2F5IHRvIGhhbmRsZSBnbG9iYWxzICgwIC0gZG9uJ3QgZGV0ZWN0IGJ1ZmZlciBvdmVyZmxvdyBvbiBnbG9iYWxzLCAxIC0gZGV0ZWN0IGJ1ZmZlciBvdmVyZmxvdywgMiAtIHByaW50IGRhdGEgYWJvdXQgcmVnaXN0ZXJlZCBnbG9iYWxzKS4AJXp1IGJ5dGUocykgbGVha2VkIGluICV6dSBhbGxvY2F0aW9uKHMpLgBDb2xvcml6ZSByZXBvcnRzOiAoYWx3YXlzfG5ldmVyfGF1dG8pLgBJZiBub24temVybywgbWFsbG9jL25ldyBjYWxscyBsYXJnZXIgdGhhbiB0aGlzIHNpemUgd2lsbCByZXR1cm4gbnVsbHB0ciAob3IgY3Jhc2ggaWYgYWxsb2NhdG9yX21heV9yZXR1cm5fbnVsbD1mYWxzZSkuAElmIHNldCwgY292ZXJhZ2UgaW5mb3JtYXRpb24gd2lsbCBiZSBkdW1wZWQgYXQgcHJvZ3JhbSBzaHV0ZG93biAoaWYgdGhlIGNvdmVyYWdlIGluc3RydW1lbnRhdGlvbiB3YXMgZW5hYmxlZCBhdCBjb21waWxlIHRpbWUpLgBOdW1iZXIgb2Ygc2Vjb25kcyB0byBzbGVlcCBiZXR3ZWVuIHByaW50aW5nIGFuIGVycm9yIHJlcG9ydCBhbmQgdGVybWluYXRpbmcgdGhlIHByb2dyYW0uIFVzZWZ1bCBmb3IgZGVidWdnaW5nIHB1cnBvc2VzIChlLmcuIHdoZW4gb25lIG5lZWRzIHRvIGF0dGFjaCBnZGIpLgBOdW1iZXIgb2Ygc2Vjb25kcyB0byBzbGVlcCBiZWZvcmUgQWRkcmVzc1Nhbml0aXplciBzdGFydHMgaW5pdGlhbGl6aW5nLiBVc2VmdWwgZm9yIGRlYnVnZ2luZyBwdXJwb3NlcyAoZS5nLiB3aGVuIG9uZSBuZWVkcyB0byBhdHRhY2ggZ2RiKS4ATnVtYmVyIG9mIHNlY29uZHMgdG8gc2xlZXAgYWZ0ZXIgQWRkcmVzc1Nhbml0aXplciBpcyBpbml0aWFsaXplZC4gVXNlZnVsIGZvciBkZWJ1Z2dpbmcgcHVycG9zZXMgKGUuZy4gd2hlbiBvbmUgbmVlZHMgdG8gYXR0YWNoIGdkYikuAFJvb3Qgc2V0OiBpbmNsdWRlIHJlZ2lvbnMgYWRkZWQgdmlhIF9fbHNhbl9yZWdpc3Rlcl9yb290X3JlZ2lvbigpLgBNZW50aW9uIG5hbWUgb2YgZXhlY3V0YWJsZSB3aGVuIHJlcG9ydGluZyBlcnJvciBhbmQgYXBwZW5kIGV4ZWN1dGFibGUgbmFtZSB0byBsb2dzIChhcyBpbiAibG9nX3BhdGguZXhlX25hbWUucGlkIikuAFN0cmluZyB0byBhcHBlbmQgdG8gbG9nIGZpbGUgbmFtZSwgZS5nLiAiLnR4dCIuAFdyaXRlIGxvZ3MgdG8gImxvZ19wYXRoLnBpZCIuIFRoZSBzcGVjaWFsIHZhbHVlcyBhcmUgInN0ZG91dCIgYW5kICJzdGRlcnIiLiBJZiB1bnNwZWNpZmllZCwgZGVmYXVsdHMgdG8gInN0ZGVyciIuAC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tACsweCV6eCkAcmVhZCBtb3JlIG9wdGlvbnMgZnJvbSB0aGUgZ2l2ZW4gZmlsZSAoaWYgaXQgZXhpc3RzKQBSb290IHNldDogaW5jbHVkZSBnbG9iYWwgdmFyaWFibGVzICguZGF0YSBhbmQgLmJzcykAICglcykAKCVwKQBDaGVjayBwb3NpdGlvbiBvZiBBU2FuIHJ1bnRpbWUgaW4gbGlicmFyeSBsaXN0IChuZWVkcyB0byBiZSBkaXNhYmxlZCB3aGVuIG90aGVyIGxpYnJhcnkgaGFzIHRvIGJlIHByZWxvYWRlZCBzeXN0ZW0td2lkZSkAIChsaW5lICV6ZCkAICAgIFslemQsICV6ZCkARW1wdHkgSlBFRyBpbWFnZSAoRE5MIG5vdCBzdXBwb3J0ZWQpAEluc3VmZmljaWVudCBtZW1vcnkgKGNhc2UgJWQpACAocmVhc29uOiAlZCkAKDx1bmtub3duIG1vZHVsZT4pACgoc3VwcHJlc3Npb25fY3R4KSkgIT0gKDApACgoY29udGV4dCkpICE9ICgwKQAoKG91dHB1dCkpICE9ICgwKQAoKGVtc2NyaXB0ZW5fYnVpbHRpbl9tZW1zZXQpKSAhPSAoMCkAKChUaGVCdWNrZXQpKSAhPSAoMCkAKChCdWNrZXRzKSkgIT0gKDApACgoIWluZm8gfHwgYWRkcmVzcyA9PSBpbmZvLT5hZGRyZXNzKSkgIT0gKDApACgoIXBhcmFtLT5zdWNjZXNzKSkgIT0gKDApACgoZmxhZ3MoKS0+cmVwb3J0X2dsb2JhbHMpKSAhPSAoMCkAKChmcmFtZXMpKSAhPSAoMCkAKChnbG9iYWxfcmVnaXN0cmF0aW9uX3NpdGVfdmVjdG9yKSkgIT0gKDApACgoZnJhbWVfZGVzY3IpKSAhPSAoMCkAKChib3R0b20pKSAhPSAoMCkAKChwYXJhbSkpICE9ICgwKQAoKCFGb3VuZFZhbCkpICE9ICgwKQAoKGF0b21pY19sb2FkKCZzdGF0ZV8sIG1lbW9yeV9vcmRlcl9yZWxheGVkKSAmIGtXcml0ZXJMb2NrKSkgIT0gKDApACgoc3RhY2spKSAhPSAoMCkAKChhcmcpKSAhPSAoMCkAKCghYXNhbl9pbml0X2lzX3J1bm5pbmcpKSAhPSAoMCkAKChvbGRfcHRyICYmIG5ld19zaXplKSkgIT0gKDApACgoYWxsb2NhdGVkX2VuZF8gLSBhbGxvY2F0ZWRfY3VycmVudF8gPj0gKHNwdHIpc2l6ZSkpICE9ICgwKQAoKHNpemUpKSAhPSAoMCkAKChiYXNlKSkgIT0gKDApACgobW9kdWxlX25hbWUpKSAhPSAoMCkAKChuYW1lKSkgIT0gKDApACgocmVzLnRyYWNlKSkgIT0gKDApACgobGl2ZV8udHJ5X2VtcGxhY2UodXNlcl9pZCwgdGlkKS5zZWNvbmQpKSAhPSAoMCkAKChsZWFrc19baW5kZXhdLnN0YWNrX3RyYWNlX2lkKSkgIT0gKDApACgoaWQpKSAhPSAoMCkAKCh0c2Rfa2V5X2luaXRlZCkpICE9ICgwKQAoKCF0c2Rfa2V5X2luaXRlZCkpICE9ICgwKQAoKGFzYW5faW5pdGVkKSkgIT0gKDApACgoIWFzYW5faXNfZGVhY3RpdmF0ZWQpKSAhPSAoMCkAKChsZWFrc18uc2l6ZSgpIDw9IGtNYXhMZWFrc0NvbnNpZGVyZWQpKSAhPSAoMCkAKCh0YWcgPT0ga1JlYWNoYWJsZSB8fCB0YWcgPT0ga0luZGlyZWN0bHlMZWFrZWQpKSAhPSAoMCkAKCh0YWcgPT0ga0RpcmVjdGx5TGVha2VkIHx8IHRhZyA9PSBrSW5kaXJlY3RseUxlYWtlZCkpICE9ICgwKQAoKCFoYXZlX3dpZHRoIHx8IGxlZnRfanVzdGlmaWVkKSkgIT0gKDApACgoc3RhdHVzID09IFRocmVhZFN0YXR1c1J1bm5pbmcgfHwgc3RhdHVzID09IFRocmVhZFN0YXR1c0ZpbmlzaGVkKSkgIT0gKDApACgocHRyWzBdID09IGtDdXJyZW50U3RhY2tGcmFtZU1hZ2ljKSkgIT0gKDApACgoYikpICE9ICgwKQAoKHN5bWJvbGl6ZXJfKSkgIT0gKDApACgoY2FuX3BhcnNlXykpICE9ICgwKQAoKG91dCA8IG91dF9lbmQgLSAxKSkgIT0gKDApACgoMCkpICE9ICgwKQAoKChzaXplID09IDAgJiYgY2FjaGVfc2l6ZSA9PSAwKSB8fCBjYWNoZV9zaXplICE9IDApKSAhPSAoMCkAKCgidW5hYmxlIHRvIHVubWFwIiAmJiAwKSkgIT0gKDApACgoIUtleUluZm9UOjppc0VxdWFsKFZhbCwgRW1wdHlLZXkpKSkgIT0gKDApACgoIUtleUluZm9UOjppc0VxdWFsKFZhbCwgVG9tYnN0b25lS2V5KSkpICE9ICgwKQAoKElzUG93ZXJPZlR3byh4KSkpICE9ICgwKQAoKElzQWxpZ25lZChuZWVkZWRfc2l6ZSwgbWluX2FsaWdubWVudCkpKSAhPSAoMCkAKChJc1Bvd2VyT2ZUd28oYWxpZ25tZW50KSkpICE9ICgwKQAoKElzQWxpZ25lZChyZXMsIGFsaWdubWVudCkpKSAhPSAoMCkAKChJc0FsaWduZWQoKHVwdHIpcHRyLCBhbGlnbm1lbnQpKSkgIT0gKDApACgoQXNhbkNodW5rVmlldyhyaWdodF9jaHVuaykuQWRkcklzQXRMZWZ0KGFkZHIsIDEsICZyX29mZnNldCkpKSAhPSAoMCkAKChpbnRlcm5hbF9hbGxvY2F0b3IoKS0+RnJvbVByaW1hcnkocHRyKSkpICE9ICgwKQAoKEFkZHJJc0FsaWduZWRCeUdyYW51bGFyaXR5KGFkZHIpKSkgIT0gKDApACgoQWRkcklzSW5NZW0oYWRkcikpKSAhPSAoMCkAKChBZGRySXNJbk1lbShwKSkpICE9ICgwKQAoKEFkZHJJc0luU3RhY2soKHVwdHIpJmxvY2FsKSkpICE9ICgwKQAoKEFkZHJJc0FsaWduZWRCeUdyYW51bGFyaXR5KGctPmJlZykpKSAhPSAoMCkAKChBZGRySXNJbk1lbShnLT5iZWcpKSkgIT0gKDApACgoSXNQb3dlck9mVHdvKHJ6X3NpemUpKSkgIT0gKDApACgoSXNQb3dlck9mVHdvKHNpemUpKSkgIT0gKDApACgoQWRkcklzQWxpZ25lZEJ5R3JhbnVsYXJpdHkoYWRkciArIHNpemUpKSkgIT0gKDApACgoSXNBbGlnbmVkKHJlcywga1JlZ2lvblNpemUpKSkgIT0gKDApACgoSXNQb3dlck9mVHdvKGYtPm1heF9yZWR6b25lKSkpICE9ICgwKQAoKElzUG93ZXJPZlR3byhvcHRpb25zLm1heF9yZWR6b25lKSkpICE9ICgwKQAoKElzUG93ZXJPZlR3byhvcHRpb25zLm1pbl9yZWR6b25lKSkpICE9ICgwKQAoKEFkZHJJc0FsaWduZWRCeUdyYW51bGFyaXR5KGctPnNpemVfd2l0aF9yZWR6b25lKSkpICE9ICgwKQAoKElzUG93ZXJPZlR3byhmLT5yZWR6b25lKSkpICE9ICgwKQAoKCgodW5zaWduZWQgaW50KWxlbikgPCBzaXplb2YobmFtZSkpKSAhPSAoMCkAKChwcmludGVyLlByb2Nlc3NBZGRyZXNzRnJhbWVzKHBjKSkpICE9ICgwKQAoKEFkZHJJc0luTWVtKHN0YWNrX2JvdHRvbV8pKSkgIT0gKDApACgoSXNBbGlnbmVkKHJlcywgcGFnZV9zaXplXykpKSAhPSAoMCkAKChJc0FsaWduZWQocCwgcGFnZV9zaXplXykpKSAhPSAoMCkAKChJc0FsaWduZWQoKHVwdHIpaCwgcGFnZV9zaXplXykpKSAhPSAoMCkAKChJc0FsaWduZWQobWFwX2JlZywgcGFnZV9zaXplXykpKSAhPSAoMCkAKCghY29tcCh2W2ldLCB2W2xhc3RdKSkpICE9ICgwKQAoKElzQWxpZ25lZChvZmZzZXQsIDQwOTYpKSkgIT0gKDApACgoQWRkcklzSW5NZW0oc3RhY2tfdG9wXyAtIDEpKSkgIT0gKDApACgoQWRkcklzSW5NZW0oYWRkciArIHNpemUgLSAoMVVMTCA8PCAzKSkpKSAhPSAoMCkAKCghZW1wdHkoKSkpICE9ICgwKQAoKHQtPmNvbnRleHQoKSkpICE9ICgwKQAoKCEoKHByZWNpc2lvbiA+PSAwIHx8IGxlZnRfanVzdGlmaWVkKSAmJiAqY3VyICE9ICdzJykpKSAhPSAoMCkAKCgwICYmICJ1bmFibGUgdG8gbW1hcCIpKSAhPSAoMCkAKCgwICYmICJJbnZhbGlkIG1vZHVsZSBhcmNoIikpICE9ICgwKQAoKDAgJiYgIlVuZXhwZWN0ZWQgdHlwZSIpKSAhPSAoMCkAKCgwICYmICJtZW1faXNfemVybyByZXR1cm5lZCBmYWxzZSwgYnV0IHBvaXNvbmVkIGJ5dGUgd2FzIG5vdCBmb3VuZCIpKSAhPSAoMCkAKCgwICYmICJBZGRyZXNzSW5mb3JtYXRpb24ga2luZCBpcyBpbnZhbGlkIikpICE9ICgwKQAoKDAgJiYgInVuaW1wbGVtZW50ZWQiKSkgIT0gKDApACgoIWFzYW5faW5pdF9pc19ydW5uaW5nICYmICJBU2FuIGluaXQgY2FsbHMgaXRzZWxmISIpKSAhPSAoMCkAKChzKSkgPj0gKCh6KSkAKChiMiAtIGIxKSkgPT0gKChncmFudWxhcml0eSkpACgoc2l6ZV8pKSA8PSAoKG5ld19jYXBhY2l0eSkpACgobnVsbHB0cikpID09ICgoc3VwcHJlc3Npb25fY3R4KSkAKCgodXB0ciljb21tb25fZmxhZ3MoKS0+bWFsbG9jX2NvbnRleHRfc2l6ZSkpIDw9ICgoa1N0YWNrVHJhY2VNYXgpKQAoKHByZXYtPm5leHQpKSA9PSAoKHgpKQAoKGJlZy5vZmZzZXQpKSA8ICgoZW5kLm9mZnNldCkpACgoY2h1bmtzW2ldKSkgPT0gKCh0KSkAKChUaHJlYWRTdGF0dXNDcmVhdGVkKSkgPT0gKCh0Y3R4LT5zdGF0dXMpKQAoKFNpemUpKSA9PSAoKHNpemVvZihCdWNrZXRUKSAqIE51bUJ1Y2tldHMpKQAoKG4pKSA8ICgoa01heE51bUNodW5rcykpACgobl9mbGFnc18pKSA8ICgoa01heEZsYWdzKSkAKChuX3Vua25vd25fZmxhZ3NfKSkgPCAoKGtNYXhVbmtub3duRmxhZ3MpKQAoKGhlYWRlci0+c2l6ZSkpIDw9ICgoa0Jsb2NrU2l6ZUJ5dGVzKSkAKChjbGFzc19pZCkpIDwgKChrTnVtQ2xhc3NlcykpACgoY2xhc3NfaWQpKSA8ICgoa051bWJlck9mU2l6ZUNsYXNzZXMpKQAoKHN1cHByZXNzaW9uX3R5cGVzX251bV8pKSA8PSAoKGtNYXhTdXBwcmVzc2lvblR5cGVzKSkAKChjb3VudCkpIDw9ICgoa0Jsb2NrU2l6ZUZyYW1lcykpACgocyAmIGtVbmxvY2tNYXNrKSkgPT0gKChzKSkAKChlbXNjcmlwdGVuX2J1aWx0aW5fbWVtY3B5KSkgIT0gKChudWxscHRyKSkAKChiYXNlKSkgPD0gKChwdHIpKQAoKG51bGxwdHIpKSAhPSAoKHB0cikpACgobmVhcmVzdF9jaHVuaykpIDw9ICgocCkpACgodGhpcykpICE9ICgobCkpACgoYmVnLmNodW5rKSkgPCAoKGVuZC5jaHVuaykpACgoQWRkcmVzc1NwYWNlVmlldzo6TG9hZChjaHVua3NbaV0pLT5jaHVua19pZHgpKSA9PSAoKGkpKQAoKGNodW5rc19baWR4XSkpID09ICgoaCkpACgoZi0+bWluX3Vhcl9zdGFja19zaXplX2xvZykpIDw9ICgoZi0+bWF4X3Vhcl9zdGFja19zaXplX2xvZykpACgoZmxhZ3MoKS0+bWluX3Vhcl9zdGFja19zaXplX2xvZykpIDw9ICgoZmxhZ3MoKS0+bWF4X3Vhcl9zdGFja19zaXplX2xvZykpACgobmVhcmVzdF9jaHVuaykpID49ICgoaC0+bWFwX2JlZykpACgocmVzICsgc2l6ZSkpID49ICgobWFwX2JlZykpACgoYWxsb2NfYmVnICsgc2l6ZW9mKExhcmdlQ2h1bmtIZWFkZXIpKSkgPD0gKChjaHVua19iZWcpKQAoKG5lYXJlc3RfY2h1bmspKSA8ICgoaC0+bWFwX2JlZyArIGgtPm1hcF9zaXplKSkAKChjYWNoZV9zaXplKSkgPj0gKChvdmVyaGVhZF9zaXplKSkAKChjb3VudCkpIDwgKChrU2l6ZSkpACgodmFsdWUpKSA9PSAoKGVuZC52YWx1ZSkpACgoYWxsb2NfdHlwZSkpICE9ICgoZGVhbGxvY190eXBlKSkAKChvcHRpb25zLm1heF9yZWR6b25lKSkgPj0gKChvcHRpb25zLm1pbl9yZWR6b25lKSkAKChmLT5tYXhfcmVkem9uZSkpID49ICgoZi0+cmVkem9uZSkpACgoYWxsb2NhdG9yX2JlZ2luKSkgPD0gKChhbGxvY2F0b3JfZW5kKSkAKChyZXMgKyBzaXplKSkgPD0gKChtYXBfZW5kKSkAKCh0bykpID09ICgodG9fZW5kKSkAKCh1c2VyX2VuZCkpIDw9ICgoYWxsb2NfZW5kKSkAKChiZWcgKyAxKSkgPT0gKChlbmQpKQAoKGFsbG9jYXRvcl9lbmQpKSA8PSAoKGVuZCkpACgoYmVnKSkgPCAoKGVuZCkpACgodGN0eC0+c3RhdHVzKSkgPT0gKChUaHJlYWRTdGF0dXNJbnZhbGlkKSkAKChjdXJyZW50X2Vycm9yXy5raW5kKSkgPT0gKChrRXJyb3JLaW5kSW52YWxpZCkpACgodGlkKSkgIT0gKChrSW52YWxpZFRpZCkpACgoY2h1bmsuQWxsb2NUaWQoKSkpICE9ICgoa0ludmFsaWRUaWQpKQAoKGlkICYgKCgodTMyKS0xKSA+PiBrUmVzZXJ2ZWRCaXRzKSkpID09ICgoaWQpKQAoKHRjdHgtPnN0YXR1cykpID09ICgoVGhyZWFkU3RhdHVzQ3JlYXRlZCkpACgoa0Jsb2NrU2l6ZUZyYW1lcykpID09ICgodW5wYWNrZWRfZW5kIC0gdW5wYWNrZWQpKQAoKHRoaXMpKSA9PSAoKHRocmVhZCkpACgodGN0eC0+c3RhdHVzKSkgPT0gKChUaHJlYWRTdGF0dXNEZWFkKSkAKChvbGQpKSA9PSAoKGtBbGxvY0JlZ01hZ2ljKSkAKChpZHgpKSA8ICgobl9jaHVua3NfKSkAKCh0aWQpKSA8ICgobWF4X3RocmVhZHNfKSkAKChhbGl2ZV90aHJlYWRzXykpID09ICgobWF4X2FsaXZlX3RocmVhZHNfKSkAKChpKSkgPCAoKHNpemVfKSkAKChudWxscHRyKSkgPT0gKCh0aHJlYWRfKSkAKCh0aGlzLT5zdGFja19zaXplKCkpKSA+ICgoMFUpKQAoKHRoaXMtPnN0YWNrX3NpemUoKSkpID09ICgoMFUpKQAoKHgpKSAhPSAoKDBVKSkAKChjbGFzc19pZCkpICE9ICgoMFVMKSkAKChvbGRfY2h1bmtfc3RhdGUpKSA9PSAoKENIVU5LX1FVQVJBTlRJTkUpKQAoKGF0b21pY19sb2Fk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ZSAnJXMnIGRlZmluZWQgaW4gJwAlJQBURVNUIE9OTFkgZmFpbCB0byByZWFkIG1lbW9yeSBtYXBwaW5ncyB0byBlbXVsYXRlIHNhbml0aXplZCAiaW5pdCIAbWF4X3NoYWRvd19hZGRyZXNzIDw9IGtMb3dTaGFkb3dFbmQgJiYgInNoYWRvdyByZWdpb24gaXMgdG9vIHNtYWxsIgBQdXJlIHZpcnR1YWwgZnVuY3Rpb24gY2FsbGVkIQAlcyVzJXgleCVzIAAlenU6JXp1OyAAJXpkOiV6ZDsgACV6ZDogJXpkLyV6ZDsgAEVSUk9SOiBDYW4ndCBjcmVhdGUgZGlyZWN0b3J5OiAAU3VwcG9ydGVkIFByaW50ZiBmb3JtYXRzOiAlKFswLTldKik/KHp8bHxsbCk/e2QsdSx4LFh9OyAlcDsgJVstXShbMC05XSopPyhcLlwqKT9zOyAlYwpQcm92aWRlZCBmb3JtYXQ6IAAgIG1hbGxvY3MgYnkgc2l6ZSBjbGFzczogAFN0YXRzOiBMYXJnZU1tYXBBbGxvY2F0b3I6IGFsbG9jYXRlZCAlemQgdGltZXMsIHJlbWFpbnMgJXpkICglemQgSykgbWF4ICV6ZCBNOyBieSBzaXplIGxvZ3M6IABsaWJjKythYmk6IABFUlJPUjogQ2FuJ3Qgb3BlbiBmaWxlOiAAICBQYXJ0aWFsbHkgYWRkcmVzc2FibGU6IAAKQ29tbWFuZDogAChCdWlsZElkOiAARmlyc3QgMTYgaW5zdHJ1Y3Rpb24gYnl0ZXMgYXQgcGM6IABJZiB0cnVlLCB0aGUgc2hhZG93IGlzIG5vdCBhbGxvd2VkIHRvIHVzZSBodWdlIHBhZ2VzLiAASWYgbm9uLWVtcHR5LCB3cml0ZSA4Yml0IGNvdW50ZXJzIHRvIHRoaXMgZmlsZS4gAElmIG5vbi1lbXB0eSwgd3JpdGUgdGhlIGNvdmVyYWdlIHBjIHRhYmxlIHRvIHRoaXMgZmlsZS4gAElmIHRydWUsIEFTYW4gdHdlYWtzIGEgYnVuY2ggb2Ygb3RoZXIgZmxhZ3MgKHF1YXJhbnRpbmUsIHJlZHpvbmUsIGhlYXAgcG9pc29uaW5nKSB0byByZWR1Y2UgbWVtb3J5IGNvbnN1bXB0aW9uIGFzIG11Y2ggYXMgcG9zc2libGUsIGFuZCByZXN0b3JlcyB0aGVtIHRvIG9yaWdpbmFsIHZhbHVlcyB3aGVuIHRoZSBmaXJzdCBpbnN0cnVtZW50ZWQgbW9kdWxlIGlzIGxvYWRlZCBpbnRvIHRoZSBwcm9jZXNzLiBUaGlzIGlzIG1haW5seSBpbnRlbmRlZCB0byBiZSB1c2VkIG9uIEFuZHJvaWQuIABDb250cm9scyBjdXN0b20gdG9vbCdzIFNJR1NFR1YgaGFuZGxlciAoMCAtIGRvIG5vdCByZWdpc3RlcnMgdGhlIGhhbmRsZXIsIDEgLSByZWdpc3RlciB0aGUgaGFuZGxlciBhbmQgYWxsb3cgdXNlciB0byBzZXQgb3duLCAyIC0gcmVnaXN0ZXJzIHRoZSBoYW5kbGVyIGFuZCBibG9jayB1c2VyIGZyb20gY2hhbmdpbmcgaXQpLiAAQ29udHJvbHMgY3VzdG9tIHRvb2wncyBTSUdBQlJUIGhhbmRsZXIgKDAgLSBkbyBub3QgcmVnaXN0ZXJzIHRoZSBoYW5kbGVyLCAxIC0gcmVnaXN0ZXIgdGhlIGhhbmRsZXIgYW5kIGFsbG93IHVzZXIgdG8gc2V0IG93biwgMiAtIHJlZ2lzdGVycyB0aGUgaGFuZGxlciBhbmQgYmxvY2sgdXNlciBmcm9tIGNoYW5naW5nIGl0KS4gAENvbnRyb2xzIGN1c3RvbSB0b29sJ3MgU0lHQlVTIGhhbmRsZXIgKDAgLSBkbyBub3QgcmVnaXN0ZXJzIHRoZSBoYW5kbGVyLCAxIC0gcmVnaXN0ZXIgdGhlIGhhbmRsZXIgYW5kIGFsbG93IHVzZXIgdG8gc2V0IG93biwgMiAtIHJlZ2lzdGVycyB0aGUgaGFuZGxlciBhbmQgYmxvY2sgdXNlciBmcm9tIGNoYW5naW5nIGl0KS4gAENvbnRyb2xzIGN1c3RvbSB0b29sJ3MgU0lHVFJBUCBoYW5kbGVyICgwIC0gZG8gbm90IHJlZ2lzdGVycyB0aGUgaGFuZGxlciwgMSAtIHJlZ2lzdGVyIHRoZSBoYW5kbGVyIGFuZCBhbGxvdyB1c2VyIHRvIHNldCBvd24sIDIgLSByZWdpc3RlcnMgdGhlIGhhbmRsZXIgYW5kIGJsb2NrIHVzZXIgZnJvbSBjaGFuZ2luZyBpdCkuIABDb250cm9scyBjdXN0b20gdG9vbCdzIFNJR0lMTCBoYW5kbGVyICgwIC0gZG8gbm90IHJlZ2lzdGVycyB0aGUgaGFuZGxlciwgMSAtIHJlZ2lzdGVyIHRoZSBoYW5kbGVyIGFuZCBhbGxvdyB1c2VyIHRvIHNldCBvd24sIDIgLSByZWdpc3RlcnMgdGhlIGhhbmRsZXIgYW5kIGJsb2NrIHVzZXIgZnJvbSBjaGFuZ2luZyBpdCkuIABDb250cm9scyBjdXN0b20gdG9vbCdzIFNJR0ZQRSBoYW5kbGVyICgwIC0gZG8gbm90IHJlZ2lzdGVycyB0aGUgaGFuZGxlciwgMSAtIHJlZ2lzdGVyIHRoZSBoYW5kbGVyIGFuZCBhbGxvdyB1c2VyIHRvIHNldCBvd24sIDIgLSByZWdpc3RlcnMgdGhlIGhhbmRsZXIgYW5kIGJsb2NrIHVzZXIgZnJvbSBjaGFuZ2luZyBpdCkuIAAgIFN0YWNrIHVzZSBhZnRlciBzY29wZTogICAAICBJbnRyYSBvYmplY3QgcmVkem9uZTogICAgACAgUmlnaHQgYWxsb2NhIHJlZHpvbmU6ICAgIAAgIFN0YWNrIHJpZ2h0IHJlZHpvbmU6ICAgICAAICBMZWZ0IGFsbG9jYSByZWR6b25lOiAgICAgACAgQ29udGFpbmVyIG92ZXJmbG93OiAgICAgIAAgIFN0YWNrIGFmdGVyIHJldHVybjogICAgICAAICBTdGFjayBsZWZ0IHJlZHpvbmU6ICAgICAgACAgR2xvYmFsIGluaXQgb3JkZXI6ICAgICAgIAAgIEZyZWVkIGhlYXAgcmVnaW9uOiAgICAgICAAICBIZWFwIGxlZnQgcmVkem9uZTogICAgICAgACAgU3RhY2sgbWlkIHJlZHpvbmU6ICAgICAgIAAgIFBvaXNvbmVkIGJ5IHVzZXI6ICAgICAgICAAICBHbG9iYWwgcmVkem9uZTogICAgICAgICAgACAgQVNhbiBpbnRlcm5hbDogICAgICAgICAgIAAgIEFkZHJlc3NhYmxlOiAgICAgICAgICAgACAgQXJyYXkgY29va2llOiAgICAgICAgICAgIABBZGRyZXNzU2FuaXRpemVyIGNhbid0IHBhcnNlIHRoZSBzdGFjayBmcmFtZSBkZXNjcmlwdG9yOiB8JXN8CgB1bnBvaXNvbmluZzogJXAgJXp4CgBFUlJPUjogYmVnIGlzIG5vdCBhbGlnbmVkIGJ5ICV6dQoAVW5yZWdpc3RlcmVkIHJvb3QgcmVnaW9uIGF0ICVwIG9mIHNpemUgJXp1CgBSZWdpc3RlcmVkIHJvb3QgcmVnaW9uIGF0ICVwIG9mIHNpemUgJXp1CgAnICgweCV6eCkgb2Ygc2l6ZSAlenUKAFN0YXRzOiBtYWxsb2MgbGFyZ2U6ICV6dQoAd2FybmluZzogdW5zdXBwb3J0ZWQgc3lzY2FsbDogX19zeXNjYWxsX3VnZXRybGltaXQKAGZvcm1hdAoARkFUQUw6ICVzOiBjYWxsb2MgcGFyYW1ldGVycyBvdmVyZmxvdzogY291bnQgKiBzaXplICglemQgKiAlemQpIGNhbm5vdCBiZSByZXByZXNlbnRlZCBpbiB0eXBlIHNpemVfdAoAU3RhdHM6ICV6dU0gKCV6dU0tJXp1TSkgbW1hcGVkOyAlenUgbWFwcywgJXp1IHVubWFwcwoAa0Vycm9yTWVzc2FnZUJ1ZmZlclNpemUgPj0gZXJyb3JfbWVzc2FnZV9idWZmZXJfcG9zCgAlczogZmFpbGVkIHRvIHBhcnNlIHN1cHByZXNzaW9ucwoAJXM6IFN0YWNrRGVwb3QgcmVsZWFzZWQgJXp1IEtpQiBvdXQgb2YgJXp1IEtpQiBpbiAlbGx1IG1zCgBTdGF0czogJXp1TSByZWFsbHkgZnJlZWQgYnkgJXp1IGNhbGxzCgBTdGF0czogJXp1TSBmcmVlZCBieSAlenUgY2FsbHMKAFN0YXRzOiAlenVNIHJlYWxsb2NlZCBieSAlenUgY2FsbHMKAFN0YXRzOiAlenVNIG1hbGxvY2VkICglenVNIGZvciByZWQgem9uZXMpIGJ5ICV6dSBjYWxscwoARVJST1I6IExlYWtTYW5pdGl6ZXI6IGRldGVjdGVkIG1lbW9yeSBsZWFrcwoAIWhhdmVfZmxhZ3MKAEZBVEFMOiAlczogaW50ZXJuYWwgYWxsb2NhdG9yIGlzIG91dCBvZiBtZW1vcnkgdHJ5aW5nIHRvIGFsbG9jYXRlIDB4JXp4IGJ5dGVzCgBFUlJPUjogJXM6IG91dCBvZiBtZW1vcnk6IGFsbG9jYXRvciBpcyB0cnlpbmcgdG8gYWxsb2NhdGUgMHglenggYnl0ZXMKAFdBUk5JTkc6IEFkZHJlc3NTYW5pdGl6ZXIgZmFpbGVkIHRvIGFsbG9jYXRlIDB4JXp4IGJ5dGVzCgAlcyVzIG9mIHNpemUgJXp1IGF0ICVwIHRocmVhZCAlcyVzCgAgYXQgb2Zmc2V0ICV6dSBpbiBmcmFtZSVzCgAlcyA8PT0gTWVtb3J5IGFjY2VzcyBhdCBvZmZzZXQgJXpkICVzIHRoaXMgdmFyaWFibGUlcwoAJXNhbGxvY2F0ZWQgYnkgdGhyZWFkICVzIGhlcmU6JXMKACVzcHJldmlvdXNseSBhbGxvY2F0ZWQgYnkgdGhyZWFkICVzIGhlcmU6JXMKACVzZnJlZWQgYnkgdGhyZWFkICVzIGhlcmU6JXMKACU3enUgJTEwenUgJXMKACVzOiByZWFkaW5nIHN1cHByZXNzaW9ucyBmaWxlIGF0ICVzCgAlczogRVJST1I6IGV4cGVjdGVkICc9JyBpbiAlcwoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6IGF0dGVtcHRpbmcgZnJlZSBvbiBhZGRyZXNzIHdoaWNoIHdhcyBub3QgbWFsbG9jKCktZWQ6ICVwIGluIHRocmVhZCAlcwoARHluSW5pdFBvaXNvbiBtb2R1bGU6ICVzCgBUJWQ6IEZha2VTdGFjayBkZXN0cm95ZWQ6ICVzCgAlczogRVJST1I6ICVzCgBERURVUF9UT0tFTjogJXMKAFNsZWVwaW5nIGZvciAldSBzZWNvbmQocykgJXMKACAgWzJdIHNpemU9JXpkICclcycgJXMKACAgWzFdIHNpemU9JXpkICclcycgJXMKACAgICAlcwoAVCVkIFRTRER0b3IKAEVSUk9SOiBGYWlsZWQgdG8gbW1hcAoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6ICVzOiBtZW1vcnkgcmFuZ2VzIFslcCwlcCkgYW5kIFslcCwgJXApIG92ZXJsYXAKACVzIEdsb2JhbFslcF06IGJlZz0lcCBzaXplPSV6dS8lenUgbmFtZT0lcyBtb2R1bGU9JXMgZHluX2luaXQ9JXp1IG9kcl9pbmRpY2F0b3I9JXAKAFQlZDogc3RhY2sgWyVwLCVwKSBzaXplIDB4JXp4OyBsb2NhbD0lcAoAX19sc2FuX2lnbm9yZV9vYmplY3QoKTogaWdub3JpbmcgaGVhcCBvYmplY3QgYXQgJXAKAF9fbHNhbl9pZ25vcmVfb2JqZWN0KCk6IG5vIGhlYXAgb2JqZWN0IGZvdW5kIGF0ICVwCgBFUlJPUjogJXMgZmFpbGVkIHRvIGRlYWxsb2NhdGUgMHglenggKCV6ZCkgYnl0ZXMgYXQgYWRkcmVzcyAlcAoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6ICVzIG9uIGFkZHJlc3MgJXAgYXQgcGMgJXAgYnAgJXAgc3AgJXAKAGNvbnRpZ3VvdXNfY29udGFpbmVyOiAlcCAlcCAlcCAlcAoAPT09IElEICVkOyAlcCAlcAoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6ICVzOiAlcCAlcAoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6ICVzICglcyB2cyAlcykgb24gJXAKAFNldEN1cnJlbnRUaHJlYWQ6ICVwIGZvciB0aHJlYWQgJXAKAEVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiBhdHRlbXB0aW5nIHRvIGNhbGwgbWFsbG9jX3VzYWJsZV9zaXplKCkgZm9yIHBvaW50ZXIgd2hpY2ggaXMgbm90IG93bmVkOiAlcAoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6IGF0dGVtcHRpbmcgdG8gY2FsbCBfX3Nhbml0aXplcl9nZXRfYWxsb2NhdGVkX3NpemUoKSBmb3IgcG9pbnRlciB3aGljaCBpcyBub3Qgb3duZWQ6ICVwCgBFUlJPUjogQWRkcmVzc1Nhbml0aXplcjogYmFkIHBhcmFtZXRlcnMgdG8gX19zYW5pdGl6ZXJfYW5ub3RhdGVfY29udGlndW91c19jb250YWluZXI6CiAgICAgIGJlZyAgICAgOiAlcAogICAgICBlbmQgICAgIDogJXAKICAgICAgb2xkX21pZCA6ICVwCiAgICAgIG5ld19taWQgOiAlcAoAU2FuaXRpemVyQ292ZXJhZ2U6ICVzOiAlemQgUENzIHdyaXR0ZW4KAG1pbmltYWxfbnVtX2xlbmd0aCA8IGtNYXhMZW4KAERlYWN0aXZhdGluZyBBU2FuCgBBY3RpdmF0aW5nIEFTYW4KAEhJTlQ6IHRoaXMgbWF5IGJlIGEgZmFsc2UgcG9zaXRpdmUgaWYgeW91ciBwcm9ncmFtIHVzZXMgc29tZSBjdXN0b20gc3RhY2sgdW53aW5kIG1lY2hhbmlzbSwgc3dhcGNvbnRleHQgb3IgdmZvcmsKACVzOiBwbGVhc2UgdXNlIGVpdGhlciAncXVhcmFudGluZV9zaXplJyAoZGVwcmVjYXRlZCkgb3IgcXVhcmFudGluZV9zaXplX21iLCBidXQgbm90IGJvdGgKACFoYXZlX2xlbmd0aAoAYWJzb2x1dGVfdmFsdWUgfHwgIW5lZ2F0aXZlCgBiYXNlID09IDEwIHx8ICFuZWdhdGl2ZQoAICBjb3VudCAgICAgIGJ5dGVzIHRlbXBsYXRlCgBmYWxzZQoAQWRkcmVzc1Nhbml0aXplciBJbml0IGRvbmUKAFRoaXMgbWF5IGhhcHBlbiBpZiBhbm90aGVyIGdsb2JhbCB3aXRoIHRoZSBzYW1lIG5hbWUKAHVuYWNjZXNzaWJsZQoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6IHNwZWNpZmllZCBSU1MgbGltaXQgZXhjZWVkZWQsIGN1cnJlbnRseSBzZXQgdG8gc29mdF9yc3NfbGltaXRfbWI9JXpkCgBhc2FuX21hcHBpbmcuaDolemQgLS0gJXpkCgBidWZmIDw9IGJ1ZmZfZW5kCgBXQVJOSU5HOiAlczogTGFyZ2VNbWFwQWxsb2NhdG9yIGFsbG9jYXRpb24gb3ZlcmZsb3c6IDB4JXp4IGJ5dGVzIHdpdGggMHglenggYWxpZ25tZW50IHJlcXVlc3RlZAoAV0FSTklORzogJXM6IENvbWJpbmVkQWxsb2NhdG9yIGFsbG9jYXRpb24gb3ZlcmZsb3c6IDB4JXp4IGJ5dGVzIHdpdGggMHglenggYWxpZ25tZW50IHJlcXVlc3RlZAoAJXM6IFN0YWNrRGVwb3QgY29tcHJlc3Npb24gdGhyZWFkIHN0YXJ0ZWQKAFQlZCBleGl0ZWQKAFN0YXRzOiBTdGFja0RlcG90OiAlemQgaWRzOyAlemRNIGFsbG9jYXRlZAoAX19sc2FuX2lnbm9yZV9vYmplY3QoKTogaGVhcCBvYmplY3QgYXQgJXAgaXMgYWxyZWFkeSBiZWluZyBpZ25vcmVkCgAlczogU3RhY2tEZXBvdCBjb21wcmVzc2lvbiB0aHJlYWQgc3RvcHBlZAoAVW5kbyBhbmQga2VlcCBibG9jayB1bnBhY2tlZAoAIGNyZWF0ZWQgYnkgdW5rbm93biB0aHJlYWQKAEdsb2JhbCBxdWFyYW50aW5lIHN0YXRzOiBiYXRjaGVzOiAlemQ7IGJ5dGVzOiAlemQgKHVzZXI6ICV6ZCk7IGNodW5rczogJXpkIChjYXBhY2l0eTogJXpkKTsgJWQlJSBjaHVua3MgdXNlZDsgJWQlJSBtZW1vcnkgb3ZlcmhlYWQKAHF1YXJhbnRpbmVfc2l6ZV9tYiAlZCwgdGhyZWFkX2xvY2FsX3F1YXJhbnRpbmVfc2l6ZV9rYiAlZCwgbWF4X3JlZHpvbmUgJWQsIHBvaXNvbl9oZWFwICVkLCBtYWxsb2NfY29udGV4dF9zaXplICVkLCBhbGxvY19kZWFsbG9jX21pc21hdGNoICVkLCBhbGxvY2F0b3JfbWF5X3JldHVybl9udWxsICVkLCBjb3ZlcmFnZSAlZCwgY292ZXJhZ2VfZGlyICVzLCBhbGxvY2F0b3JfcmVsZWFzZV90b19vc19pbnRlcnZhbF9tcyAlZAoARmFpbGVkIHRvIHJlYWQgb3B0aW9ucyBmcm9tICclcyc6IGVycm9yICVkCgBFUlJPUjogJXMgc2V0cmxpbWl0KCkgZmFpbGVkICVkCgBFUlJPUjogJXMgZ2V0cmxpbWl0KCkgZmFpbGVkICVkCgAgIGxvY2F0aW9uOiBuYW1lPSVzLCAlZAoAKHRvdGFsX21tYXBlZCA+PiAyMCkgPCBjb21tb25fZmxhZ3MoKS0+bW1hcF9saW1pdF9tYgoAUXVhcmFudGluZSBsaW1pdHM6IGdsb2JhbDogJXpkTWI7IHRocmVhZCBsb2NhbDogJXpkS2IKAEFCT1JUSU5HCgBQYWNrZWQgYmxvY2sgb2YgJXp1IEtpQiB0byAlenUgS2lCCgAKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KACAgcmVnaXN0ZXJlZCBhdDoKAFRoZXNlIGdsb2JhbHMgd2VyZSByZWdpc3RlcmVkIGF0IHRoZXNlIHBvaW50czoKAEFkZHJlc3NTYW5pdGl6ZXIgZXhpdCBzdGF0czoKAFNoYWRvdyBieXRlcyBhcm91bmQgdGhlIGJ1Z2d5IGFkZHJlc3M6CgBBY3RpdmF0ZWQgd2l0aCBmbGFnczoKAEF2YWlsYWJsZSBmbGFncyBmb3IgJXM6CgBFUlJPUjogQWRkcmVzc1Nhbml0aXplcjogYXR0ZW1wdGluZyAlcyBvbiAlcCBpbiB0aHJlYWQgJXM6CgBFUlJPUjogQWRkcmVzc1Nhbml0aXplcjogJXMgb24gJXAgaW4gdGhyZWFkICVzOgoAJXMgbGVhayBvZiAlenUgYnl0ZShzKSBpbiAlenUgb2JqZWN0KHMpIGFsbG9jYXRlZCBmcm9tOgoAT2JqZWN0cyBsZWFrZWQgYWJvdmU6CgAgY3JlYXRlZCBieSAlcyBoZXJlOgoAJXMgIG9iamVjdCBwYXNzZWQgdG8gZGVsZXRlIGhhcyB3cm9uZyB0eXBlOgoAU3VwcHJlc3Npb25zIHVzZWQ6CgAgIFsyXToKACAgWzFdOgoAU2hhZG93IGJ5dGUgbGVnZW5kIChvbmUgc2hhZG93IGJ5dGUgcmVwcmVzZW50cyAlZCBhcHBsaWNhdGlvbiBieXRlcyk6CgAgIFRoaXMgZnJhbWUgaGFzICV6dSBvYmplY3Qocyk6CgBUaGUgJXp1IHRvcCBsZWFrKHMpOgoAV0FSTklORzogZm91bmQgJWQgdW5yZWNvZ25pemVkIGZsYWcocyk6CgBFUlJPUjogQWRkcmVzc1Nhbml0aXplcjogJXMgKCVwKToKAFdBUk5JTkc6IEFTYW4gaXMgaWdub3JpbmcgcmVxdWVzdGVkIF9fYXNhbl9oYW5kbGVfbm9fcmV0dXJuOiBzdGFjayB0eXBlOiAlcyB0b3A6ICVwOyBib3R0b20gJXA7IHNpemU6ICVwICglemQpCkZhbHNlIHBvc2l0aXZlIGVycm9yIHJlcG9ydHMgbWF5IGZvbGxvdwpGb3IgZGV0YWlscyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9zYW5pdGl6ZXJzL2lzc3Vlcy8xODkKAGJhc2UgPT0gMTAgfHwgYmFzZSA9PSAxNgoAd2FybmluZzogdW5zdXBwb3J0ZWQgc3lzY2FsbDogX19zeXNjYWxsX3BybGltaXQ2NAoASElOVDogRm9yIGRlYnVnZ2luZywgdHJ5IHNldHRpbmcgZW52aXJvbm1lbnQgdmFyaWFibGUgTFNBTl9PUFRJT05TPXZlcmJvc2l0eT0xOmxvZ190aHJlYWRzPTEKAEhJTlQ6IGlmIHlvdSBkb24ndCBjYXJlIGFib3V0IHRoZXNlIGVycm9ycyB5b3UgbWF5IHNldCBhbGxvY2F0b3JfbWF5X3JldHVybl9udWxsPTEKAEhJTlQ6IGlmIHlvdSBkb24ndCBjYXJlIGFib3V0IHRoZXNlIGVycm9ycyB5b3UgbWF5IHNldCBBU0FOX09QVElPTlM9ZGV0ZWN0X29kcl92aW9sYXRpb249MAoASElOVDogaWYgeW91IGRvbid0IGNhcmUgYWJvdXQgdGhlc2UgZXJyb3JzIHlvdSBtYXkgc2V0IEFTQU5fT1BUSU9OUz1uZXdfZGVsZXRlX3R5cGVfbWlzbWF0Y2g9MAoASElOVDogaWYgeW91IGRvbid0IGNhcmUgYWJvdXQgdGhlc2UgZXJyb3JzIHlvdSBtYXkgc2V0IEFTQU5fT1BUSU9OUz1hbGxvY19kZWFsbG9jX21pc21hdGNoPTAKACVzOiB0aHJlYWRfbG9jYWxfcXVhcmFudGluZV9zaXplX2tiIGNhbiBiZSBzZXQgdG8gMCBvbmx5IHdoZW4gcXVhcmFudGluZV9zaXplX21iIGlzIHNldCB0byAwCgBidWZmX2xlbmd0aCA+IDAKAG1vZHVsZXNfLnNpemUoKSA+IDAKAFRocmVhZCAlbGx1IG5vdCBmb3VuZCBpbiByZWdpc3RyeS4KAEhJTlQ6IGlmIHlvdSBkb24ndCBjYXJlIGFib3V0IHRoZXNlIGVycm9ycyB5b3UgbWF5IHNldCBBU0FOX09QVElPTlM9ZGV0ZWN0X2NvbnRhaW5lcl9vdmVyZmxvdz0wLgpJZiB5b3Ugc3VzcGVjdCBhIGZhbHNlIHBvc2l0aXZlIHNlZSBhbHNvOiBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL3Nhbml0aXplcnMvd2lraS9BZGRyZXNzU2FuaXRpemVyQ29udGFpbmVyT3ZlcmZsb3cuCgAlcCBpcyBwb2lzb25lZDogaWdub3JpbmcgJXAgcG9pbnRpbmcgaW50byBjaHVuayAlcC0lcCBvZiBzaXplICV6dS4KACVwOiBmb3VuZCAlcCBwb2ludGluZyBpbnRvIGNodW5rICVwLSVwIG9mIHNpemUgJXp1LgoAU3VwcHJlc3NlZDogY2h1bmsgJXAtJXAgb2Ygc2l6ZSAlenUuCgBJZ25vcmVkOiBjaHVuayAlcC0lcCBvZiBzaXplICV6dS4KAFRoZSBzaWduYWwgaXMgY2F1c2VkIGJ5IGEgJXMgbWVtb3J5IGFjY2Vzcy4KAFByb2Nlc3NpbmcgcGxhdGZvcm0tc3BlY2lmaWMgYWxsb2NhdGlvbnMuCgBidXQgQWRkcmVzc1Nhbml0aXplciBjYW4gbm90IHByb3ZpZGUgbW9yZSBkZXRhaWxzLgoAU2Nhbm5pbmcgbGVha2VkIGNodW5rcy4KAExlYWtTYW5pdGl6ZXI6IER5bmFtaWMgbGlua2VyIG5vdCBmb3VuZC4gVExTIGFuZCBvdGhlciBhbGxvY2F0aW9ucyBvcmlnaW5hdGluZyBmcm9tIGxpbmtlciBtaWdodCBiZSBmYWxzZWx5IHJlcG9ydGVkIGFzIGxlYWtzLgoAICBzaXplIG9mIHRoZSBhbGxvY2F0ZWQgdHlwZTogICAlemQgYnl0ZXM7CiAgc2l6ZSBvZiB0aGUgZGVhbGxvY2F0ZWQgdHlwZTogJXpkIGJ5dGVzLgoAICBhbGlnbm1lbnQgb2YgdGhlIGFsbG9jYXRlZCB0eXBlOiAgICVzOwogIGFsaWdubWVudCBvZiB0aGUgZGVhbGxvY2F0ZWQgdHlwZTogJXMuCgBMZWFrU2FuaXRpemVyIGhhcyBlbmNvdW50ZXJlZCBhIGZhdGFsIGVycm9yLgoAU3RhY2sgYXQgJXAtJXAuCgBUTFMgYXQgJXAtJXAuCgAlcDogc2tpcHBpbmcgYmVjYXVzZSBpdCBvdmVybGFwcyB0aGUgY2FjaGUgJXAtJXAuCgBTY2FubmluZyAlcyByYW5nZSAlcC0lcC4KAEFkZHJlc3MgJXAgaXMgYSB3aWxkIHBvaW50ZXIgaW5zaWRlIG9mIGFjY2VzcyByYW5nZSBvZiBzaXplICVwLgoAJXMgY2FuIG5vdCBwcm92aWRlIGFkZGl0aW9uYWwgaW5mby4KAE9yIHRoZSBnbG9iYWwgY29tZXMgZnJvbSBhIEMgZmlsZSBidWlsdCB3L28gLWZuby1jb21tb24uCgBXQVJOSU5HOiBMZWFrU2FuaXRpemVyIGdhdmUgdXAgb24gaW5kaXJlY3QgbGVha3Mgc3VwcHJlc3Npb24uCgBGQVRBTDogSW50ZXJuYWwgZXJyb3I6ICVzJ3MgYWxsb2NhdG9yIGZhaWxlZCB0byBhbGxvY2F0ZSBhIHRyYW5zZmVyIGJhdGNoLgoAJXM6IFRocmVhZCBsaW1pdCAoJXUgdGhyZWFkcykgZXhjZWVkZWQuIER5aW5nLgoAcmVzaWRlcyBpbiBhbm90aGVyIG5vbi1pbnN0cnVtZW50ZWQgbW9kdWxlLgoAV0FSTklORzogc3RhY2sgcG9pbnRlciBub3QgaW4gc3RhY2sgcmFuZ2UuCgBIaW50OiBhZGRyZXNzIHBvaW50cyB0byB0aGUgemVybyBwYWdlLgoASGludDogcGMgcG9pbnRzIHRvIHRoZSB6ZXJvIHBhZ2UuCgBUb28gbWFueSBsZWFrcyEgT25seSB0aGUgZmlyc3QgJXp1IGxlYWtzIGVuY291bnRlcmVkIHdpbGwgYmUgcmVwb3J0ZWQuCgBIaW50OiB0aGlzIGZhdWx0IHdhcyBjYXVzZWQgYnkgYSBkZXJlZmVyZW5jZSBvZiBhIGhpZ2ggdmFsdWUgYWRkcmVzcyAoc2VlIHJlZ2lzdGVyIHZhbHVlcyBiZWxvdykuICBEaXNhc3NlbWJsZSB0aGUgcHJvdmlkZWQgcGMgdG8gbGVhcm4gd2hpY2ggcmVnaXN0ZXIgd2FzIHVzZWQuCgBfX2xzYW5fdW5yZWdpc3Rlcl9yb290X3JlZ2lvbigpOiByZWdpb24gYXQgJXAgb2Ygc2l6ZSAlenUgaGFzIG5vdCBiZWVuIHJlZ2lzdGVyZWQuCgBUaGUgZm9sbG93aW5nIGdsb2JhbCB2YXJpYWJsZSBpcyBub3QgcHJvcGVybHkgYWxpZ25lZC4KAFN5bWJvbGl6ZXIgaXMgZGlzYWJsZWQuCgBBZGRyZXNzICVwIGlzIGxvY2F0ZWQgaW4gdGhlICVzIGFyZWEuCgBPbmx5IGFmZmVjdHMgYSA2NC1iaXQgYWxsb2NhdG9yLiBJZiBzZXQsIHRyaWVzIHRvIHJlbGVhc2UgdW51c2VkIG1lbW9yeSB0byB0aGUgT1MsIGJ1dCBub3QgbW9yZSBvZnRlbiB0aGFuIHRoaXMgaW50ZXJ2YWwgKGluIG1pbGxpc2Vjb25kcykuIE5lZ2F0aXZlIHZhbHVlcyBtZWFuIGRvIG5vdCBhdHRlbXB0IHRvIHJlbGVhc2UgbWVtb3J5IHRvIHRoZSBPUy4KAEVSUk9SOiBQYXRoIGlzIHRvbyBsb25nOiAlYyVjJWMlYyVjJWMlYyVjLi4uCgBPbWl0dGluZyAlenUgbW9yZSBsZWFrKHMpLgoAQWRkcmVzc1Nhbml0aXplciBjYW4gbm90IGRlc2NyaWJlIGFkZHJlc3MgaW4gbW9yZSBkZXRhaWwgKHdpbGQgbWVtb3J5IGFjY2VzcyBzdXNwZWN0ZWQpLgoAVW5tYXRjaGVkIGNhbGwgdG8gX19sc2FuX2VuYWJsZSgpLgoASW4gZWl0aGVyIGNhc2UgdGhpcyBpcyBsaWtlbHkgYW4gT0RSIHZpb2xhdGlvbiBidWcsCgBJc1Bvd2VyT2ZUd28oYm91bmRhcnkpCgAlczogQ0hFQ0sgZmFpbGVkOiAlczolZCAiJXMiICgweCV6eCwgMHglengpICh0aWQ9JXUpCgAlcCAoJXp1IGJ5dGVzKQoAUm9vdCByZWdpb24gJXAtJXAgaW50ZXJzZWN0cyB3aXRoIG1hcHBlZCByZWdpb24gJXAtJXAgKCVzKQoAU0NBUklORVNTOiAlZCAoJXMpCgBFUlJPUjogQWRkcmVzc1Nhbml0aXplcjogcmVxdWVzdGVkIGFsbG9jYXRpb24gc2l6ZSAweCV6eCAoMHglenggYWZ0ZXIgYWRqdXN0bWVudHMgZm9yIGFsaWdubWVudCwgcmVkIHpvbmVzIGV0Yy4pIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZSBvZiAweCV6eCAodGhyZWFkICVzKQoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6IGludmFsaWQgYWxpZ25tZW50IHJlcXVlc3RlZCBpbiBhbGlnbmVkX2FsbG9jOiAlemQsIGFsaWdubWVudCBtdXN0IGJlIGEgcG93ZXIgb2YgdHdvIGFuZCB0aGUgcmVxdWVzdGVkIHNpemUgMHglenggbXVzdCBiZSBhIG11bHRpcGxlIG9mIGFsaWdubWVudCAodGhyZWFkICVzKQoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6IHB2YWxsb2MgcGFyYW1ldGVycyBvdmVyZmxvdzogc2l6ZSAweCV6eCByb3VuZGVkIHVwIHRvIHN5c3RlbSBwYWdlIHNpemUgMHglenggY2Fubm90IGJlIHJlcHJlc2VudGVkIGluIHR5cGUgc2l6ZV90ICh0aHJlYWQgJXMpCgBFUlJPUjogQWRkcmVzc1Nhbml0aXplcjogcmVhbGxvY2FycmF5IHBhcmFtZXRlcnMgb3ZlcmZsb3c6IGNvdW50ICogc2l6ZSAoJXpkICogJXpkKSBjYW5ub3QgYmUgcmVwcmVzZW50ZWQgaW4gdHlwZSBzaXplX3QgKHRocmVhZCAlcykKAEVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiBjYWxsb2MgcGFyYW1ldGVycyBvdmVyZmxvdzogY291bnQgKiBzaXplICglemQgKiAlemQpIGNhbm5vdCBiZSByZXByZXNlbnRlZCBpbiB0eXBlIHNpemVfdCAodGhyZWFkICVzKQoARVJST1I6IEFkZHJlc3NTYW5pdGl6ZXI6IGludmFsaWQgYWxsb2NhdGlvbiBhbGlnbm1lbnQ6ICV6ZCwgYWxpZ25tZW50IG11c3QgYmUgYSBwb3dlciBvZiB0d28gKHRocmVhZCAlcykKAEVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiBpbnZhbGlkIGFsaWdubWVudCByZXF1ZXN0ZWQgaW4gcG9zaXhfbWVtYWxpZ246ICV6ZCwgYWxpZ25tZW50IG11c3QgYmUgYSBwb3dlciBvZiB0d28gYW5kIGEgbXVsdGlwbGUgb2Ygc2l6ZW9mKHZvaWQqKSA9PSAlemQgKHRocmVhZCAlcykKAAklcwoJCS0gJXMgKEN1cnJlbnQgVmFsdWUlczogJXMpCgAgJXp1LWJ5dGUgcmVnaW9uIFslcCwlcCkKAFRyeWluZyB0byB1bnBvaXNvbiBtZW1vcnkgcmVnaW9uIFslcCwgJXApCgBUcnlpbmcgdG8gcG9pc29uIG1lbW9yeSByZWdpb24gWyVwLCAlcCkKAEVSUk9SOiBBZGRyZXNzU2FuaXRpemVyOiAlczogKHNpemU9JXpkKQoAICAgICAgKGxvbmdqbXAgYW5kIEMrKyBleGNlcHRpb25zICphcmUqIHN1cHBvcnRl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AAoAAAARAAAAGAAAABkAAAASAAAACwAAABMAAAAaAAAAGwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAAAAAAAAQAAAAgAAAAQAAAACQAAAAIAAAAKAAAAEQAAABIAAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AEG01qqSAQvWBgEAAAAIAAAACQAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAABOU3QzX18yMTJiYXNpY19zdHJpbmdJaE5TXzExY2hhcl90cmFpdHNJaEVFTlNfOWFsbG9jYXRvckloRUVFRQAA8BpLEoCrShJOU3QzX18yMTJiYXNpY19zdHJpbmdJd05TXzExY2hhcl90cmFpdHNJd0VFTlNfOWFsbG9jYXRvckl3RUVFRQAA8BpLEsirShJOU3QzX18yMTJiYXNpY19zdHJpbmdJRHNOU18xMWNoYXJfdHJhaXRzSURzRUVOU185YWxsb2NhdG9ySURzRUVFRQAAAPAaSxIQrEoSTlN0M19fMjEyYmFzaWNfc3RyaW5nSURpTlNfMTFjaGFyX3RyYWl0c0lEaUVFTlNfOWFsbG9jYXRvcklEaUVFRUUAAADwGksSXKxKEk4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWNFRQAA8BpLEqisShJOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lhRUUAAPAaSxLQrEoSTjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJc0VFAADwGksS+KxKEk4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXRFRQAA8BpLEiCtShJOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lpRUUAAPAaSxJIrUoSTjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJakVFAADwGksScK1KEk4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWxFRQAA8BpLEpitShJOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0ltRUUAAPAaSxLArUoS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bno47z/h3h/1nR7vPxW3MQr+Bu8/y6k6N6fx7j8iNBJMpt7uPy2JYWAIzu4/Jyo21dq/7j+CT51WK7TuPylUSN0Hq+4/hVU6sH6k7j/NO39mnqDuP3Rf7Oh1n+4/hwHrcxSh7j8TzkyZiaXuP9ugKkLlrO4/5cXNsDe37j+Q8KOCkcTuP10lPrID1e4/rdNamZ/o7j9HXvvydv/uP5xShd2bGe8/aZDv3CA37z+HpPvcGFjvP1+bezOXfO8/2pCkoq+k7z9ARW5bdtDvPwAAAAAAAOhClCORS/hqrD/zxPpQzr/OP9ZSDP9CLuY/AAAAAAAAOEP+gitlRxVHQJQjkUv4arw+88T6UM6/Lj/WUgz/Qi6WPwBB4IGrkgELlAEvYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvbXVzbC9zcmMvbWF0aC9leHAyZl9kYXRhLmMAL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL3N0ZGlvL2ZmbHVzaC5jAEGAg6uSAQsDcndhAEGgg6uSAQtKL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL3N0ZGlvL19fZmRvcGVuLmMAQYCEq5IBCwNyd2EAQaCEq5IBC/ECL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL3N0ZGlvL2ZvcGVuLmMAL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL2Vudi9fX2Vudmlyb24uYwAvYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvbXVzbC9zcmMvaW50ZXJuYWwvbGliYy5jAC9iL3Mvdy9pci94L3cvaW5zdGFsbC9lbXNjcmlwdGVuL3N5c3RlbS9saWIvcHRocmVhZC9saWJyYXJ5X3B0aHJlYWRfc3R1Yi5jAC9iL3Mvdy9pci94L3cvaW5zdGFsbC9lbXNjcmlwdGVuL3N5c3RlbS9saWIvbGliYy9tdXNsL3NyYy90aW1lL2xvY2FsdGltZS5jAEGgh6uSAQugAr7z+HnsYfY/3qqMgPd71b89iK9K7XH1P9ttwKfwvtK/sBDw8DmV9D9nOlF/rh7Qv4UDuLCVyfM/6SSCptgxy7+lZIgMGQ3zP1h3wApPV8a/oI4LeyJe8j8AgZzHK6rBvz80GkpKu/E/Xg6MznZOur+65YrwWCPxP8wcYVo8l7G/pwCZQT+V8D8eDOE49FKivwAAAAAAAPA/AAAAAAAAAACsR5r9jGDuP4RZ8l2qpao/oGoCH7Ok7D+0LjaqU168P+b8alc2IOs/CNsgd+UmxT8tqqFj0cLpP3BHIg2Gwss/7UF4A+aG6D/hfqDIiwXRP2JIU/XcZ+c/Ce62VzAE1D/vOfr+Qi7mPzSDuEijDtC/agvgC1tX1T8jQQry/v/fvwBBgIqrkgELSi9iL3Mvdy9pci94L3cvaW5zdGFsbC9lbXNjcmlwdGVuL3N5c3RlbS9saWIvbGliYy9tdXNsL3NyYy9tYXRoL2xvZ2ZfZGF0YS5jAEHgiquSAQsEQHdLEgBBgIurkgELRS9iL3Mvdy9pci94L3cvaW5zdGFsbC9lbXNjcmlwdGVuL3N5c3RlbS9saWIvbGliYy9tdXNsL3NyYy9zdGRpby9vZmwuYwBB4IurkgELqAK+8/h57GH2PxkwllvG/t6/PYivSu1x9T+k/NQyaAvbv7AQ8PA5lfQ/e7cfCotB17+FA7iwlcnzP3vPbRrpndO/pWSIDBkN8z8xtvLzmx3Qv6COC3siXvI/8Ho7Gx18yb8/NBpKSrvxP588r5Pj+cK/uuWK8Fgj8T9cjXi/y2C5v6cAmUE/lfA/zl9Htp1vqr8AAAAAAADwPwAAAAAAAAAArEea/Yxg7j899SSfyjizP6BqAh+zpOw/upE4VKl2xD/m/GpXNiDrP9LkxEoLhM4/LaqhY9HC6T8cZcbwRQbUP+1BeAPmhug/+J8bLJyO2D9iSFP13GfnP8x7sU6k4Nw/C25JyRZ20j96xnWgaRnXv926p2wKx94/yPa+SEcV578ruCplRxX3PwBB4I6rkgELkgEvYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvbXVzbC9zcmMvbWF0aC9wb3dmX2RhdGEuYwAvYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL3B0aHJlYWQvcHRocmVhZF9zZWxmX3N0dWIuYwBBgZCrkgELHwEXAh0YEwMeGxkLFAgEDR8WHBIaCgcMFREJBhAFDw4AQcCQq5IBC44BL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL3N0ZGxpYi9xc29ydC5jAC9iL3Mvdy9pci94L3cvaW5zdGFsbC9lbXNjcmlwdGVuL3N5c3RlbS9saWIvbGliYy9tdXNsL3NyYy9wcm5nL3JhbmQuYwBB4JGrkgELBCA2SxIAQYCSq5IBC0gvYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvbXVzbC9zcmMvc3RkaW8vc3RkZXJyLmMAQeCSq5IBCwSAN0sSAEGAk6uSAQtIL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL3N0ZGlvL3N0ZG91dC5jAEHgk6uSAQv5Dk5vIGVycm9yIGluZm9ybWF0aW9uAElsbGVnYWwgYnl0ZSBzZXF1ZW5jZQBEb21haW4gZXJyb3IAUmVzdWx0IG5vdCByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIGRvd24ASG9zdCBpcyB1bnJlYWNoYWJsZQBBZGRyZXNzIGluIHVzZQBCcm9rZW4gcGlwZQBJL08gZXJyb3IATm8gc3VjaCBkZXZpY2Ugb3IgYWRkcmVzcwBCbG9jayBkZXZpY2UgcmVxdWlyZWQATm8gc3VjaCBkZXZpY2UATm90IGEgZGlyZWN0b3J5AElzIGEgZGlyZWN0b3J5AFRleHQgZmlsZSBidXN5AEV4ZWMgZm9ybWF0IGVycm9yAEludmFsaWQgYXJndW1lbnQAQXJndW1lbnQgbGlzdCB0b28gbG9uZwBTeW1ib2xpYyBsaW5rIGxvb3AARmlsZW5hbWUgdG9vIGxvbmcAVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW0ATm8gZmlsZSBkZXNjcmlwdG9ycyBhdmFpbGFibGUAQmFkIGZpbGUgZGVzY3JpcHRvcgBObyBjaGlsZCBwcm9jZXNzAEJhZCBhZGRyZXNzAEZpbGUgdG9vIGxhcmdlAFRvbyBtYW55IGxpbmtzAE5vIGxvY2tzIGF2YWlsYWJsZQBSZXNvdXJjZSBkZWFkbG9jayB3b3VsZCBvY2N1cgBTdGF0ZSBub3QgcmVjb3ZlcmFibGUAUHJldmlvdXMgb3duZXIgZGllZABPcGVyYXRpb24gY2FuY2VsZWQARnVuY3Rpb24gbm90IGltcGxlbWVudGVkAE5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlAElkZW50aWZpZXIgcmVtb3ZlZABEZXZpY2Ugbm90IGEgc3RyZWFtAE5vIGRhdGEgYXZhaWxhYmxlAERldmljZSB0aW1lb3V0AE91dCBvZiBzdHJlYW1zIHJlc291cmNlcwBMaW5rIGhhcyBiZWVuIHNldmVyZWQAUHJvdG9jb2wgZXJyb3IAQmFkIG1lc3NhZ2UARmlsZSBkZXNjcmlwdG9yIGluIGJhZCBzdGF0ZQBOb3QgYSBzb2NrZXQARGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZABNZXNzYWdlIHRvbyBsYXJnZQBQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXQAUHJvdG9jb2wgbm90IGF2YWlsYWJsZQBQcm90b2NvbCBub3Qgc3VwcG9ydGVkAFNvY2tldCB0eXBlIG5vdCBzdXBwb3J0ZWQATm90IHN1cHBvcnRlZABQcm90b2NvbCBmYW1pbHkgbm90IHN1cHBvcnRlZABBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sAEFkZHJlc3Mgbm90IGF2YWlsYWJsZQBOZXR3b3JrIGlzIGRvd24ATmV0d29yayB1bnJlYWNoYWJsZQBDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmsAQ29ubmVjdGlvbiBhYm9ydGVkAE5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGUAU29ja2V0IGlzIGNvbm5lY3RlZABTb2NrZXQgbm90IGNvbm5lY3RlZABDYW5ub3Qgc2VuZCBhZnRlciBzb2NrZXQgc2h1dGRvd24AT3BlcmF0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3MAT3BlcmF0aW9uIGluIHByb2dyZXNzAFN0YWxlIGZpbGUgaGFuZGxlAFJlbW90ZSBJL08gZXJyb3IAUXVvdGEgZXhjZWVkZWQATm8gbWVkaXVtIGZvdW5kAFdyb25nIG1lZGl1bSB0eXBlAE11bHRpaG9wIGF0dGVtcHRlZABSZXF1aXJlZCBrZXkgbm90IGF2YWlsYWJsZQBLZXkgaGFzIGV4cGlyZWQAS2V5IGhhcyBiZWVuIHJldm9rZWQAS2V5IHdhcyByZWplY3RlZCBieSBzZXJ2aWNlAEGipquSAQuWAaUCWwDwAbUFjAUlAYMGHQOUBP8AxwMxAwsGvAGPAX8DygQrANoGrwBCA04D3AEOBBUAoQYNAZQCCwI4BmQCvAL/Al0D5wQLB88CywXvBdsF4QIeBkUChQCCAmwDbwTxAPMDGAXZANoDTAZUAnsBnQO9BAAAUQAVArsAswNtAP8BhQQvBfkEOABlAUYBnwC3BqgBcwJTAQBB6KerkgELDCEEAAAAAAAAAAAvAgBBiKirkgELBjUERwRWBABBnqirkgELAqAEAEGyqKuSAQsiRgVgBW4FYQYAAM8BAAAAAAAAAADJBukG+QYeBzkHSQdeBwBBoKmrkgELlAEvYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvbXVzbC9zcmMvZXJybm8vc3RyZXJyb3IuYwAvYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvbXVzbC9zcmMvc3RyaW5nL3N0cnRvay5jAEHAqquSAQsJLSsgICAwWDB4AEHgqquSAQsGKG51bGwpAEGAq6uSAQtBGQAKABkZGQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAAZABEKGRkZAwoHAAEACQsYAAAJBgsAAAsABhkAAAAZGRkAQdGrq5IBCyEOAAAAAAAAAAAZAAoNGRkZAA0AAAIACQ4AAAAJAA4AAA4AQYusq5IBCwEMAEGXrKuSAQsVEwAAAAATAAAAAAkMAAAAAAAMAAAMAEHFrKuSAQsBEABB0ayrkgELFQ8AAAAEDwAAAAAJEAAAAAAAEAAAEABB/6yrkgELARIAQYutq5IBCx4RAAAAABEAAAAACRIAAAAAABIAABIAABoAAAAaGhoAQcKtq5IBCw4aAAAAGhoaAAAAAAAACQBB862rkgELARQAQf+tq5IBCxUXAAAAABcAAAAACRQAAAAAABQAABQAQa2uq5IBCwEWAEG5rquSAQsVFQAAAAAVAAAAAAkWAAAAAAAWAAAWAEHAr6uSAQsQMDEyMzQ1Njc4OUFCQ0RFRgBB4K+rkgELEi0wWCswWCAwWC0weCsweCAweABBoLCrkgELA2luZgBBwLCrkgELA0lORgBB4LCrkgELA25hbgBBgLGrkgELA05BTgBBoLGrkgELAS4AQcCxq5IBC0ovYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvbXVzbC9zcmMvc3RkaW8vdmZwcmludGYuYwBBxLKrkgELAogBAEHssquSAQsI//////////8AQYS0q5IBCwKIAQBBrLSrkgELCP//////////AEGgtauSAQtLL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL3N0ZGlvL3ZzbnByaW50Zi5jAEGAtquSAQsIaW5maW5pdHkAQaC2q5IBCwNuYW4AQcC2q5IBCxDRdJ4AV529KoBwUg///z4nAEHgtquSAQsgCgAAAGQAAADoAwAAECcAAKCGAQBAQg8AgJaYAADh9QUAQaC3q5IBCwkYAAAANQAAAHEAQcC3q5IBCwxr////zvv//5K///8AQeC3q5IBC04vYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvbXVzbC9zcmMvaW50ZXJuYWwvZmxvYXRzY2FuLmMAQcC4q5IBC4EC/////////////////////////////////////////////////////////////////wABAgMEBQYHCAn/////////CgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiP///////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8AQaG7q5IBCwcBAgQHAwYFAEHAu6uSAQtML2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL2ludGVybmFsL2ludHNjYW4uYwBBoLyrkgELzAECAADAAwAAwAQAAMAFAADABgAAwAcAAMAIAADACQAAwAoAAMALAADADAAAwA0AAMAOAADADwAAwBAAAMARAADAEgAAwBMAAMAUAADAFQAAwBYAAMAXAADAGAAAwBkAAMAaAADAGwAAwBwAAMAdAADAHgAAwB8AAMAAAACzAQAAwwIAAMMDAADDBAAAwwUAAMMGAADDBwAAwwgAAMMJAADDCgAAwwsAAMMMAADDDQAA0w4AAMMPAADDAAAMuwEADMMCAAzDAwAMwwQADNsAQaC+q5IBC7QLL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL211c2wvc3JjL211bHRpYnl0ZS9pbnRlcm5hbC5jAC9iL3Mvdy9pci94L3cvaW5zdGFsbC9lbXNjcmlwdGVuL3N5c3RlbS9saWIvbGliYy9tdXNsL3NyYy9tdWx0aWJ5dGUvbWJydG93Yy5jAAAAAAAAAAACAAAAAwAAAAUAAAAHAAAACwAAAA0AAAARAAAAEwAAABcAAAAdAAAAHwAAACUAAAApAAAAKwAAAC8AAAA1AAAAOwAAAD0AAABDAAAARwAAAEkAAABPAAAAUwAAAFkAAABhAAAAZQAAAGcAAABrAAAAbQAAAHEAAAB/AAAAgwAAAIkAAACLAAAAlQAAAJcAAACdAAAAowAAAKcAAACtAAAAswAAALUAAAC/AAAAwQAAAMUAAADHAAAA0wAAAAEAAAALAAAADQAAABEAAAATAAAAFwAAAB0AAAAfAAAAJQAAACkAAAArAAAALwAAADUAAAA7AAAAPQAAAEMAAABHAAAASQAAAE8AAABTAAAAWQAAAGEAAABlAAAAZwAAAGsAAABtAAAAcQAAAHkAAAB/AAAAgwAAAIkAAACLAAAAjwAAAJUAAACXAAAAnQAAAKMAAACnAAAAqQAAAK0AAACzAAAAtQAAALsAAAC/AAAAwQAAAMUAAADHAAAA0QAAAAAAAAD84koSlAEAAJUBAACWAQAAlwEAAJgBAACZAQAAmgEAAJsBAACcAQAAnQEAAJ4BAACfAQAAoAEAAKEBAAAIAAAAAAAAADTjShKiAQAAowEAAPj////4////NONKEqQBAAClAQAAjOFKEqDhShIEAAAAAAAAAHzjShKmAQAApwEAAPz////8////fONKEqgBAACpAQAAvOFKEtDhShIAAAAAEORKEqoBAACrAQAArAEAAK0BAACuAQAArwEAALABAACxAQAAsgEAALMBAAC0AQAAtQEAALYBAAC3AQAACAAAAAAAAABI5EoSuAEAALkBAAD4////+P///0jkShK6AQAAuwEAACziShJA4koSBAAAAAAAAACQ5EoSvAEAAL0BAAD8/////P///5DkShK+AQAAvwEAAFziShJw4koSAAAAALziShLAAQAAwQEAAE5TdDNfXzI5YmFzaWNfaW9zSWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFAAAAGBtLEpDiShLM5EoSTlN0M19fMjE1YmFzaWNfc3RyZWFtYnVmSWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFAAAAAPAaSxLI4koSTlN0M19fMjEzYmFzaWNfaXN0cmVhbUljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQAAdBtLEgTjShIAAAAAAQAAALziShID9P//TlN0M19fMjEzYmFzaWNfb3N0cmVhbUljTlNfMTFjaGFyX3RyYWl0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pgIAAKcCAAAAAAAAwBVLEhYAAADqAgAA6wIAAE5TdDNfXzIxNF9fc2hhcmVkX2NvdW50RQAAAADwGksSpBVLEk5TdDNfXzIxOV9fc2hhcmVkX3dlYWtfY291bnRFAAAAdBtLEsgVSxIAAAAAAQAAAMAVSxIAAAAAAv8ABGQAIAAABP//BgABAAEAAQD//wH/Af//////Af8B/wH/Af8B/wH/Af8B//////8K/yAA//8D/wH/BP8eAAABBf//////YwAACGMA6AMCAAAA//////8AAAAB/wH//////////////wBB+ayskgELAQQAQYatrJIBC0QB/wH//////wABIAAEAIAAAAj//wH/Af////////8B/wb/B/8I/wn//////7wCvAIBAP//AQABAP//AAD//////////wBB2q2skgELARQAQfqtrJIBCx7//wEACv///////////wH/Af8AAAAAAAAB/wH/Af8AQaqurJIBC0gB/wAAAAAAAAH/Af8BAAAAAQAAAAH//////wAAAAAB////AAAAAP////////////8oAAr//////wEACv////8A//////////8AQdavrJIBCxwB/wH///8BAP//////////////////Cv//////AEHgsKySAQvgCy9iL3Mvdy9pci94L3cvaW5zdGFsbC9lbXNjcmlwdGVuL3N5c3RlbS9saWIvbGliYy9tdXNsL3NyYy9jb25mL3N5c2NvbmYuYwBOMTBfX2N4eGFiaXYxMTZfX3NoaW1fdHlwZV9pbmZvRQAAABgbSxKpGEsSJB1LEk4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAABgbSxLYGEsSzBhLEk4xMF9fY3h4YWJpdjExN19fcGJhc2VfdHlwZV9pbmZvRQAAABgbSxIIGUsSzBhLEk4xMF9fY3h4YWJpdjExOV9fcG9pbnRlcl90eXBlX2luZm9FABgbSxI4GUsSLBlLEk4xMF9fY3h4YWJpdjEyMF9fZnVuY3Rpb25fdHlwZV9pbmZvRQAAAAAYG0sSaBlLEswYSxJOMTBfX2N4eGFiaXYxMjlfX3BvaW50ZXJfdG9fbWVtYmVyX3R5cGVfaW5mb0UAAAAYG0sSnBlLEiwZSxIAAAAAHBpLEu4CAADvAgAA8AIAAPECAADyAgAATjEwX19jeHhhYml2MTIzX19mdW5kYW1lbnRhbF90eXBlX2luZm9FABgbSxL0GUsSzBhLEnYAAADgGUsSKBpLEkRuAADgGUsSNBpLEmIAAADgGUsSQBpLEmMAAADgGUsSTBpLEmgAAADgGUsSWBpLEmEAAADgGUsSZBpLEnMAAADgGUsScBpLEnQAAADgGUsSfBpLEmkAAADgGUsSiBpLEmoAAADgGUsSlBpLEmwAAADgGUsSoBpLEm0AAADgGUsSrBpLEngAAADgGUsSuBpLEnkAAADgGUsSxBpLEmYAAADgGUsS0BpLEmQAAADgGUsS3BpLEgAAAAD8GEsS7gIAAPMCAADwAgAA8QIAAPQCAAD1AgAA9gIAAPcCAAAAAAAAYBtLEu4CAAD4AgAA8AIAAPECAAD0AgAA+QIAAPoCAAD7AgAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAABgbSxI4G0sS/BhLEgAAAAC8G0sS7gIAAPwCAADwAgAA8QIAAPQCAAD9AgAA/gIAAP8CAABOMTBfX2N4eGFiaXYxMjFfX3ZtaV9jbGFzc190eXBlX2luZm9FAAAAGBtLEpQbSxL8GEsSAAAAAFwZSxLuAgAAAAMAAPACAADxAgAAAQMAAAAAAABIHEsSDQAAAAIDAAADAwAAAAAAAHAcSxINAAAABAMAAAUDAAAAAAAAMBxLEg0AAAAGAwAABwMAAFN0OWV4Y2VwdGlvbgAAAADwGksSIBxLElN0OWJhZF9hbGxvYwAAAAAYG0sSOBxLEjAcSxJTdDIwYmFkX2FycmF5X25ld19sZW5ndGgAAAAAGBtLElQcSxJIHEsSAAAAAKAcSxIMAAAACAMAAAkDAABTdDExbG9naWNfZXJyb3IAGBtLEpAcSxIwHEsSAAAAANQcSxIMAAAACgMAAAkDAABTdDEybGVuZ3RoX2Vycm9yAAAAABgbSxLAHEsSoBxLEgAAAAAIHUsSDAAAAAsDAAAJAwAAU3QxMm91dF9vZl9yYW5nZQAAAAAYG0sS9BxLEqAcSxJTdDl0eXBlX2luZm8AAAAA8BpLEhQdSxIAAAAAiB1LEgwDAAANAwAATjExX19zYW5pdGl6ZXIxMUZsYWdIYW5kbGVySWlFRQBOMTFfX3Nhbml0aXplcjE1RmxhZ0hhbmRsZXJCYXNlRQAAAADwGksSXB1LEhgbSxI8HUsSgB1LEgAAAADEHUsSDgMAAA8DAABOMTFfX3Nhbml0aXplcjExRmxhZ0hhbmRsZXJJYkVFABgbSxKkHUsSgB1LEgAAAAAEHksSEAMAABEDAABOMTFfX3Nhbml0aXplcjExRmxhZ0hhbmRsZXJJUEtjRUUAAAAYG0sS4B1LEoAdSxIbyUkSzeVJEibJSRIAAAAAHgVKErMBShIyyUkS/QJKEh4FShI/+EkSW/RJEg0DShIAQdC8rJIBCxBpbnRlcmNlcHRvcl9uYW1lAEHwvKySAQsTaW50ZXJjZXB0b3JfdmlhX2Z1bgBBkL2skgELpgFpbnRlcmNlcHRvcl92aWFfbGliAG9kcl92aW9sYXRpb24AAAAAAAAAIB9LEiADAAAhAwAAIgMAACMDAAAkAwAAJQMAACYDAABONl9fYXNhbjE3QXNhblRocmVhZENvbnRleHRFAE4xMV9fc2FuaXRpemVyMTdUaHJlYWRDb250ZXh0QmFzZUUA8BpLEvUeSxIYG0sS2B5LEhgfSxJ2cHRyX2NoZWNrAEHAvqySAQuuBmxlYWs6KnRsc19nZXRfYWRkcioKAGxlYWsAAAAAAAAAMv//////v8AvYi9zL3cvaXIveC93L2luc3RhbGwvZW1zY3JpcHRlbi9zeXN0ZW0vbGliL2xpYmMvc2lnYWN0aW9uLmMAL2Ivcy93L2lyL3gvdy9pbnN0YWxsL2Vtc2NyaXB0ZW4vc3lzdGVtL2xpYi9saWJjL2Vtc2NyaXB0ZW5fbW1hcC5jAAAAAABcIEsSMgMAADMDAAA0AwAATjExX19zYW5pdGl6ZXIzMFN1c3BlbmRlZFRocmVhZHNMaXN0RW1zY3JpcHRlbkUATjExX19zYW5pdGl6ZXIyMFN1c3BlbmRlZFRocmVhZHNMaXN0RQAAAPAaSxIsIEsSGBtLEvwfSxJUIEsSAAAAAJwgSxI1AwAANgMAAE4xMV9fc2FuaXRpemVyMThGbGFnSGFuZGxlckluY2x1ZGVFABgbSxJ4IEsSgB1LEgAAAADwIEsSNwMAADgDAABOMTFfX3Nhbml0aXplcjExRmxhZ0hhbmRsZXJJTlNfMTZIYW5kbGVTaWduYWxNb2RlRUVFAAAAABgbSxK4IEsSgB1LEgAAAAAsIUsSOQMAADoDAABOMTFfX3Nhbml0aXplcjExRmxhZ0hhbmRsZXJJbUVFABgbSxIMIUsSgB1LEowJURKQCVESiAlREoQJURKUCVESiAlREogJURKACVESFwRKEvcDShJ7A0oSjQNKEtcEShIbBEoSGwRKEnYDShIBAAAAAgAAACAgICAjJW4gJXAgJUYgJUwAAAAAAAAAAAQiSxJAAwAAQQMAAEIDAABDAwAARAMAAE4xMV9fc2FuaXRpemVyMjRFbXNjcmlwdGVuU3ltYm9saXplclRvb2xFAE4xMV9fc2FuaXRpemVyMTRTeW1ib2xpemVyVG9vbEUAAADwGksS2iFLEhgbSxKwIUsS/CFLEjogbmVzdGVkIGJ1ZyBpbiB0aGUgc2FtZSB0aHJlYWQsIGFib3J0aW5nLgoAAHN0YWNrLW92ZXJmbG93AAAAAAAYH0sSIAMAACEDAABFAwAAIwMAAEYDAAAlAwAAJgMAQYDFrJIBCxQBAAAAIUBJEgpDSRI5SEkS5ElJEgBBoMWskgELBP3///8AQcDFrJIBC/QfQG9LEhQAAABAAAAAh9JJEkObShIBAAAAAAAAAPhvSxKApUkSIQAAAGAAAADB1kkSQ5tKEgAAAAAAAAAA/////6AiSxIEAAAAIAAAANMDShJDm0oSAAAAAAAAAAD/////4KVJEicAAABgAAAACx1KEkObShIAAAAAAAAAAP////9ApkkSEgAAAEAAAAB2HEoSQ5tKEgAAAAAAAAAA/////4CmSRIbAAAAQAAAAP8aShJDm0oSAAAAAAAAAAD/////wKZJEgMAAAAgAAAAGxlKEkObShIAAAAAAAAAAP/////gpkkSBgAAACAAAAB+FUoSQ5tKEgAAAAAAAAAA/////wCnSRIGAAAAIAAAAEgUShJDm0oSAAAAAAAAAAD/////IKdJEgUAAAAgAAAAMBJKEkObShIAAAAAAAAAAP////9Ap0kSBQAAACAAAADFEEoSQ5tKEgAAAAAAAAAA/////2CnSRIYAAAAQAAAADEJShJDm0oSAAAAAAAAAAD/////oKdJEi8AAABgAAAA6R5KEkObShIAAAAAAAAAAP////8AqEkSJQAAAGAAAAD6HEoSQ5tKEgAAAAAAAAAA/////2CoSRIkAAAAYAAAABwcShJDm0oSAAAAAAAAAAD/////wKhJEiYAAABgAAAA7hpKEkObShIAAAAAAAAAAP////8gqUkSOgAAAGAAAAB/FkoSQ5tKEgAAAAAAAAAA/////4BvSxIEAAAAIAAAABQFShJDm0oSAAAAAAAAAAD/////gKlJEhwAAABAAAAAbRVKEkObShIAAAAAAAAAAP/////AqUkSGgAAAEAAAAA3FEoSQ5tKEgAAAAAAAAAA/////wCqSRIWAAAAQAAAAAgSShJDm0oSAAAAAAAAAAD/////QKpJEhEAAABAAAAA4QpKEkObShIAAAAAAAAAAP////+AqkkSBgAAACAAAAAgCUoSQ5tKEgAAAAAAAAAA/////6CqSRIlAAAAYAAAANgeShJDm0oSAAAAAAAAAAD/////AKtJEhYAAABAAAAA2RxKEkObShIAAAAAAAAAAP////9Aq0kSIwAAAGAAAADoG0oSQ5tKEgAAAAAAAAAA/////6CrSRIaAAAAQAAAAKIaShJDm0oSAAAAAAAAAAD/////4KtJEgYAAAAgAAAAbhZKEkObShIAAAAAAAAAAP////8ArEkSEAAAACAAAABlFUoSQ5tKEgAAAAAAAAAA/////yCsSRIFAAAAIAAAAPkTShJDm0oSAAAAAAAAAAD/////QKxJEiAAAABAAAAA7RFKEkObShIAAAAAAAAAAP////+ArEkSGQAAAEAAAAAtCkoSQ5tKEgAAAAAAAAAA/////8CsSRIVAAAAQAAAAAkJShJDm0oSAAAAAAAAAAD/////AK1JEhYAAABAAAAAwB5KEkObShIAAAAAAAAAAP////9ArUkSEwAAAEAAAADAHEoSQ5tKEgAAAAAAAAAA/////4CtSRIYAAAAQAAAAOAbShJDm0oSAAAAAAAAAAD/////wK1JEh4AAABAAAAAdRpKEkObShIAAAAAAAAAAP////8ArkkSFAAAAEAAAAA4FkoSQ5tKEgAAAAAAAAAA/////0CuSRIZAAAAQAAAAF0VShJDm0oSAAAAAAAAAAD/////gK5JEhUAAABAAAAA8RNKEkObShIAAAAAAAAAAP/////ArkkSBAAAACAAAADlEUoSQ5tKEgAAAAAAAAAA/////+CuSRIFAAAAIAAAAAEKShJDm0oSAAAAAAAAAAD/////AK9JEhwAAABAAAAAAQlKEkObShIAAAAAAAAAAP////+gb0sSBAAAACAAAAAEBUoSQ5tKEgAAAAAAAAAA/////0CvSRIcAAAAQAAAAKEdShJDm0oSAAAAAAAAAAD/////wG9LEggAAAAgAAAAYPlJEkObShIBAAAAAAAAAP////+Ar0kSCwAAACAAAADEG0oSQ5tKEgAAAAAAAAAA/////6CvSRIIAAAAIAAAAFYaShJDm0oSAAAAAAAAAAD/////wK9JEgsAAAAgAAAAIRZKEkObShIAAAAAAAAAAP/////gr0kSDQAAACAAAABVFUoSQ5tKEgAAAAAAAAAA/////wCwSRINAAAAIAAAAOkTShJDm0oSAAAAAAAAAAD/////ILBJEhAAAAAgAAAAqBFKEkObShIAAAAAAAAAAP////9AsEkSDQAAACAAAAD5CUoSQ5tKEgAAAAAAAAAA/////2CwSRILAAAAIAAAALMIShJDm0oSAAAAAAAAAAD/////gLBJEgkAAAAgAAAAXx1KEkObShIAAAAAAAAAAP////+gsEkSCQAAACAAAAC4HEoSQ5tKEgAAAAAAAAAA/////8CwSRIMAAAAIAAAALwbShJDm0oSAAAAAAAAAAD/////4LBJEgYAAAAgAAAANBpKEkObShIAAAAAAAAAAP////8AsUkSDgAAACAAAAD7FUoSQ5tKEgAAAAAAAAAA/////yCxSRIOAAAAIAAAAE0VShJDm0oSAAAAAAAAAAD/////QLFJEg8AAAAgAAAAXBNKEkObShIAAAAAAAAAAP////9gsUkSDAAAACAAAAB/EUoSQ5tKEgAAAAAAAAAA/////4CxSRIMAAAAIAAAANIJShJDm0oSAAAAAAAAAAD/////oLFJEhcAAABAAAAAfghKEkObShIAAAAAAAAAAP/////gsUkSFwAAAEAAAABXHUoSQ5tKEgAAAAAAAAAA/////yCySRIWAAAAQAAAALAcShJDm0oSAAAAAAAAAAD/////YLJJEhYAAABAAAAAhxtKEkObShIAAAAAAAAAAP////+gskkSEQAAAEAAAAAOGkoSQ5tKEgAAAAAAAAAA/////+CySRIRAAAAQAAAAPMVShJDm0oSAAAAAAAAAAD/////ILNJEg0AAAAgAAAARRVKEkObShIAAAAAAAAAAP////9As0kSDQAAACAAAAARE0oSQ5tKEgAAAAAAAAAA/////2CzSRIRAAAAQAAAAHcRShJDm0oSAAAAAAAAAAD/////oLNJEhEAAABAAAAAsglKEkObShIAAAAAAAAAAP/////gs0kSDQAAACAAAAB2CEoSQ5tKEgAAAAAAAAAA/////wC0SRINAAAAIAAAAE8dShJDm0oSAAAAAAAAAAD/////ILRJEhMAAABAAAAAqBxKEkObShIAAAAAAAAAAP////9gtEkSCgAAACAAAABjG0oSQ5tKEgAAAAAAAAAA/////4C0SRIGAAAAIAAAAOYZShJDm0oSAAAAAAAAAAD/////oLRJEgcAAAAgAAAA1hVKEkObShIAAAAAAAAAAP/////AtEkSBAAAACAAAAAbFUoSQ5tKEgAAAAAAAAAA/////+C0SRIhAAAAYAAAAAkTShJDm0oSAAAAAAAAAAD/////QLVJEhEAAABAAAAAbxFKEkObShIAAAAAAAAAAP////+AtUkSEAAAACAAAACqCUoSQ5tKEgAAAAAAAAAA/////6C1SRIWAAAAQAAAAFsIShJDm0oSAAAAAAAAAAD/////4LVJEhsAAABAAAAAMB1KEkObShIAAAAAAAAAAP////8gtkkSGgAAAEAAAACgHEoSQ5tKEgAAAAAAAAAA/////2C2SRIaAAAAQAAAABkbShJDm0oSAAAAAAAAAAD/////oLZJEhsAAABAAAAAjxlKEkObShIAAAAAAAAAAP/////gtkkSEgAAAEAAAACgFUoSQ5tKEgAAAAAAAAAA/////yC3SRIVAAAAQAAAANIUShJDm0oSAAAAAAAAAAD/////YLdJEhMAAABAAAAAvxJKEkObShIAAAAAAAAAAP////+gt0kSEgAAAEAAAABnEUoSQ5tKEgAAAAAAAAAA/////+C3SRISAAAAQAAAAI8JShJDm0oSAAAAAAAAAAD/////ILhJEhMAAABAAAAAUwhKEkObShIAAAAAAAAAAP////9guEkSFgAAAEAAAAAoHUoSQ5tKEgAAAAAAAAAA/////6C4SRIfAAAAQAAAAJgcShJDm0oSAAAAAAAAAAD/////4LhJEiQAAABgAAAAERtKEkObShIAAAAAAAAAAP////9AuUkSIgAAAGAAAABDGUoSQ5tKEgAAAAAAAAAA/////6C5SRImAAAAYAAAAIUVShJDm0oSAAAAAAAAAAD/////ALpJEiEAAABgAAAAbRRKEkObShIAAAAAAAAAAP////9gukkSLwAAAGAAAACbEkoSQ5tKEgAAAAAAAAAA/////8C6SRIqAAAAYAAAAEgRShJDm0oSAAAAAAAAAAD/////ILtJEisAAABgAAAAhwlKEkObShIAAAAAAAAAAP////+Au0kSNAAAAGAAAABACEoSQ5tKEgAAAAAAAAAA/////+C7SRIzAAAAYAAAACMgShJDm0oSAAAAAAAAAAD/////QLxJEi0AAABgAAAAAh1KEkObShIAAAAAAAAAAP////+gvEkSJwAAAGAAAABtHEoSQ5tKEgAAAAAAAAAA/////wC9SRItAAAAYAAAAPYaShJDm0oSAAAAAAAAAAD/////YL1JEj8AAABgAAAAEhlKEkObShIAAAAAAAAAAP/////AvUkSCgAAACAAAAB1FUoSQ5tKEgAAAAAAAAAA/////+C9SRIHAAAAIAAAAD8UShJDm0oSAAAAAAAAAAD/////AL5JEgUAAAAgAAAAJxJKEkObShIAAAAAAAAAAP////8gvkkSBAAAACAAAAC8EEoSQ5tKEgAAAAAAAAAA/////0C+SRIEAAAAIAAAACgJShJDm0oSAAAAAAAAAAD/////YL5JEgcAAAAgAAAA4B5KEkObShIAAAAAAAAAAP/////Av0kSDQAAACAAAADxHEoSQ5tKEgAAAAAAAAAA/////wDESRIHAAAAIAAAAHYWShJDm0oSAAAAAAAAAAD/////YMRJEgEAAAAgAAAA+85JEkObShIAAAAAAAAAAP////+Am0oSEQAAAEAAAADB1kkSQJxKEgAAAAAAAAAA/////8CbShIzAAAAYAAAAAsdShJAnEoSAAAAAAAAAAD/////IJxKEg8AAAAgAAAAdhxKEkCcShIAAAAAAAAAAP////8gcEsSBAAAACAAAABx90kSOK5KEgAAAAAAAAAA/////6CuShIQAAAAIAAAABXzSRLgrkoSAAAAAAAAAAD/////wK5KEhAAAAAgAAAAEh1KEuCuShIAAAAAAAAAAP////9Ar0oSEAAAACAAAAAI60kSgK9KEgAAAAAAAAAA/////2CvShIQAAAAIAAAAITmSRKAr0oSAAAAAAAAAAD/////QHBLEgQAAAAgAAAAqepJEgCwShIAAAAAAAAAAP/////gr0oSBAAAACAAAADL1kkSALBKEgBBveWskgEL5AZySxJgcEsSBAAAACAAAABX/UkSALBKEgAAAAAAAAAA/////4BwSxIEAAAAIAAAAEDNSRIAsEoSAAAAAAAAAAD/////oHBLEgQBAABgAQAAJ+hJEgCwShIAAAAAAAAAAP////9gsEoSEAAAACAAAACE6kkSYL5KEgAAAAAAAAAA/////4CwShLICgAAgA0AAAYbShJgvkoSAAAAAAAAAAD/////AL5KEkAAAABgAAAADBtKEmC+ShIAAAAAAAAAAP////8gcksSGAAAAEAAAACj6kkS4L5KEgAAAAAAAAAA/////2BySxIBAAAAIAAAACrOSRLgvkoSAAAAAAAAAAD/////wL5KEgQAAAAgAAAAwdZJEuC+ShIAAAAAAAAAAP////9Av0oSSAEAAKABAAC4AkoS4MBKEgAAAAAAAAAAgnJLEqBySxIEAAAAIAAAABDFSRIswUoSAAAAAAAAAAD/////gMFKEgQAAAAgAAAAwdZJEqDBShIAAAAAAAAAAP////8AwkoSBAAAACAAAADB1kkSIMJKEgAAAAAAAAAA/////8BySxIEAAAAIAAAABnnSRJowkoSAAAAAAAAAADgcksSAHNLEjgAAABgAAAA3wFKErLCShIAAAAAAAAAAIBzSxJgc0sSBAAAACAAAADk5UkSssJKEgAAAAAAAAAAgXNLEqBzSxKAAAAAoAAAAD/7SRL8wkoSAAAAAAAAAAD/////QHRLEgACAACAAgAAbNVJEvzCShIAAAAAAAAAAP/////AdksSLAAAAGAAAAAp6UkSR8NKEgAAAAAAAAAA/////6DDShIgAQAAYAEAAKwCShIAxUoSAAAAAAAAAAAgd0sSQHdLEgQAAAAgAAAAjOpJEoDFShIAAAAAAAAAAP////9gxUoSBAAAACAAAADc1kkSgMVKEgAAAAAAAAAAgHdLEmB3SxIEAAAAIAAAAD39SRKAxUoSAAAAAAAAAAD/////4MVKEigBAACAAQAAxQJKEmDHShIAAAAAAAAAAIF3SxKgd0sSeAAAAKAAAAAu/UkSq8dKEgAAAAAAAAAA/////wDIShIgAAAAQAAAAMwbShJAyEoSAAAAAAAAAAD/////QHhLEggAAAAgAAAADP1JEonIShIAAAAAAAAAAP////8FAEGs7KySAQsCWwEAQcTsrJIBCwxYAQAAWgEAAGh4SxIAQdzsrJIBCwECAEHs7KySAQsI//////////8AQeDtrJIBCwQgNksSAEGA7qySAQuBAWB4SxIIAAAAIAAAAInySRIAyUoSAAAAAAAAAAD/////IDZLEpAAAADAAAAA6QRKEgDJShIAAAAAAAAAAIB4SxLgyEoSBAAAACAAAAAB10kSAMlKEgAAAAAAAAAAgXhLEuA2SxIEAAAAIAAAAFr7SRIAyUoSAAAAAAAAAACCeEsSBQBBjO+skgELAnoBAEGk76ySAQsOWAEAAHsBAACoeEsSAAQAQbzvrJIBCwEBAEHM76ySAQsF/////woAQcDwrJIBCwSAN0sSAEHg8KySAQv0BqB4SxIIBAAAIAUAAInySRKAyUoSAAAAAAAAAAD/////gDdLEpAAAADAAAAA2wRKEoDJShIAAAAAAAAAAMB9SxJgyUoSBAAAACAAAAATzEkSgMlKEgAAAAAAAAAAwX1LEkA4SxIEAAAAIAAAAEz7SRKAyUoSAAAAAAAAAADCfUsS4MlKEnoHAABACQAAq9ZJEqDUShIAAAAAAAAAAP////8g00oSNAEAAIABAADwxUkSoNRKEgAAAAAAAAAA/////+B9SxIEAAAAIAAAAAHmSRLr1EoSAAAAAAAAAAD/////QNVKEgoAAAAgAAAAwdZJEsDYShIAAAAAAAAAAP////9g1UoSBwAAACAAAAALHUoSwNhKEgAAAAAAAAAA/////4DVShLQAQAAQAIAAKjUSRLA2EoSAAAAAAAAAAD/////wNdKEhAAAAAgAAAA/c9JEsDYShIAAAAAAAAAAP/////g10oSEwAAAEAAAAD/GkoSwNhKEgAAAAAAAAAA/////yDYShIEAAAAIAAAABsZShLA2EoSAAAAAAAAAAD/////QNhKEgQAAAAgAAAAfhVKEsDYShIAAAAAAAAAAP////9g2EoSBAAAACAAAABIFEoSwNhKEgAAAAAAAAAA/////4DYShIEAAAAIAAAADASShLA2EoSAAAAAAAAAAD/////oNhKEgIAAAAgAAAAxRBKEsDYShIAAAAAAAAAAP////8g2UoSkAAAAMAAAABF80kSoNpKEgAAAAAAAAAA/////+DZShKQAAAAwAAAACnzSRKg2koSAAAAAAAAAAD/////ANtKEgkAAAAgAAAAwdZJEuDbShIAAAAAAAAAAP////8g20oSBAAAACAAAAALHUoS4NtKEgAAAAAAAAAA/////0DbShIQAAAAIAAAAH3rSRLg20oSAAAAAAAAAAD/////YNtKEiAAAABAAAAArtVJEuDbShIAAAAAAAAAAP////+g20oSDAAAACAAAACe6EkS4NtKEgAAAAAAAAAA/////8DbShIMAAAAIAAAAH0cShLg20oSAAAAAAAAAAD/////QNxKEgEBAABgAQAAe/ZJEsDdShIAAAAAAAAAAP////+g3UoSCQAAACAAAADB1kkSwN1KEgAAAAAAAAAA/////yDeShLMAAAAAAEAADgJShIg30oSAEHd96ySAQsnfksSIH5LEgQAAAAgAAAAa/RJEm/fShIAAAAAAAAAAP////9wypYSAEGg+KySAQsBCQBBrPiskgELAlsBAEHA+KySAQsSVwEAAAAAAABaAQAASIBLEgAEAEHs+KySAQsE/////wBB4PmskgELBCA8SxIAQYD6rJIBC9UIQIBLEggEAAAgBQAAifJJEgDlShIAAAAAAAAAAP////8gPEsSkAAAAMAAAAD3BEoSAOVKEgAAAAAAAAAAYIVLEuDkShIEAAAAIAAAAE/oSRIA5UoSAAAAAAAAAABhhUsS4DxLEgQAAAAgAAAAaPtJEgDlShIAAAAAAAAAAGKFSxLg5koSFAAAAEAAAAB75kkSAOhKEgAAAAAAAAAA/////yDnShIkAAAAYAAAAEAJShIA6EoSAAAAAAAAAAByiUsSgOdKEhgAAABAAAAAuvZJEgDoShIAAAAAAAAAAHOJSxLA50oSGAAAAEAAAADF9kkSAOhKEgAAAAAAAAAAdIlLEoCJSxIEAAAAIAAAAJXqSRKA6UoSAAAAAAAAAADAiUsSYOhKEgQAAAAgAAAA8NZJEoDpShIAAAAAAAAAAMGJSxKgiUsSBAAAACAAAABG/UkSgOlKEgAAAAAAAAAA/////4DoShIHAAAAIAAAAMHWSRKA6UoSAAAAAAAAAAD/////oOhKEkgAAACAAAAA7tFJEoDpShIAAAAAAAAAAP////8g6UoSBQAAACAAAAALHUoSgOlKEgAAAAAAAAAA/////0DpShIIAAAAIAAAAHYcShKA6UoSAAAAAAAAAAD/////YOlKEgYAAAAgAAAA/xpKEoDpShIAAAAAAAAAAP/////giUsSGAAAAEAAAACW9kkSAOpKEgAAAAAAAAAA/////yCKSxIYAAAAQAAAAKX2SRIA6koSAAAAAAAAAAD/////4OlKEgEAAAAgAAAAwdZJEgDqShIAAAAAAAAAAP////9giksSAQAAACAAAAAu9UkSAOpKEgAAAAAAAAAA/////2DqShIEAAAAIAAAAHr2SRIA8koSAAAAAAAAAAD/////gOpKEgAGAACABwAAe/ZJEgDyShIAAAAAAAAAAP////9g8koSBAAAACAAAAB69kkSAPpKEgAAAAAAAAAA/////4DyShIABgAAgAcAAHv2SRIA+koSAAAAAAAAAAD/////gIpLEgQAAAAgAAAAQupJElb6ShIAAAAAAAAAAP////8AFksS8gEAAGACAAB41EkSYBhLEgAAAAAAAAAA/////1AeSxJwHksSkB5LEqQeSxKC+0kS2elJElXoSRJ8x0kSlc1JEpXNSRK/80kSosdJEqDHSRJh5kkSTOZJEpv0SRJ9zEkS0+dJEvjnSRIt90kSCvdJErX0SRJSzUkSgdVJEoH2SRLw5kkS1/lJElLHSRKx6UkSDOlJElznSRI79EkSzeZJEkP0SRJH8UkSxtZJEg/rSRIsH0sSVR9LEibXSRI510kSCAAAALbpSRIAAAAAANxQEowjAACALAAAQtJJEmgfSxIAAAAAAAAAAIAIURKgCFESBAAAACAAAACp6kkSpR9LEgAAAAAAAAAA/////8AIURIEAAAAIAAAAOjTSRKlH0sSAAAAAAAAAAD/////5AhREgIAQdzCrZIBCwEBALDiCgRuYW1lAfnFCqwNAARleGl0AQlpbnZva2VfaWkCCWludm9rZV92aQMMaW52b2tlX3ZpaWlpBAtpbnZva2VfdmlpaQUKaW52b2tlX3ZpaQYKaW52b2tlX2lpaQcLaW52b2tlX2lpaWkIC19fY3hhX3Rocm93CQVhYm9ydAoIc3RyZnRpbWULGGVtc2NyaXB0ZW5fYXNtX2NvbnN0X2ludAwNX2VtdmFsX2RlY3JlZg0RX2VtdmFsX25ld19vYmplY3QOEF9lbXZhbF9uZXdfYXJyYXkPEV9lbXZhbF90YWtlX3ZhbHVlEBJfZW12YWxfbmV3X2NzdHJpbmcRE19lbXZhbF9zZXRfcHJvcGVydHkSFl9lbWJpbmRfcmVnaXN0ZXJfY2xhc3MTHV9lbWJpbmRfZmluYWxpemVfdmFsdWVfb2JqZWN0FB1fZW1iaW5kX3JlZ2lzdGVyX3ZhbHVlX29iamVjdBUjX2VtYmluZF9yZWdpc3Rlcl92YWx1ZV9vYmplY3RfZmllbGQWGV9lbWJpbmRfcmVnaXN0ZXJfY29uc3RhbnQXIl9lbWJpbmRfcmVnaXN0ZXJfY2xhc3NfY29uc3RydWN0b3IYH19lbWJpbmRfcmVnaXN0ZXJfY2xhc3NfZnVuY3Rpb24ZDV9lbXZhbF9pbmNyZWYaE19lbXZhbF9nZXRfcHJvcGVydHkbCV9lbXZhbF9hcxwWX2VtdmFsX3J1bl9kZXN0cnVjdG9ycx0XX2VtdmFsX2NhbGxfdm9pZF9tZXRob2QeGF9lbXZhbF9nZXRfbWV0aG9kX2NhbGxlch8VX2VtYmluZF9yZWdpc3Rlcl92b2lkIBVfZW1iaW5kX3JlZ2lzdGVyX2Jvb2whGF9lbWJpbmRfcmVnaXN0ZXJfaW50ZWdlciIWX2VtYmluZF9yZWdpc3Rlcl9mbG9hdCMbX2VtYmluZF9yZWdpc3Rlcl9zdGRfc3RyaW5nJBxfZW1iaW5kX3JlZ2lzdGVyX3N0ZF93c3RyaW5nJRZfZW1iaW5kX3JlZ2lzdGVyX2VtdmFsJhxfZW1iaW5kX3JlZ2lzdGVyX21lbW9yeV92aWV3JwlfdHpzZXRfanMoDV9sb2NhbHRpbWVfanMpE2Vtc2NyaXB0ZW5fZGF0ZV9ub3cqIF9lbXNjcmlwdGVuX2dldF9ub3dfaXNfbW9ub3RvbmljKxJlbXNjcmlwdGVuX2dldF9ub3csEF9fc3lzY2FsbF9vcGVuYXQtEV9fc3lzY2FsbF9mY250bDY0Lg9fX3N5c2NhbGxfaW9jdGwvDl9fd2FzaV9mZF9yZWFkMA9fX3dhc2lfZmRfd3JpdGUxD19fd2FzaV9mZF9jbG9zZTIYX193YXNpX2Vudmlyb25fc2l6ZXNfZ2V0MxJfX3dhc2lfZW52aXJvbl9nZXQ0EV9fc3lzY2FsbF9ta2RpcmF0NRBfX3N5c2NhbGxfc3RhdDY0NhhlbXNjcmlwdGVuX2NvbnNvbGVfZXJyb3I3FmVtc2NyaXB0ZW5fcmVzaXplX2hlYXA4GV9lbXNjcmlwdGVuX3Rocm93X2xvbmdqbXA5CnN0cmZ0aW1lX2w6F2Vtc2NyaXB0ZW5fZ2V0X2hlYXBfbWF4OxllbXNjcmlwdGVuX3JldHVybl9hZGRyZXNzPA1fX2Fzc2VydF9mYWlsPRtlbXNjcmlwdGVuX2FzbV9jb25zdF9kb3VibGU+GmVtc2NyaXB0ZW5fZ2V0X21vZHVsZV9uYW1lPwpfbXVubWFwX2pzQAhfbW1hcF9qc0ENX19zeXNjYWxsX2R1cEIQX193YXNpX3Byb2NfZXhpdEMZZW1zY3JpcHRlbl9zdGFja19zbmFwc2hvdEQeZW1zY3JpcHRlbl9zdGFja191bndpbmRfYnVmZmVyRRplbXNjcmlwdGVuX3BjX2dldF9mdW5jdGlvbkYWZW1zY3JpcHRlbl9wY19nZXRfZmlsZUcWZW1zY3JpcHRlbl9wY19nZXRfbGluZUgYZW1zY3JpcHRlbl9wY19nZXRfY29sdW1uSRdfX2hhbmRsZV9zdGFja19vdmVyZmxvd0ojbGVnYWxpbXBvcnQkX2VtYmluZF9yZWdpc3Rlcl9iaWdpbnRLGmxlZ2FsaW1wb3J0JF9fd2FzaV9mZF9zZWVrTBFfX3dhc21fY2FsbF9jdG9yc00OYXJTZXREZWJ1Z01vZGVOF2FyU2V0TGFiZWxpbmdUaHJlc2hNb2RlTxBjb25maWRlbmNlQ3V0b2ZmUA9hckRldGVjdE1hcmtlcjJRCmdldF92ZXJ0ZXhSD2FyR2V0TWFya2VySW5mb1MQYXJJbWFnZVByb2NGaW5hbFQTYXJJbWFnZVByb2NMdW1hSGlzdFUKYXJMYWJlbGluZ1YNcGF0dGVybl9tYXRjaFcKZGVjb2RlX2JjaFgPYXJQYXR0R2V0SW1hZ2UyWQxhclV0aWxNYXRNdWxaD2FyVXRpbE1hdE11bGRmZlsNYXJVdGlsTWF0TXVsZlwOYXJVdGlsUXVhdE5vcm1dEmFyVXRpbEdldFBpeGVsU2l6ZV4NYXJNYXRyaXhBbGxvY18OYXJNYXRyaXhBbGxvY2ZgEGFyTWF0cml4QWxsb2NNdWxhEWFyTWF0cml4QWxsb2NNdWxmYhJhck1hdHJpeEFsbG9jVHJhbnNjC2FyTWF0cml4TXVsZAxhck1hdHJpeE11bGZlD2FyTWF0cml4U2VsZkludmYTYXJQYXJhbU9ic2VydjJJZGVhbGcIYnl0ZXN3YXBoC2J5dGVTd2FwSW50aQ5ieXRlU3dhcERvdWJsZWoWYXJQYXJhbUlkZWFsMk9ic2VydkxUZmsWYXJQYXJhbU9ic2VydjJJZGVhbExUZmwKYXJWZWNBbGxvY20JYXJWZWNGcmVlbhFhclZlY0lubmVycHJvZHVjdG8YaWNwR2V0VV9mcm9tX1hfYnlfTWF0WDJVcAtpY3BHZXRKX1VfU3EMaWNwR2V0RGVsdGFTcgxpY3BVcGRhdGVNYXRzD2ljcENyZWF0ZUhhbmRsZXQPaWNwRGVsZXRlSGFuZGxldRdpY3BTZXRJbmxpZXJQcm9iYWJpbGl0eXYIaWNwUG9pbnR3BWNvbXBFeAVhckxvZ3kNbXlfZXJyb3JfZXhpdHoIZ2V0X2J1ZmZ7EGFyMkdldFJlc29sdXRpb258EWFyMkdldFJlc29sdXRpb24yfRFhcjJTZWxlY3RUZW1wbGF0ZX4RYXIyR2V0VmVjdG9yQW5nbGV/EmFyMkdldFRyaWFuZ2xlQXJlYYABGWFyMkdldEJlc3RNYXRjaGluZ1N1YkZpbmWBARFhcjJHZXRTZWFyY2hQb2ludIIBG2FyMk1hcmtlckNvb3JkMlNjcmVlbkNvb3JkMoMBGmFyMk1hcmtlckNvb3JkMlNjcmVlbkNvb3JkhAEQYXIyR2V0SW1hZ2VWYWx1ZYUBD2twbUNyZWF0ZUhhbmRsZYYBWnN0ZDo6X18yOjp2ZWN0b3I8dW5zaWduZWQgY2hhciwgc3RkOjpfXzI6OmFsbG9jYXRvcjx1bnNpZ25lZCBjaGFyPj46On52ZWN0b3JbYWJpOnYxNTAwN10oKYcBb3N0ZDo6X18yOjp2ZWN0b3I8dW5zaWduZWQgY2hhciwgc3RkOjpfXzI6OmFsbG9jYXRvcjx1bnNpZ25lZCBjaGFyPj46Ol9fZGVzdHJveV92ZWN0b3I6Om9wZXJhdG9yKClbYWJpOnYxNTAwN10oKYgBE2twbURlbGV0ZVJlZkRhdGFTZXSJAbcBc3RkOjpfXzI6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiYgc3RkOjpfXzI6Om9wZXJhdG9yPDw8c3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PihzdGQ6Ol9fMjo6YmFzaWNfb3N0cmVhbTxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+JiwgY2hhciBjb25zdCopigELa3BtTWF0Y2hpbmeLAYcBc3RkOjpfXzI6OmJhc2ljX2lvczxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojppbml0W2FiaTp2MTUwMDddKHN0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiopjAFQc3RkOjpfXzI6OmJhc2ljX2lvczxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpmaWxsW2FiaTp2MTUwMDddKCkgY29uc3SNAYICc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiBzdGQ6Ol9fMjo6X19wYWRfYW5kX291dHB1dDxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIHN0ZDo6X18yOjppb3NfYmFzZSYsIGNoYXIpjgE2c3RkOjpfXzI6Omlvc19iYXNlOjpzZXRzdGF0ZVthYmk6djE1MDA3XSh1bnNpZ25lZCBpbnQpjwFVc3RkOjpfXzI6OmJhc2ljX2lvczxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp3aWRlblthYmk6djE1MDA3XShjaGFyKSBjb25zdJABN3N0ZDo6X18yOjpfX3Rocm93X2xlbmd0aF9lcnJvclthYmk6djE1MDA3XShjaGFyIGNvbnN0KimRAS9zdGQ6Ol9fdGhyb3dfYmFkX2FycmF5X25ld19sZW5ndGhbYWJpOnYxNTAwN10oKZIBbHN0ZDo6X18yOjpjdHlwZTxjaGFyPiBjb25zdCYgc3RkOjpfXzI6OnVzZV9mYWNldFthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj4+KHN0ZDo6X18yOjpsb2NhbGUgY29uc3QmKZMBf3N0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQ+Pjo6X19yZWNvbW1lbmRbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZykgY29uc3SUAbQBc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPHZpc2lvbjo6RmVhdHVyZVBvaW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6RmVhdHVyZVBvaW50PiY+OjpfX3NwbGl0X2J1ZmZlcih1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6RmVhdHVyZVBvaW50PiYplQHKAXN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQ+Pjo6X19zd2FwX291dF9jaXJjdWxhcl9idWZmZXIoc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPHZpc2lvbjo6RmVhdHVyZVBvaW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6RmVhdHVyZVBvaW50PiY+JimWAW1zdGQ6Ol9fMjo6X19zcGxpdF9idWZmZXI8dmlzaW9uOjpGZWF0dXJlUG9pbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQ+Jj46On5fX3NwbGl0X2J1ZmZlcigplwF7c3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkZlYXR1cmVQb2ludD4+OjpfX3Rocm93X2xlbmd0aF9lcnJvclthYmk6djE1MDA3XSgpIGNvbnN0mAFOc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkZlYXR1cmVQb2ludD46OmFsbG9jYXRlW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpmQGDAXN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpQb2ludDNkPGZsb2F0Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OlBvaW50M2Q8ZmxvYXQ+Pj46Ol9fcmVjb21tZW5kW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpIGNvbnN0mgG6AXN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjx2aXNpb246OlBvaW50M2Q8ZmxvYXQ+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6UG9pbnQzZDxmbG9hdD4+Jj46Ol9fc3BsaXRfYnVmZmVyKHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpQb2ludDNkPGZsb2F0Pj4mKZsBUHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpQb2ludDNkPGZsb2F0Pj46OmFsbG9jYXRlW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpnAFxc3RkOjpfXzI6OnZlY3Rvcjx1bnNpZ25lZCBjaGFyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHVuc2lnbmVkIGNoYXI+Pjo6X19yZWNvbW1lbmRbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZykgY29uc3SdAZ8Bc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPHVuc2lnbmVkIGNoYXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8dW5zaWduZWQgY2hhcj4mPjo6X19zcGxpdF9idWZmZXIodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgc3RkOjpfXzI6OmFsbG9jYXRvcjx1bnNpZ25lZCBjaGFyPiYpngGuAXN0ZDo6X18yOjp2ZWN0b3I8dW5zaWduZWQgY2hhciwgc3RkOjpfXzI6OmFsbG9jYXRvcjx1bnNpZ25lZCBjaGFyPj46Ol9fc3dhcF9vdXRfY2lyY3VsYXJfYnVmZmVyKHN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjx1bnNpZ25lZCBjaGFyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHVuc2lnbmVkIGNoYXI+Jj4mKZ8BX3N0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjx1bnNpZ25lZCBjaGFyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHVuc2lnbmVkIGNoYXI+Jj46On5fX3NwbGl0X2J1ZmZlcigpoAFKdmlzaW9uOjpHYXVzc2lhblNjYWxlU3BhY2VQeXJhbWlkOjpnZXQodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZykgY29uc3ShAVpzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6SW1hZ2UsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpJbWFnZT4+OjpyZXNpemUodW5zaWduZWQgbG9uZymiAaoBc3RkOjpfXzI6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiYgc3RkOjpfXzI6OmVuZGw8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PihzdGQ6Ol9fMjo6YmFzaWNfb3N0cmVhbTxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+JimjAXdzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6SW1hZ2UsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpJbWFnZT4+OjpfX2Jhc2VfZGVzdHJ1Y3RfYXRfZW5kW2FiaTp2MTUwMDddKHZpc2lvbjo6SW1hZ2UqKaQBO2Zsb2F0IGNvbnN0KiB2aXNpb246OkltYWdlOjpnZXQ8ZmxvYXQ+KHVuc2lnbmVkIGxvbmcpIGNvbnN0pQFIdmlzaW9uOjpEb0dTY2FsZUludmFyaWFudERldGVjdG9yOjpzZXRNYXhOdW1GZWF0dXJlUG9pbnRzKHVuc2lnbmVkIGxvbmcppgFKc3RkOjpfXzI6OnZlY3RvcjxmbG9hdCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxmbG9hdD4+OjpyZXNpemUodW5zaWduZWQgbG9uZymnAZ8Bc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludD4+OjpyZXNlcnZlKHVuc2lnbmVkIGxvbmcpqAFac3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkltYWdlLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6SW1hZ2U+Pjo6fnZlY3RvclthYmk6djE1MDA3XSgpqQHxBnN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Pj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pj4+Pj4+OjpfX2Jhc2VfZGVzdHJ1Y3RfYXRfZW5kW2FiaTp2MTUwMDddKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pj4+PiopqgGjA3N0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pj4+Pjo6X19iYXNlX2Rlc3RydWN0X2F0X2VuZFthYmk6djE1MDA3XShzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+PiopqwFNdmlzaW9uOjpHYXVzc2lhblNjYWxlU3BhY2VQeXJhbWlkOjplZmZlY3RpdmVTaWdtYSh1bnNpZ25lZCBsb25nLCBmbG9hdCkgY29uc3SsAUJ2aXNpb246OmJpbGluZWFyX3Vwc2FtcGxlX3BvaW50KGZsb2F0JiwgZmxvYXQmLCBmbG9hdCwgZmxvYXQsIGludCmtAdYBc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludD4+OjpwdXNoX2JhY2tbYWJpOnYxNTAwN10odmlzaW9uOjpEb0dTY2FsZUludmFyaWFudERldGVjdG9yOjpGZWF0dXJlUG9pbnQgY29uc3QmKa4BT2Zsb2F0IHZpc2lvbjo6YmlsaW5lYXJfaW50ZXJwb2xhdGlvbjxmbG9hdD4odmlzaW9uOjpJbWFnZSBjb25zdCYsIGZsb2F0LCBmbG9hdCmvAZcCc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludD4+Ojpzd2FwKHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpEb0dTY2FsZUludmFyaWFudERldGVjdG9yOjpGZWF0dXJlUG9pbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpEb0dTY2FsZUludmFyaWFudERldGVjdG9yOjpGZWF0dXJlUG9pbnQ+PiYpsAGFAnN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludD4mPjo6X19zcGxpdF9idWZmZXIodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludD4mKbEBtgJzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6RG9HU2NhbGVJbnZhcmlhbnREZXRlY3Rvcjo6RmVhdHVyZVBvaW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6RG9HU2NhbGVJbnZhcmlhbnREZXRlY3Rvcjo6RmVhdHVyZVBvaW50Pj46Ol9fc3dhcF9vdXRfY2lyY3VsYXJfYnVmZmVyKHN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludD4mPiYpsgGjAXN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludD4mPjo6fl9fc3BsaXRfYnVmZmVyKCmzAbEBc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkRvR1NjYWxlSW52YXJpYW50RGV0ZWN0b3I6OkZlYXR1cmVQb2ludD4+OjpfX3Rocm93X2xlbmd0aF9lcnJvclthYmk6djE1MDA3XSgpIGNvbnN0tAFqdmlzaW9uOjpDb21wdXRlU3VicGl4ZWxEZXJpdmF0aXZlcyhmbG9hdCYsIGZsb2F0JiwgZmxvYXQmLCBmbG9hdCYsIGZsb2F0JiwgdmlzaW9uOjpJbWFnZSBjb25zdCYsIGludCwgaW50KbUBogJzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+Pj46On52ZWN0b3JbYWJpOnYxNTAwN10oKbYBVnN0ZDo6X18yOjp2ZWN0b3I8ZmxvYXQsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZmxvYXQ+Pjo6X19jb25zdHJ1Y3RfYXRfZW5kKHVuc2lnbmVkIGxvbmcptwGHAXN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjxmbG9hdCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxmbG9hdD4mPjo6X19zcGxpdF9idWZmZXIodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgc3RkOjpfXzI6OmFsbG9jYXRvcjxmbG9hdD4mKbgBX3N0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjxmbG9hdCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxmbG9hdD4mPjo6X19jb25zdHJ1Y3RfYXRfZW5kKHVuc2lnbmVkIGxvbmcpuQGOAXN0ZDo6X18yOjp2ZWN0b3I8ZmxvYXQsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZmxvYXQ+Pjo6X19zd2FwX291dF9jaXJjdWxhcl9idWZmZXIoc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPGZsb2F0LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGZsb2F0PiY+Jim6AU9zdGQ6Ol9fMjo6X19zcGxpdF9idWZmZXI8ZmxvYXQsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZmxvYXQ+Jj46On5fX3NwbGl0X2J1ZmZlcigpuwE/c3RkOjpfXzI6OmFsbG9jYXRvcjxmbG9hdD46OmFsbG9jYXRlW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpvAHiBHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Pj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pj4+Pj4+OjpfX2NvbnN0cnVjdF9hdF9lbmQodW5zaWduZWQgbG9uZym9Ae0Ec3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Pj4+Pj46Ol9fcmVjb21tZW5kW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpIGNvbnN0vgHrBHN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Pj4+PiY+OjpfX2NvbnN0cnVjdF9hdF9lbmQodW5zaWduZWQgbG9uZym/AaYJc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Pj4+Pj46Ol9fc3dhcF9vdXRfY2lyY3VsYXJfYnVmZmVyKHN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Pj4+PiY+JinAAa4Ec3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Pj4+Ojp2ZWN0b3JbYWJpOnYxNTAwN10oc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Pj4+JiYpwQG1AXN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpEb0dTY2FsZUludmFyaWFudERldGVjdG9yOjpGZWF0dXJlUG9pbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpEb0dTY2FsZUludmFyaWFudERldGVjdG9yOjpGZWF0dXJlUG9pbnQ+Pjo6X19yZWNvbW1lbmRbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZykgY29uc3TCAeQBc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Jj46Ol9fc3BsaXRfYnVmZmVyKHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+PiYpwwGKAnN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4+OjpfX3N3YXBfb3V0X2NpcmN1bGFyX2J1ZmZlcihzdGQ6Ol9fMjo6X19zcGxpdF9idWZmZXI8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPj4mPiYpxAGNAXN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+PiY+Ojp+X19zcGxpdF9idWZmZXIoKcUBXnN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Pjo6YWxsb2NhdGVbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZynGAZQBYm9vbCBzdGQ6Ol9fMjo6b3BlcmF0b3I8W2FiaTp2MTUwMDddPGZsb2F0LCB1bnNpZ25lZCBsb25nPihzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4gY29uc3QmLCBzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4gY29uc3QmKccBpwN1bnNpZ25lZCBpbnQgc3RkOjpfXzI6Ol9fc29ydDM8c3RkOjpfXzI6Ol9DbGFzc2ljQWxnUG9saWN5LCBzdGQ6Ol9fMjo6Z3JlYXRlcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+Jiwgc3RkOjpfXzI6Ol9fd3JhcF9pdGVyPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPio+PihzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIHVuc2lnbmVkIGxvbmc+Kj4sIHN0ZDo6X18yOjpfX3dyYXBfaXRlcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4qPiwgc3RkOjpfXzI6Ol9fd3JhcF9pdGVyPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCB1bnNpZ25lZCBsb25nPio+LCBzdGQ6Ol9fMjo6Z3JlYXRlcjxzdGQ6Ol9fMjo6cGFpcjxmbG9hdCwgdW5zaWduZWQgbG9uZz4+JinIATF2aXNpb246OkJpbm9taWFsUHlyYW1pZDMyZjo6fkJpbm9taWFsUHlyYW1pZDMyZigpyQE/dmlzaW9uOjpHYXVzc2lhblNjYWxlU3BhY2VQeXJhbWlkOjp+R2F1c3NpYW5TY2FsZVNwYWNlUHlyYW1pZCgpygEzdmlzaW9uOjpCaW5vbWlhbFB5cmFtaWQzMmY6On5CaW5vbWlhbFB5cmFtaWQzMmYoKS4xywFOdmlzaW9uOjpCaW5vbWlhbFB5cmFtaWQzMmY6OmFwcGx5X2ZpbHRlcih2aXNpb246OkltYWdlJiwgdmlzaW9uOjpJbWFnZSBjb25zdCYpzAFUdmlzaW9uOjpCaW5vbWlhbFB5cmFtaWQzMmY6OmFwcGx5X2ZpbHRlcl90d2ljZSh2aXNpb246OkltYWdlJiwgdmlzaW9uOjpJbWFnZSBjb25zdCYpzQGLAXN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6YmFzaWNfc3RyaW5nW2FiaTp2MTUwMDddPHN0ZDo6bnVsbHB0cl90PihjaGFyIGNvbnN0KinOAXl2aXNpb246OkV4Y2VwdGlvbjo6RXhjZXB0aW9uKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpzwEfdmlzaW9uOjpFeGNlcHRpb246On5FeGNlcHRpb24oKdABvwFzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46OmJhc2ljX3N0cmluZyhzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKdEBQXZpc2lvbjo6R2F1c3NpYW5TY2FsZVNwYWNlUHlyYW1pZDo6fkdhdXNzaWFuU2NhbGVTcGFjZVB5cmFtaWQoKS4x0gEhdmlzaW9uOjpFeGNlcHRpb246On5FeGNlcHRpb24oKS4x0wEfdmlzaW9uOjpFeGNlcHRpb246OndoYXQoKSBjb25zdNQBlgFzdGQ6Ol9fMjo6dW5pcXVlX3B0cjx2aXNpb246OlZpc3VhbERhdGFiYXNlSW1wbCwgc3RkOjpfXzI6OmRlZmF1bHRfZGVsZXRlPHZpc2lvbjo6VmlzdWFsRGF0YWJhc2VJbXBsPj46OnJlc2V0W2FiaTp2MTUwMDddKHZpc2lvbjo6VmlzdWFsRGF0YWJhc2VJbXBsKinVAYwDc3RkOjpfXzI6OnVuaXF1ZV9wdHI8dmlzaW9uOjpWaXN1YWxEYXRhYmFzZTx2aXNpb246OkZSRUFLRXh0cmFjdG9yLCB2aXNpb246OkJpbmFyeUZlYXR1cmVTdG9yZSwgdmlzaW9uOjpCaW5hcnlGZWF0dXJlTWF0Y2hlcjw5Nj4+LCBzdGQ6Ol9fMjo6ZGVmYXVsdF9kZWxldGU8dmlzaW9uOjpWaXN1YWxEYXRhYmFzZTx2aXNpb246OkZSRUFLRXh0cmFjdG9yLCB2aXNpb246OkJpbmFyeUZlYXR1cmVTdG9yZSwgdmlzaW9uOjpCaW5hcnlGZWF0dXJlTWF0Y2hlcjw5Nj4+Pj46OnJlc2V0W2FiaTp2MTUwMDddKHZpc2lvbjo6VmlzdWFsRGF0YWJhc2U8dmlzaW9uOjpGUkVBS0V4dHJhY3RvciwgdmlzaW9uOjpCaW5hcnlGZWF0dXJlU3RvcmUsIHZpc2lvbjo6QmluYXJ5RmVhdHVyZU1hdGNoZXI8OTY+Piop1gG2BXN0ZDo6X18yOjpfX2hhc2hfaXRlcmF0b3I8c3RkOjpfXzI6Ol9faGFzaF9ub2RlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pj4sIHZvaWQqPio+IHN0ZDo6X18yOjpfX2hhc2hfdGFibGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Piwgc3RkOjpfXzI6Ol9fdW5vcmRlcmVkX21hcF9oYXNoZXI8aW50LCBzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBzdGQ6Ol9fMjo6c2hhcmVkX3B0cjx2aXNpb246OktleWZyYW1lPDk2Pj4+LCBzdGQ6Ol9fMjo6aGFzaDxpbnQ+LCBzdGQ6Ol9fMjo6ZXF1YWxfdG88aW50PiwgdHJ1ZT4sIHN0ZDo6X18yOjpfX3Vub3JkZXJlZF9tYXBfZXF1YWw8aW50LCBzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBzdGQ6Ol9fMjo6c2hhcmVkX3B0cjx2aXNpb246OktleWZyYW1lPDk2Pj4+LCBzdGQ6Ol9fMjo6ZXF1YWxfdG88aW50Piwgc3RkOjpfXzI6Omhhc2g8aW50PiwgdHJ1ZT4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Pj4+OjpmaW5kPGludD4oaW50IGNvbnN0JinXASB2aXNpb246OktleWZyYW1lPDk2Pjo6S2V5ZnJhbWUoKdgBaXN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pjo6c2hhcmVkX3B0cjx2aXNpb246OktleWZyYW1lPDk2Piwgdm9pZD4odmlzaW9uOjpLZXlmcmFtZTw5Nj4qKdkBaHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQ+Pjo6cmVzaXplKHVuc2lnbmVkIGxvbmcp2gFac3RkOjpfXzI6OnZlY3Rvcjx1bnNpZ25lZCBjaGFyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHVuc2lnbmVkIGNoYXI+Pjo6cmVzaXplKHVuc2lnbmVkIGxvbmcp2wHAAnN0ZDo6X18yOjp1bm9yZGVyZWRfbWFwPGludCwgc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OlBvaW50M2Q8ZmxvYXQ+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6UG9pbnQzZDxmbG9hdD4+Piwgc3RkOjpfXzI6Omhhc2g8aW50Piwgc3RkOjpfXzI6OmVxdWFsX3RvPGludD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8aW50IGNvbnN0LCBzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6UG9pbnQzZDxmbG9hdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpQb2ludDNkPGZsb2F0Pj4+Pj4+OjpvcGVyYXRvcltdKGludCBjb25zdCYp3AFFc3RkOjpfXzI6OnNoYXJlZF9wdHI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Ojp+c2hhcmVkX3B0clthYmk6djE1MDA3XSgp3QEldmlzaW9uOjpCaW5hcnlrTWVkb2lkczw5Nj46OnNldGsoaW50Kd4BdHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pjo6b3BlcmF0b3I9W2FiaTp2MTUwMDddKHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+PiBjb25zdCYp3wE7dmlzaW9uOjpWaXN1YWxEYXRhYmFzZUZhY2FkZTo6Z2V0UXVlcnlGZWF0dXJlUG9pbnRzKCkgY29uc3TgAYADc3RkOjpfXzI6OnVuaXF1ZV9wdHI8c3RkOjpfXzI6Ol9faGFzaF9ub2RlX2Jhc2U8c3RkOjpfXzI6Ol9faGFzaF9ub2RlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pj4sIHZvaWQqPio+KiBbXSwgc3RkOjpfXzI6Ol9fYnVja2V0X2xpc3RfZGVhbGxvY2F0b3I8c3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6X19oYXNoX25vZGVfYmFzZTxzdGQ6Ol9fMjo6X19oYXNoX25vZGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Piwgdm9pZCo+Kj4qPj4+Ojp+dW5pcXVlX3B0clthYmk6djE1MDA3XSgp4QF0c3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkZlYXR1cmVQb2ludD4+OjpfX2NvbnN0cnVjdF9hdF9lbmQodW5zaWduZWQgbG9uZyniAeoBc3RkOjpfXzI6OmVuYWJsZV9pZjxfX2lzX2NwcDE3X2ZvcndhcmRfaXRlcmF0b3I8dW5zaWduZWQgY2hhcio+Ojp2YWx1ZSwgdm9pZD46OnR5cGUgc3RkOjpfXzI6OnZlY3Rvcjx1bnNpZ25lZCBjaGFyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHVuc2lnbmVkIGNoYXI+Pjo6X19jb25zdHJ1Y3RfYXRfZW5kPHVuc2lnbmVkIGNoYXIqPih1bnNpZ25lZCBjaGFyKiwgdW5zaWduZWQgY2hhciosIHVuc2lnbmVkIGxvbmcp4wFUc3RkOjpfXzI6OnZlY3Rvcjx1bnNpZ25lZCBjaGFyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHVuc2lnbmVkIGNoYXI+Pjo6X192ZGVhbGxvY2F0ZSgp5AF5c3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkZlYXR1cmVQb2ludD4+OjpfX3ZhbGxvY2F0ZVthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKeUBgAFzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCBpbnQ+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCBpbnQ+Pj46Ol9fY29uc3RydWN0X2F0X2VuZCh1bnNpZ25lZCBsb25nKeYBiwFzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCBpbnQ+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGZsb2F0LCBpbnQ+Pj46Ol9fcmVjb21tZW5kW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpIGNvbnN05wGHAXN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIGludD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnBhaXI8ZmxvYXQsIGludD4+Pjo6X190aHJvd19sZW5ndGhfZXJyb3JbYWJpOnYxNTAwN10oKSBjb25zdOgB1QVzdGQ6Ol9fMjo6X19oYXNoX3RhYmxlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpQb2ludDNkPGZsb2F0Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OlBvaW50M2Q8ZmxvYXQ+Pj4+LCBzdGQ6Ol9fMjo6X191bm9yZGVyZWRfbWFwX2hhc2hlcjxpbnQsIHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpQb2ludDNkPGZsb2F0Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OlBvaW50M2Q8ZmxvYXQ+Pj4+LCBzdGQ6Ol9fMjo6aGFzaDxpbnQ+LCBzdGQ6Ol9fMjo6ZXF1YWxfdG88aW50PiwgdHJ1ZT4sIHN0ZDo6X18yOjpfX3Vub3JkZXJlZF9tYXBfZXF1YWw8aW50LCBzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6UG9pbnQzZDxmbG9hdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpQb2ludDNkPGZsb2F0Pj4+Piwgc3RkOjpfXzI6OmVxdWFsX3RvPGludD4sIHN0ZDo6X18yOjpoYXNoPGludD4sIHRydWU+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpQb2ludDNkPGZsb2F0Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OlBvaW50M2Q8ZmxvYXQ+Pj4+Pj46On5fX2hhc2hfdGFibGUoKekBHXZpc2lvbjo6TG9nZ2VyOjpnZXRJbnN0YW5jZSgp6gEXX19jeHhfZ2xvYmFsX2FycmF5X2R0b3LrAZoBc3RkOjpfXzI6Ol9fdHJhbnNhY3Rpb248c3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkZlYXR1cmVQb2ludD4+OjpfX2Rlc3Ryb3lfdmVjdG9yPjo6fl9fdHJhbnNhY3Rpb25bYWJpOnYxNTAwN10oKewBvAR2b2lkIHN0ZDo6X18yOjpfX2hhc2hfdGFibGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Piwgc3RkOjpfXzI6Ol9fdW5vcmRlcmVkX21hcF9oYXNoZXI8aW50LCBzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBzdGQ6Ol9fMjo6c2hhcmVkX3B0cjx2aXNpb246OktleWZyYW1lPDk2Pj4+LCBzdGQ6Ol9fMjo6aGFzaDxpbnQ+LCBzdGQ6Ol9fMjo6ZXF1YWxfdG88aW50PiwgdHJ1ZT4sIHN0ZDo6X18yOjpfX3Vub3JkZXJlZF9tYXBfZXF1YWw8aW50LCBzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBzdGQ6Ol9fMjo6c2hhcmVkX3B0cjx2aXNpb246OktleWZyYW1lPDk2Pj4+LCBzdGQ6Ol9fMjo6ZXF1YWxfdG88aW50Piwgc3RkOjpfXzI6Omhhc2g8aW50PiwgdHJ1ZT4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Pj4+OjpfX3JlaGFzaDx0cnVlPih1bnNpZ25lZCBsb25nKe0B3gZzdGQ6Ol9fMjo6ZW5hYmxlX2lmPF9DaGVja0FycmF5UG9pbnRlckNvbnZlcnNpb248c3RkOjpfXzI6Ol9faGFzaF9ub2RlX2Jhc2U8c3RkOjpfXzI6Ol9faGFzaF9ub2RlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pj4sIHZvaWQqPio+Kio+Ojp2YWx1ZSwgdm9pZD46OnR5cGUgc3RkOjpfXzI6OnVuaXF1ZV9wdHI8c3RkOjpfXzI6Ol9faGFzaF9ub2RlX2Jhc2U8c3RkOjpfXzI6Ol9faGFzaF9ub2RlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pj4sIHZvaWQqPio+KiBbXSwgc3RkOjpfXzI6Ol9fYnVja2V0X2xpc3RfZGVhbGxvY2F0b3I8c3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6X19oYXNoX25vZGVfYmFzZTxzdGQ6Ol9fMjo6X19oYXNoX25vZGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Piwgdm9pZCo+Kj4qPj4+OjpyZXNldFthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6X19oYXNoX25vZGVfYmFzZTxzdGQ6Ol9fMjo6X19oYXNoX25vZGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Piwgdm9pZCo+Kj4qKj4oc3RkOjpfXzI6Ol9faGFzaF9ub2RlX2Jhc2U8c3RkOjpfXzI6Ol9faGFzaF9ub2RlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pj4sIHZvaWQqPio+Kiop7gFGc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj46OnJlc2l6ZSh1bnNpZ25lZCBsb25nKe8BXXN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+OjpfX3JlY29tbWVuZFthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKSBjb25zdPAB7gFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX3BvaW50ZXI8dmlzaW9uOjpLZXlmcmFtZTw5Nj4qLCBzdGQ6Ol9fMjo6c2hhcmVkX3B0cjx2aXNpb246OktleWZyYW1lPDk2Pj46Ol9fc2hhcmVkX3B0cl9kZWZhdWx0X2RlbGV0ZTx2aXNpb246OktleWZyYW1lPDk2PiwgdmlzaW9uOjpLZXlmcmFtZTw5Nj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pj46On5fX3NoYXJlZF9wdHJfcG9pbnRlcigp8QHpAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfcG9pbnRlcjx2aXNpb246OktleWZyYW1lPDk2PiosIHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pjo6X19zaGFyZWRfcHRyX2RlZmF1bHRfZGVsZXRlPHZpc2lvbjo6S2V5ZnJhbWU8OTY+LCB2aXNpb246OktleWZyYW1lPDk2Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Pjo6X19vbl96ZXJvX3NoYXJlZCgp8gFjc3RkOjpfXzI6OmRlZmF1bHRfZGVsZXRlPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pjo6b3BlcmF0b3IoKVthYmk6djE1MDA3XSh2aXNpb246OktleWZyYW1lPDk2PiopIGNvbnN08wGBAnN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfcG9pbnRlcjx2aXNpb246OktleWZyYW1lPDk2PiosIHN0ZDo6X18yOjpzaGFyZWRfcHRyPHZpc2lvbjo6S2V5ZnJhbWU8OTY+Pjo6X19zaGFyZWRfcHRyX2RlZmF1bHRfZGVsZXRlPHZpc2lvbjo6S2V5ZnJhbWU8OTY+LCB2aXNpb246OktleWZyYW1lPDk2Pj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpLZXlmcmFtZTw5Nj4+Pjo6X19nZXRfZGVsZXRlcihzdGQ6OnR5cGVfaW5mbyBjb25zdCYpIGNvbnN09AF4c3RkOjpfXzI6OnVuaXF1ZV9wdHI8dmlzaW9uOjpOb2RlPDk2Piwgc3RkOjpfXzI6OmRlZmF1bHRfZGVsZXRlPHZpc2lvbjo6Tm9kZTw5Nj4+Pjo6cmVzZXRbYWJpOnYxNTAwN10odmlzaW9uOjpOb2RlPDk2Piop9QEZdmlzaW9uOjpOb2RlPDk2Pjo6fk5vZGUoKfYBbnZpc2lvbjo6QmluYXJ5SGllcmFyY2hpY2FsQ2x1c3RlcmluZzw5Nj46OmJ1aWxkKHZpc2lvbjo6Tm9kZTw5Nj4qLCB1bnNpZ25lZCBjaGFyIGNvbnN0KiwgaW50LCBpbnQgY29uc3QqLCBpbnQp9wFSc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj46OnB1c2hfYmFja1thYmk6djE1MDA3XShpbnQgY29uc3QmKfgBfHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpOb2RlPDk2PiosIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpOb2RlPDk2Pio+Pjo6cHVzaF9iYWNrW2FiaTp2MTUwMDddKHZpc2lvbjo6Tm9kZTw5Nj4qIGNvbnN0Jin5AVJzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pjo6cmVzaXplKHVuc2lnbmVkIGxvbmcsIGludCBjb25zdCYp+gEydm9pZCB2aXNpb246OlNlcXVlbnRpYWxWZWN0b3I8aW50PihpbnQqLCBpbnQsIGludCn7ATR2b2lkIHZpc2lvbjo6QXJyYXlTaHVmZmxlPGludD4oaW50KiwgaW50LCBpbnQsIGludCYp/AFEdmlzaW9uOjpIYW1taW5nRGlzdGFuY2U3NjgodW5zaWduZWQgaW50IGNvbnN0KiwgdW5zaWduZWQgaW50IGNvbnN0Kin9ATV2aXNpb246OkhhbW1pbmdEaXN0YW5jZTMyKHVuc2lnbmVkIGludCwgdW5zaWduZWQgaW50Kf4B0wJ2aXNpb246OkZpbmRIb3VnaFNpbWlsYXJpdHkodmlzaW9uOjpIb3VnaFNpbWlsYXJpdHlWb3RpbmcmLCBzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6RmVhdHVyZVBvaW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6RmVhdHVyZVBvaW50Pj4gY29uc3QmLCBzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6RmVhdHVyZVBvaW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6RmVhdHVyZVBvaW50Pj4gY29uc3QmLCBzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6bWF0Y2hfdCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246Om1hdGNoX3Q+PiBjb25zdCYsIGludCwgaW50LCBpbnQsIGludCn/AeQBdmlzaW9uOjpGaW5kSG91Z2hNYXRjaGVzKHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjptYXRjaF90LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6bWF0Y2hfdD4+JiwgdmlzaW9uOjpIb3VnaFNpbWlsYXJpdHlWb3RpbmcgY29uc3QmLCBzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6bWF0Y2hfdCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246Om1hdGNoX3Q+PiBjb25zdCYsIGludCwgZmxvYXQpgALSAnZpc2lvbjo6RXN0aW1hdGVIb21vZ3JhcGh5KGZsb2F0Kiwgc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkZlYXR1cmVQb2ludD4+IGNvbnN0Jiwgc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkZlYXR1cmVQb2ludD4+IGNvbnN0Jiwgc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246Om1hdGNoX3QsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjptYXRjaF90Pj4gY29uc3QmLCB2aXNpb246OlJvYnVzdEhvbW9ncmFwaHk8ZmxvYXQ+JiwgaW50LCBpbnQpgQL2AnZpc2lvbjo6RmluZElubGllcnMoc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246Om1hdGNoX3QsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjptYXRjaF90Pj4mLCBmbG9hdCBjb25zdCosIHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQ+PiBjb25zdCYsIHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpGZWF0dXJlUG9pbnQ+PiBjb25zdCYsIHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjptYXRjaF90LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHZpc2lvbjo6bWF0Y2hfdD4+IGNvbnN0JiwgZmxvYXQpggJfc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246Om1hdGNoX3QsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjptYXRjaF90Pj46OnJlc2VydmUodW5zaWduZWQgbG9uZymDAnFzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6bWF0Y2hfdCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246Om1hdGNoX3Q+Pjo6cHVzaF9iYWNrW2FiaTp2MTUwMDddKHZpc2lvbjo6bWF0Y2hfdCYmKYQCSnN0ZDo6X18yOjp2ZWN0b3I8ZmxvYXQsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZmxvYXQ+Pjo6dmVjdG9yKHVuc2lnbmVkIGxvbmcphQJ2c3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246Om1hdGNoX3QsIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjptYXRjaF90Pj46OnB1c2hfYmFja1thYmk6djE1MDA3XSh2aXNpb246Om1hdGNoX3QgY29uc3QmKYYCbHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpQb2ludDJkPGZsb2F0Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OlBvaW50MmQ8ZmxvYXQ+Pj46OnZlY3Rvcih1bnNpZ25lZCBsb25nKYcCY3ZvaWQgdmlzaW9uOjpNdWx0aXBseVBvaW50SG9tb2dyYXBoeUluaG9tb2dlbm91czxmbG9hdD4oZmxvYXQmLCBmbG9hdCYsIGZsb2F0IGNvbnN0KiwgZmxvYXQsIGZsb2F0KYgCQWJvb2wgdmlzaW9uOjpNYXRyaXhJbnZlcnNlM3gzPGZsb2F0PihmbG9hdCosIGZsb2F0IGNvbnN0KiwgZmxvYXQpiQLSAXN0ZDo6X18yOjpwcmlvcml0eV9xdWV1ZTx2aXNpb246OlByaW9yaXR5UXVldWVJdGVtPDk2Piwgc3RkOjpfXzI6OnZlY3Rvcjx2aXNpb246OlByaW9yaXR5UXVldWVJdGVtPDk2Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OlByaW9yaXR5UXVldWVJdGVtPDk2Pj4+LCBzdGQ6Ol9fMjo6bGVzczx2aXNpb246OlByaW9yaXR5UXVldWVJdGVtPDk2Pj4+Ojpwb3AoKYoCsgJ2aXNpb246OkJpbmFyeUhpZXJhcmNoaWNhbENsdXN0ZXJpbmc8OTY+OjpxdWVyeShzdGQ6Ol9fMjo6cHJpb3JpdHlfcXVldWU8dmlzaW9uOjpQcmlvcml0eVF1ZXVlSXRlbTw5Nj4sIHN0ZDo6X18yOjp2ZWN0b3I8dmlzaW9uOjpQcmlvcml0eVF1ZXVlSXRlbTw5Nj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8dmlzaW9uOjpQcmlvcml0eVF1ZXVlSXRlbTw5Nj4+Piwgc3RkOjpfXzI6Omxlc3M8dmlzaW9uOjpQcmlvcml0eVF1ZXVlSXRlbTw5Nj4+PiYsIHZpc2lvbjo6Tm9kZTw5Nj4gY29uc3QqLCB1bnNpZ25lZCBjaGFyIGNvbnN0KikgY29uc3SLAocBdm9pZCBzdGQ6Ol9fMjo6dmVjdG9yPHZpc2lvbjo6bWF0Y2hfdCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246Om1hdGNoX3Q+Pjo6X19wdXNoX2JhY2tfc2xvd19wYXRoPHZpc2lvbjo6bWF0Y2hfdD4odmlzaW9uOjptYXRjaF90JiYpjAKpA3ZvaWQgc3RkOjpfXzI6Ol9fc2lmdF91cFthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6X0NsYXNzaWNBbGdQb2xpY3ksIHN0ZDo6X18yOjpsZXNzPHZpc2lvbjo6UHJpb3JpdHlRdWV1ZUl0ZW08OTY+PiYsIHN0ZDo6X18yOjpfX3dyYXBfaXRlcjx2aXNpb246OlByaW9yaXR5UXVldWVJdGVtPDk2Pio+PihzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8dmlzaW9uOjpQcmlvcml0eVF1ZXVlSXRlbTw5Nj4qPiwgc3RkOjpfXzI6Ol9fd3JhcF9pdGVyPHZpc2lvbjo6UHJpb3JpdHlRdWV1ZUl0ZW08OTY+Kj4sIHN0ZDo6X18yOjpsZXNzPHZpc2lvbjo6UHJpb3JpdHlRdWV1ZUl0ZW08OTY+PiYsIHN0ZDo6X18yOjppdGVyYXRvcl90cmFpdHM8c3RkOjpfXzI6Ol9fd3JhcF9pdGVyPHZpc2lvbjo6UHJpb3JpdHlRdWV1ZUl0ZW08OTY+Kj4+OjpkaWZmZXJlbmNlX3R5cGUpjQJbdm9pZCB2aXNpb246Ok11bHRpcGx5UG9pbnRIb21vZ3JhcGh5SW5ob21vZ2Vub3VzPGZsb2F0PihmbG9hdCosIGZsb2F0IGNvbnN0KiwgZmxvYXQgY29uc3QqKY4CTGZsb2F0IHZpc2lvbjo6TGluZVBvaW50U2lkZTxmbG9hdD4oZmxvYXQgY29uc3QqLCBmbG9hdCBjb25zdCosIGZsb2F0IGNvbnN0KimPAo4BYm9vbCB2aXNpb246OkNvbmRpdGlvbjRQb2ludHMyZDxmbG9hdD4oZmxvYXQqLCBmbG9hdCosIGZsb2F0KiwgZmxvYXQqLCBmbG9hdCYsIGZsb2F0KiwgZmxvYXQgY29uc3QqLCBmbG9hdCBjb25zdCosIGZsb2F0IGNvbnN0KiwgZmxvYXQgY29uc3QqKZACkAFib29sIHZpc2lvbjo6SG9tb2dyYXBoeTNQb2ludHNHZW9tZXRyaWNhbGx5Q29uc2lzdGVudDxmbG9hdD4oZmxvYXQgY29uc3QqLCBmbG9hdCBjb25zdCosIGZsb2F0IGNvbnN0KiwgZmxvYXQgY29uc3QqLCBmbG9hdCBjb25zdCosIGZsb2F0IGNvbnN0KimRAjFmbG9hdCB2aXNpb246OkRldGVybWluYW50M3gzPGZsb2F0PihmbG9hdCBjb25zdCopkgJTdm9pZCB2aXNpb246OkFkZEhvbW9ncmFwaHlQb2ludENvbnRyYWludDxmbG9hdD4oZmxvYXQqLCBmbG9hdCBjb25zdCosIGZsb2F0IGNvbnN0KimTAi5mbG9hdCB2aXNpb246OlN1bVNxdWFyZXM5PGZsb2F0PihmbG9hdCBjb25zdCoplAIpdm9pZCB2aXNpb246OlN3YXA5PGZsb2F0PihmbG9hdCosIGZsb2F0KimVAj12b2lkIHZpc2lvbjo6U2NhbGVWZWN0b3I5PGZsb2F0PihmbG9hdCosIGZsb2F0IGNvbnN0KiwgZmxvYXQplgJNdm9pZCB2aXNpb246OkFjY3VtdWxhdGVQcm9qZWN0aW9uOTxmbG9hdD4oZmxvYXQqLCBmbG9hdCBjb25zdCosIGZsb2F0IGNvbnN0KimXAkhmbG9hdCB2aXNpb246Ok9ydGhvZ29uYWxpemVJZGVudGl0eTh4OTxmbG9hdD4oZmxvYXQqLCBmbG9hdCBjb25zdCosIGludCmYAjxmbG9hdCB2aXNpb246OkRvdFByb2R1Y3Q5PGZsb2F0PihmbG9hdCBjb25zdCosIGZsb2F0IGNvbnN0KimZAkh2b2lkIHZpc2lvbjo6QWNjdW11bGF0ZVNjYWxlZFZlY3Rvcjk8ZmxvYXQ+KGZsb2F0KiwgZmxvYXQgY29uc3QqLCBmbG9hdCmaAoMEc3RkOjpfXzI6Ol9faGFzaF90YWJsZTxzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBpbnQ+LCBzdGQ6Ol9fMjo6X191bm9yZGVyZWRfbWFwX2hhc2hlcjx1bnNpZ25lZCBpbnQsIHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGludD4sIHN0ZDo6X18yOjpoYXNoPHVuc2lnbmVkIGludD4sIHN0ZDo6X18yOjplcXVhbF90bzx1bnNpZ25lZCBpbnQ+LCB0cnVlPiwgc3RkOjpfXzI6Ol9fdW5vcmRlcmVkX21hcF9lcXVhbDx1bnNpZ25lZCBpbnQsIHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGludD4sIHN0ZDo6X18yOjplcXVhbF90bzx1bnNpZ25lZCBpbnQ+LCBzdGQ6Ol9fMjo6aGFzaDx1bnNpZ25lZCBpbnQ+LCB0cnVlPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBpbnQ+Pj46OmNsZWFyKCmbAkR2aXNpb246OkhvdWdoU2ltaWxhcml0eVZvdGluZzo6Z2V0QmluSW5kZXgoaW50LCBpbnQsIGludCwgaW50KSBjb25zdJwCPXZpc2lvbjo6SG91Z2hTaW1pbGFyaXR5Vm90aW5nOjp2b3RlQXRJbmRleChpbnQsIHVuc2lnbmVkIGludCmdApQCc3RkOjpfXzI6OnVuaXF1ZV9wdHI8c3RkOjpfXzI6Ol9faGFzaF9ub2RlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGludD4sIHZvaWQqPiwgc3RkOjpfXzI6Ol9faGFzaF9ub2RlX2Rlc3RydWN0b3I8c3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6X19oYXNoX25vZGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPHVuc2lnbmVkIGludCwgdW5zaWduZWQgaW50Piwgdm9pZCo+Pj4+Ojp+dW5pcXVlX3B0clthYmk6djE1MDA3XSgpngKCBXN0ZDo6X18yOjpfX2hhc2hfdGFibGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPHVuc2lnbmVkIGludCwgdW5zaWduZWQgaW50Piwgc3RkOjpfXzI6Ol9fdW5vcmRlcmVkX21hcF9oYXNoZXI8dW5zaWduZWQgaW50LCBzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBpbnQ+LCBzdGQ6Ol9fMjo6aGFzaDx1bnNpZ25lZCBpbnQ+LCBzdGQ6Ol9fMjo6ZXF1YWxfdG88dW5zaWduZWQgaW50PiwgdHJ1ZT4sIHN0ZDo6X18yOjpfX3Vub3JkZXJlZF9tYXBfZXF1YWw8dW5zaWduZWQgaW50LCBzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBpbnQ+LCBzdGQ6Ol9fMjo6ZXF1YWxfdG88dW5zaWduZWQgaW50Piwgc3RkOjpfXzI6Omhhc2g8dW5zaWduZWQgaW50PiwgdHJ1ZT4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPHVuc2lnbmVkIGludCwgdW5zaWduZWQgaW50Pj4+OjpfX2RlYWxsb2NhdGVfbm9kZShzdGQ6Ol9fMjo6X19oYXNoX25vZGVfYmFzZTxzdGQ6Ol9fMjo6X19oYXNoX25vZGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPHVuc2lnbmVkIGludCwgdW5zaWduZWQgaW50Piwgdm9pZCo+Kj4qKZ8CMXZpc2lvbjo6QmluYXJ5RmVhdHVyZVN0b3JlOjpyZXNpemUodW5zaWduZWQgbG9uZymgAkJ2aXNpb246OkdhdXNzaWFuU2NhbGVTcGFjZVB5cmFtaWQ6OmxvY2F0ZShpbnQmLCBpbnQmLCBmbG9hdCkgY29uc3ShAlh2aXNpb246OlNhbXBsZVJlY2VwdG9yKHZpc2lvbjo6R2F1c3NpYW5TY2FsZVNwYWNlUHlyYW1pZCBjb25zdCosIGZsb2F0LCBmbG9hdCwgaW50LCBpbnQpogIZdmlzaW9uOjpnZXRfcHJldHR5X3RpbWUoKaMCFnZpc2lvbjo6SW1hZ2U6OkltYWdlKCmkAll2aXNpb246OkltYWdlOjphbGxvYyh2aXNpb246OkltYWdlVHlwZSwgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgaW50LCB1bnNpZ25lZCBsb25nKaUCNXZpc2lvbjo6SW1hZ2U6OmNhbGN1bGF0ZV91bml0X3NpemUodmlzaW9uOjpJbWFnZVR5cGUppgJpdmlzaW9uOjpJbWFnZTo6SW1hZ2UodW5zaWduZWQgY2hhciosIHZpc2lvbjo6SW1hZ2VUeXBlLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBpbnQsIHVuc2lnbmVkIGxvbmcppwIXdmlzaW9uOjpJbWFnZTo6fkltYWdlKCmoAocBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9wb2ludGVyPHVuc2lnbmVkIGNoYXIqLCBOdWxsQXJyYXlEZWxldGVyPHVuc2lnbmVkIGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHVuc2lnbmVkIGNoYXI+Pjo6X19vbl96ZXJvX3NoYXJlZCgpqQKfAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfcG9pbnRlcjx1bnNpZ25lZCBjaGFyKiwgTnVsbEFycmF5RGVsZXRlcjx1bnNpZ25lZCBjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjx1bnNpZ25lZCBjaGFyPj46Ol9fZ2V0X2RlbGV0ZXIoc3RkOjp0eXBlX2luZm8gY29uc3QmKSBjb25zdKoCxgFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX3BvaW50ZXI8dW5zaWduZWQgY2hhciosIHN0ZDo6X18yOjpzaGFyZWRfcHRyPHVuc2lnbmVkIGNoYXI+OjpfX3NoYXJlZF9wdHJfZGVmYXVsdF9kZWxldGU8dW5zaWduZWQgY2hhciwgdW5zaWduZWQgY2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8dW5zaWduZWQgY2hhcj4+OjpfX29uX3plcm9fc2hhcmVkKCmrAt4Bc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9wb2ludGVyPHVuc2lnbmVkIGNoYXIqLCBzdGQ6Ol9fMjo6c2hhcmVkX3B0cjx1bnNpZ25lZCBjaGFyPjo6X19zaGFyZWRfcHRyX2RlZmF1bHRfZGVsZXRlPHVuc2lnbmVkIGNoYXIsIHVuc2lnbmVkIGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHVuc2lnbmVkIGNoYXI+Pjo6X19nZXRfZGVsZXRlcihzdGQ6OnR5cGVfaW5mbyBjb25zdCYpIGNvbnN0rAJEdmlzaW9uOjpMb2dnZXI6OndyaXRlKHZpc2lvbjo6TG9nZ2VyUHJpb3JpdHlMZXZlbCwgY2hhciBjb25zdCosIC4uLimtAhd2aXNpb246OlRpbWVyOjp+VGltZXIoKa4CLXZpc2lvbjo6U2NvcGVkVGltZXI6OlNjb3BlZFRpbWVyKGNoYXIgY29uc3QqKa8CI3Zpc2lvbjo6U2NvcGVkVGltZXI6On5TY29wZWRUaW1lcigpsAJpd2ViYXJraXRMT0dpKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpsQJ2d2ViYXJraXRMT0dpKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYsIGNoYXIgY29uc3QqKbICbndlYmFya2l0TE9HaShzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmLCBpbnQpswJpd2ViYXJraXRMT0dlKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYptAJ2d2ViYXJraXRMT0dlKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYsIGNoYXIgY29uc3QqKbUCGV9fY3h4X2dsb2JhbF9hcnJheV9kdG9yLjG2Ap0Dc3RkOjpfXzI6Ol9faGFzaF90YWJsZTxzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBBUlBhcmFtPiwgc3RkOjpfXzI6Ol9fdW5vcmRlcmVkX21hcF9oYXNoZXI8aW50LCBzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBBUlBhcmFtPiwgc3RkOjpfXzI6Omhhc2g8aW50Piwgc3RkOjpfXzI6OmVxdWFsX3RvPGludD4sIHRydWU+LCBzdGQ6Ol9fMjo6X191bm9yZGVyZWRfbWFwX2VxdWFsPGludCwgc3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgQVJQYXJhbT4sIHN0ZDo6X18yOjplcXVhbF90bzxpbnQ+LCBzdGQ6Ol9fMjo6aGFzaDxpbnQ+LCB0cnVlPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBBUlBhcmFtPj4+Ojp+X19oYXNoX3RhYmxlKCm3AhxBUlRvb2xLaXRORlQ6OkFSVG9vbEtpdE5GVCgpuAI9QVJUb29sS2l0TkZUOjpwYXNzVmlkZW9EYXRhKGVtc2NyaXB0ZW46OnZhbCwgZW1zY3JpcHRlbjo6dmFsKbkCkwFzdGQ6Ol9fMjo6dmVjdG9yPHVuc2lnbmVkIGNoYXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8dW5zaWduZWQgY2hhcj4+IGVtc2NyaXB0ZW46OmNvbnZlcnRKU0FycmF5VG9OdW1iZXJWZWN0b3I8dW5zaWduZWQgY2hhcj4oZW1zY3JpcHRlbjo6dmFsIGNvbnN0Jim6Ajh1bnNpZ25lZCBsb25nIGVtc2NyaXB0ZW46OnZhbDo6YXM8dW5zaWduZWQgbG9uZz4oKSBjb25zdLsCZmVtc2NyaXB0ZW46OnZhbDo6dmFsPGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGNoYXI+PihlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBjaGFyPiYmKbwCgQFlbXNjcmlwdGVuOjppbnRlcm5hbDo6TWV0aG9kQ2FsbGVyPHZvaWQsIGVtc2NyaXB0ZW46OnZhbCBjb25zdCY+OjpjYWxsKGVtc2NyaXB0ZW46Ol9FTV9WQUwqLCBjaGFyIGNvbnN0KiwgZW1zY3JpcHRlbjo6dmFsIGNvbnN0Jim9AiNBUlRvb2xLaXRORlQ6OmdldE5GVE1hcmtlckluZm8oaW50Kb4CIGVtc2NyaXB0ZW46OnZhbDo6dmFsPGludCY+KGludCYpvwJIdm9pZCBlbXNjcmlwdGVuOjp2YWw6OnNldDxjaGFyIFszXSwgaW50PihjaGFyIGNvbnN0ICgmKSBbM10sIGludCBjb25zdCYpwAJMdm9pZCBlbXNjcmlwdGVuOjp2YWw6OnNldDxjaGFyIFs2XSwgZmxvYXQ+KGNoYXIgY29uc3QgKCYpIFs2XSwgZmxvYXQgY29uc3QmKcECSHZvaWQgZW1zY3JpcHRlbjo6dmFsOjpzZXQ8Y2hhciBbNl0sIGludD4oY2hhciBjb25zdCAoJikgWzZdLCBpbnQgY29uc3QmKcICY2Vtc2NyaXB0ZW46OmludGVybmFsOjpNZXRob2RDYWxsZXI8dm9pZCwgZG91YmxlJj46OmNhbGwoZW1zY3JpcHRlbjo6X0VNX1ZBTCosIGNoYXIgY29uc3QqLCBkb3VibGUmKcMCXWVtc2NyaXB0ZW46OmludGVybmFsOjpNZXRob2RDYWxsZXI8dm9pZCwgaW50Pjo6Y2FsbChlbXNjcmlwdGVuOjpfRU1fVkFMKiwgY2hhciBjb25zdCosIGludCYmKcQCLGVtc2NyaXB0ZW46OnZhbDo6dmFsPGludCBjb25zdCY+KGludCBjb25zdCYpxQIwZW1zY3JpcHRlbjo6dmFsOjp2YWw8ZmxvYXQgY29uc3QmPihmbG9hdCBjb25zdCYpxgIfQVJUb29sS2l0TkZUOjpkZXRlY3RORlRNYXJrZXIoKccCGEFSVG9vbEtpdE5GVDo6c2V0dXBBUjIoKcgCHUFSVG9vbEtpdE5GVDo6Z2V0TkZURGF0YShpbnQpyQIcQVJUb29sS2l0TkZUOjpkZWxldGVIYW5kbGUoKcoCGEFSVG9vbEtpdE5GVDo6dGVhcmRvd24oKcsCIUFSVG9vbEtpdE5GVDo6c2V0Q2FtZXJhKGludCwgaW50KcwCpAFzdGQ6Ol9fMjo6dW5vcmRlcmVkX21hcDxpbnQsIEFSUGFyYW0sIHN0ZDo6X18yOjpoYXNoPGludD4sIHN0ZDo6X18yOjplcXVhbF90bzxpbnQ+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpwYWlyPGludCBjb25zdCwgQVJQYXJhbT4+Pjo6b3BlcmF0b3JbXShpbnQgY29uc3QmKc0C5gVzdGQ6Ol9fMjo6cGFpcjxzdGQ6Ol9fMjo6X19oYXNoX2l0ZXJhdG9yPHN0ZDo6X18yOjpfX2hhc2hfbm9kZTxzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBBUlBhcmFtPiwgdm9pZCo+Kj4sIGJvb2w+IHN0ZDo6X18yOjpfX2hhc2hfdGFibGU8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgQVJQYXJhbT4sIHN0ZDo6X18yOjpfX3Vub3JkZXJlZF9tYXBfaGFzaGVyPGludCwgc3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgQVJQYXJhbT4sIHN0ZDo6X18yOjpoYXNoPGludD4sIHN0ZDo6X18yOjplcXVhbF90bzxpbnQ+LCB0cnVlPiwgc3RkOjpfXzI6Ol9fdW5vcmRlcmVkX21hcF9lcXVhbDxpbnQsIHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIEFSUGFyYW0+LCBzdGQ6Ol9fMjo6ZXF1YWxfdG88aW50Piwgc3RkOjpfXzI6Omhhc2g8aW50PiwgdHJ1ZT4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6Ol9faGFzaF92YWx1ZV90eXBlPGludCwgQVJQYXJhbT4+Pjo6X19lbXBsYWNlX3VuaXF1ZV9rZXlfYXJnczxpbnQsIHN0ZDo6X18yOjpwaWVjZXdpc2VfY29uc3RydWN0X3QgY29uc3QmLCBzdGQ6Ol9fMjo6dHVwbGU8aW50IGNvbnN0Jj4sIHN0ZDo6X18yOjp0dXBsZTw+PihpbnQgY29uc3QmLCBzdGQ6Ol9fMjo6cGllY2V3aXNlX2NvbnN0cnVjdF90IGNvbnN0Jiwgc3RkOjpfXzI6OnR1cGxlPGludCBjb25zdCY+JiYsIHN0ZDo6X18yOjp0dXBsZTw+JiYpzgJuQVJUb29sS2l0TkZUOjpsb2FkQ2FtZXJhKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PinPAh1BUlRvb2xLaXRORlQ6OmdldENhbWVyYUxlbnMoKdAC7wFBUlRvb2xLaXRORlQ6OmFkZE5GVE1hcmtlcnMoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4mKdECZHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjpwdXNoX2JhY2tbYWJpOnYxNTAwN10obmZ0TWFya2VyIGNvbnN0JinSAusBc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OnNpemVbYWJpOnYxNTAwN10oKSBjb25zdNMCiAF2b2lkIHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjpfX2NvbnN0cnVjdF9vbmVfYXRfZW5kW2FiaTp2MTUwMDddPG5mdE1hcmtlciBjb25zdCY+KG5mdE1hcmtlciBjb25zdCYp1AJ7dm9pZCBzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6X19wdXNoX2JhY2tfc2xvd19wYXRoPG5mdE1hcmtlciBjb25zdCY+KG5mdE1hcmtlciBjb25zdCYp1QJJc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj46OnNpemVbYWJpOnYxNTAwN10oKSBjb25zdNYCHEFSVG9vbEtpdE5GVDo6ZGV0ZWN0TWFya2VyKCnXAh5BUlRvb2xLaXRORlQ6OnNldExvZ0xldmVsKGludCnYAhtBUlRvb2xLaXRORlQ6OmdldExvZ0xldmVsKCnZAixBUlRvb2xLaXRORlQ6OnNldFByb2plY3Rpb25OZWFyUGxhbmUoZG91YmxlKdoCJkFSVG9vbEtpdE5GVDo6Z2V0UHJvamVjdGlvbk5lYXJQbGFuZSgp2wIrQVJUb29sS2l0TkZUOjpzZXRQcm9qZWN0aW9uRmFyUGxhbmUoZG91YmxlKdwCJUFSVG9vbEtpdE5GVDo6Z2V0UHJvamVjdGlvbkZhclBsYW5lKCndAh9BUlRvb2xLaXRORlQ6OnNldFRocmVzaG9sZChpbnQp3gIcQVJUb29sS2l0TkZUOjpnZXRUaHJlc2hvbGQoKd8CI0FSVG9vbEtpdE5GVDo6c2V0VGhyZXNob2xkTW9kZShpbnQp4AIgQVJUb29sS2l0TkZUOjpnZXRUaHJlc2hvbGRNb2RlKCnhAh9BUlRvb2xLaXRORlQ6OnNldERlYnVnTW9kZShpbnQp4gIiQVJUb29sS2l0TkZUOjpnZXRQcm9jZXNzaW5nSW1hZ2UoKeMCHEFSVG9vbEtpdE5GVDo6Z2V0RGVidWdNb2RlKCnkAiNBUlRvb2xLaXRORlQ6OnNldEltYWdlUHJvY01vZGUoaW50KeUCIEFSVG9vbEtpdE5GVDo6Z2V0SW1hZ2VQcm9jTW9kZSgp5gIiQVJUb29sS2l0TkZUOjpzZXR1cChpbnQsIGludCwgaW50KecCH2VtYmluZF9pbml0X2NvbnN0YW50X2JpbmRpbmdzKCnoAocDZW1zY3JpcHRlbjo6Y2xhc3NfPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+LCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6Tm9CYXNlQ2xhc3M+IGVtc2NyaXB0ZW46OnJlZ2lzdGVyX3ZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+KGNoYXIgY29uc3QqKekClAFlbXNjcmlwdGVuOjpjbGFzc188c3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj4sIGVtc2NyaXB0ZW46OmludGVybmFsOjpOb0Jhc2VDbGFzcz4gZW1zY3JpcHRlbjo6cmVnaXN0ZXJfdmVjdG9yPGludD4oY2hhciBjb25zdCop6gKmAWVtc2NyaXB0ZW46OmNsYXNzXzxzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+PiwgZW1zY3JpcHRlbjo6aW50ZXJuYWw6Ok5vQmFzZUNsYXNzPiBlbXNjcmlwdGVuOjpyZWdpc3Rlcl92ZWN0b3I8bmZ0TWFya2VyPihjaGFyIGNvbnN0KinrAkx2b2lkIGNvbnN0KiBlbXNjcmlwdGVuOjppbnRlcm5hbDo6Z2V0QWN0dWFsVHlwZTxBUlRvb2xLaXRORlQ+KEFSVG9vbEtpdE5GVCop7AJGdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6cmF3X2Rlc3RydWN0b3I8QVJUb29sS2l0TkZUPihBUlRvb2xLaXRORlQqKe0CQEFSVG9vbEtpdE5GVCogZW1zY3JpcHRlbjo6aW50ZXJuYWw6Om9wZXJhdG9yX25ldzxBUlRvb2xLaXRORlQ+KCnuAoMBdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxpbnQgKEFSVG9vbEtpdE5GVDo6KikoKT46Omludm9rZTxBUlRvb2xLaXRORlQ+KGNoYXIgY29uc3QqLCBpbnQgKEFSVG9vbEtpdE5GVDo6KikoKSnvAqEBdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxlbXNjcmlwdGVuOjp2YWwgKEFSVG9vbEtpdE5GVDo6KikoaW50KT46Omludm9rZTxBUlRvb2xLaXRORlQ+KGNoYXIgY29uc3QqLCBlbXNjcmlwdGVuOjp2YWwgKEFSVG9vbEtpdE5GVDo6KikoaW50KSnwApUBdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxuZnRNYXJrZXIgKEFSVG9vbEtpdE5GVDo6KikoaW50KT46Omludm9rZTxBUlRvb2xLaXRORlQ+KGNoYXIgY29uc3QqLCBuZnRNYXJrZXIgKEFSVG9vbEtpdE5GVDo6KikoaW50KSnxAqsCdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxpbnQgKEFSVG9vbEtpdE5GVDo6Kikoc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+KT46Omludm9rZTxBUlRvb2xLaXRORlQ+KGNoYXIgY29uc3QqLCBpbnQgKEFSVG9vbEtpdE5GVDo6Kikoc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+KSnyAp0Bdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxpbnQgKEFSVG9vbEtpdE5GVDo6KikoaW50LCBpbnQsIGludCk+OjppbnZva2U8QVJUb29sS2l0TkZUPihjaGFyIGNvbnN0KiwgaW50IChBUlRvb2xLaXRORlQ6OiopKGludCwgaW50LCBpbnQpKfMCmwF2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPGVtc2NyaXB0ZW46OnZhbCAoQVJUb29sS2l0TkZUOjoqKSgpPjo6aW52b2tlPEFSVG9vbEtpdE5GVD4oY2hhciBjb25zdCosIGVtc2NyaXB0ZW46OnZhbCAoQVJUb29sS2l0TkZUOjoqKSgpKfQCwwF2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPGludCAoQVJUb29sS2l0TkZUOjoqKShlbXNjcmlwdGVuOjp2YWwsIGVtc2NyaXB0ZW46OnZhbCk+OjppbnZva2U8QVJUb29sS2l0TkZUPihjaGFyIGNvbnN0KiwgaW50IChBUlRvb2xLaXRORlQ6OiopKGVtc2NyaXB0ZW46OnZhbCwgZW1zY3JpcHRlbjo6dmFsKSn1Av8Edm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiAoQVJUb29sS2l0TkZUOjoqKShzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiYpPjo6aW52b2tlPEFSVG9vbEtpdE5GVD4oY2hhciBjb25zdCosIHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+IChBUlRvb2xLaXRORlQ6OiopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+Jikp9gKLAXZvaWQgZW1zY3JpcHRlbjo6aW50ZXJuYWw6OlJlZ2lzdGVyQ2xhc3NNZXRob2Q8dm9pZCAoQVJUb29sS2l0TkZUOjoqKShpbnQpPjo6aW52b2tlPEFSVG9vbEtpdE5GVD4oY2hhciBjb25zdCosIHZvaWQgKEFSVG9vbEtpdE5GVDo6KikoaW50KSn3ApEBdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDx2b2lkIChBUlRvb2xLaXRORlQ6OiopKGRvdWJsZSk+OjppbnZva2U8QVJUb29sS2l0TkZUPihjaGFyIGNvbnN0Kiwgdm9pZCAoQVJUb29sS2l0TkZUOjoqKShkb3VibGUpKfgCiQF2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPGRvdWJsZSAoQVJUb29sS2l0TkZUOjoqKSgpPjo6aW52b2tlPEFSVG9vbEtpdE5GVD4oY2hhciBjb25zdCosIGRvdWJsZSAoQVJUb29sS2l0TkZUOjoqKSgpKfkCiQF2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPGludCAoQVJUb29sS2l0TkZUOjoqKShpbnQpPjo6aW52b2tlPEFSVG9vbEtpdE5GVD4oY2hhciBjb25zdCosIGludCAoQVJUb29sS2l0TkZUOjoqKShpbnQpKfoCfmVtc2NyaXB0ZW46OnZhbHVlX29iamVjdDxuZnRNYXJrZXI+JiBlbXNjcmlwdGVuOjp2YWx1ZV9vYmplY3Q8bmZ0TWFya2VyPjo6ZmllbGQ8bmZ0TWFya2VyLCBpbnQ+KGNoYXIgY29uc3QqLCBpbnQgbmZ0TWFya2VyOjoqKfsCN3ZvaWQgZW1zY3JpcHRlbjo6Y29uc3RhbnQ8aW50PihjaGFyIGNvbnN0KiwgaW50IGNvbnN0Jin8AtYDdm9pZCBjb25zdCogZW1zY3JpcHRlbjo6aW50ZXJuYWw6OmdldEFjdHVhbFR5cGU8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4+KHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+Kin9AtADdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6cmF3X2Rlc3RydWN0b3I8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4+KHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+Kin+AsoDc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4qIGVtc2NyaXB0ZW46OmludGVybmFsOjpvcGVyYXRvcl9uZXc8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4+KCn/AsUCc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OnB1c2hfYmFja1thYmk6djE1MDA3XShzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKYADigd2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+OjoqKShzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKT46Omludm9rZTxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pj4oY2hhciBjb25zdCosIHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+OjoqKShzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKSmBA8UCc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OnJlc2l6ZSh1bnNpZ25lZCBsb25nLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKYIDqAd2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+OjoqKSh1bnNpZ25lZCBsb25nLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKT46Omludm9rZTxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pj4oY2hhciBjb25zdCosIHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+OjoqKSh1bnNpZ25lZCBsb25nLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKSmDA/IFdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDx1bnNpZ25lZCBsb25nIChzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6KikoKSBjb25zdD46Omludm9rZTxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pj4oY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcgKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+OjoqKSgpIGNvbnN0KYQD4wNlbXNjcmlwdGVuOjppbnRlcm5hbDo6VmVjdG9yQWNjZXNzPHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+Pjo6Z2V0KHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZymFA5IGdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxlbXNjcmlwdGVuOjp2YWwgKCopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZyk+OjppbnZva2U8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4+KGNoYXIgY29uc3QqLCBlbXNjcmlwdGVuOjp2YWwgKCopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZykphgO6BGVtc2NyaXB0ZW46OmludGVybmFsOjpWZWN0b3JBY2Nlc3M8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4+OjpzZXQoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4mLCB1bnNpZ25lZCBsb25nLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKYcDqgd2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPGJvb2wgKCopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+JiwgdW5zaWduZWQgbG9uZywgc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0Jik+OjppbnZva2U8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4+KGNoYXIgY29uc3QqLCBib29sICgqKShzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiYsIHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpKYgDkgF2b2lkIGNvbnN0KiBlbXNjcmlwdGVuOjppbnRlcm5hbDo6Z2V0QWN0dWFsVHlwZTxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pj4oc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj4qKYkDjAF2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpyYXdfZGVzdHJ1Y3RvcjxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pj4oc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj4qKYoDggJ2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+OjoqKShpbnQgY29uc3QmKT46Omludm9rZTxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pj4oY2hhciBjb25zdCosIHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+OjoqKShpbnQgY29uc3QmKSmLA6ACdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDx2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pjo6KikodW5zaWduZWQgbG9uZywgaW50IGNvbnN0Jik+OjppbnZva2U8c3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj4+KGNoYXIgY29uc3QqLCB2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pjo6KikodW5zaWduZWQgbG9uZywgaW50IGNvbnN0JikpjAOMAnZvaWQgZW1zY3JpcHRlbjo6aW50ZXJuYWw6OlJlZ2lzdGVyQ2xhc3NNZXRob2Q8dW5zaWduZWQgbG9uZyAoc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj46OiopKCkgY29uc3Q+OjppbnZva2U8c3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj4+KGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nIChzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pjo6KikoKSBjb25zdCmNA58BZW1zY3JpcHRlbjo6aW50ZXJuYWw6OlZlY3RvckFjY2VzczxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pj46OmdldChzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiBjb25zdCYsIHVuc2lnbmVkIGxvbmcpjgOsAnZvaWQgZW1zY3JpcHRlbjo6aW50ZXJuYWw6OlJlZ2lzdGVyQ2xhc3NNZXRob2Q8ZW1zY3JpcHRlbjo6dmFsICgqKShzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiBjb25zdCYsIHVuc2lnbmVkIGxvbmcpPjo6aW52b2tlPHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+PihjaGFyIGNvbnN0KiwgZW1zY3JpcHRlbjo6dmFsICgqKShzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiBjb25zdCYsIHVuc2lnbmVkIGxvbmcpKY8DpQFlbXNjcmlwdGVuOjppbnRlcm5hbDo6VmVjdG9yQWNjZXNzPHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+Pjo6c2V0KHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+JiwgdW5zaWduZWQgbG9uZywgaW50IGNvbnN0JimQA6ICdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxib29sICgqKShzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiYsIHVuc2lnbmVkIGxvbmcsIGludCBjb25zdCYpPjo6aW52b2tlPHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+PihjaGFyIGNvbnN0KiwgYm9vbCAoKikoc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj4mLCB1bnNpZ25lZCBsb25nLCBpbnQgY29uc3QmKSmRA6oBdm9pZCBjb25zdCogZW1zY3JpcHRlbjo6aW50ZXJuYWw6OmdldEFjdHVhbFR5cGU8c3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj4+KHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+KimSA6QBdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6cmF3X2Rlc3RydWN0b3I8c3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj4+KHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+KimTA7ICdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDx2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6KikobmZ0TWFya2VyIGNvbnN0Jik+OjppbnZva2U8c3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj4+KGNoYXIgY29uc3QqLCB2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6KikobmZ0TWFya2VyIGNvbnN0JikplANkc3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj46OnJlc2l6ZSh1bnNpZ25lZCBsb25nLCBuZnRNYXJrZXIgY29uc3QmKZUD0AJ2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjoqKSh1bnNpZ25lZCBsb25nLCBuZnRNYXJrZXIgY29uc3QmKT46Omludm9rZTxzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pj4oY2hhciBjb25zdCosIHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjoqKSh1bnNpZ25lZCBsb25nLCBuZnRNYXJrZXIgY29uc3QmKSmWA1VzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6c2l6ZVthYmk6djE1MDA3XSgpIGNvbnN0lwOwAnZvaWQgZW1zY3JpcHRlbjo6aW50ZXJuYWw6OlJlZ2lzdGVyQ2xhc3NNZXRob2Q8dW5zaWduZWQgbG9uZyAoc3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj46OiopKCkgY29uc3Q+OjppbnZva2U8c3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj4+KGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nIChzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6KikoKSBjb25zdCmYA7cBZW1zY3JpcHRlbjo6aW50ZXJuYWw6OlZlY3RvckFjY2VzczxzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pj46OmdldChzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+PiBjb25zdCYsIHVuc2lnbmVkIGxvbmcpmQPQAnZvaWQgZW1zY3JpcHRlbjo6aW50ZXJuYWw6OlJlZ2lzdGVyQ2xhc3NNZXRob2Q8ZW1zY3JpcHRlbjo6dmFsICgqKShzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+PiBjb25zdCYsIHVuc2lnbmVkIGxvbmcpPjo6aW52b2tlPHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+PihjaGFyIGNvbnN0KiwgZW1zY3JpcHRlbjo6dmFsICgqKShzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+PiBjb25zdCYsIHVuc2lnbmVkIGxvbmcpKZoDwwFlbXNjcmlwdGVuOjppbnRlcm5hbDo6VmVjdG9yQWNjZXNzPHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+Pjo6c2V0KHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+JiwgdW5zaWduZWQgbG9uZywgbmZ0TWFya2VyIGNvbnN0JimbA9ICdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxib29sICgqKShzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+PiYsIHVuc2lnbmVkIGxvbmcsIG5mdE1hcmtlciBjb25zdCYpPjo6aW52b2tlPHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+PihjaGFyIGNvbnN0KiwgYm9vbCAoKikoc3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj4mLCB1bnNpZ25lZCBsb25nLCBuZnRNYXJrZXIgY29uc3QmKSmcAz1uZnRNYXJrZXIqIGVtc2NyaXB0ZW46OmludGVybmFsOjpyYXdfY29uc3RydWN0b3I8bmZ0TWFya2VyPigpnQN1aW50IGVtc2NyaXB0ZW46OmludGVybmFsOjpNZW1iZXJBY2Nlc3M8bmZ0TWFya2VyLCBpbnQ+OjpnZXRXaXJlPG5mdE1hcmtlcj4oaW50IG5mdE1hcmtlcjo6KiBjb25zdCYsIG5mdE1hcmtlciBjb25zdCYpngNdaW50IG5mdE1hcmtlcjo6KiogZW1zY3JpcHRlbjo6aW50ZXJuYWw6OmdldENvbnRleHQ8aW50IG5mdE1hcmtlcjo6Kj4oaW50IG5mdE1hcmtlcjo6KiBjb25zdCYpnwN1dm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6TWVtYmVyQWNjZXNzPG5mdE1hcmtlciwgaW50Pjo6c2V0V2lyZTxuZnRNYXJrZXI+KGludCBuZnRNYXJrZXI6OiogY29uc3QmLCBuZnRNYXJrZXImLCBpbnQpoAO0A3ZvaWQgc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46Ol9fY29uc3RydWN0X29uZV9hdF9lbmRbYWJpOnYxNTAwN108c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0Jj4oc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0JimhA6cDdm9pZCBzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6X19wdXNoX2JhY2tfc2xvd19wYXRoPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCY+KHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpogPHAnN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+OjpfX2FwcGVuZCh1bnNpZ25lZCBsb25nLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKaMDzgFlbXNjcmlwdGVuOjp2YWw6OnZhbDxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmPihzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKaQDhwJzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6X19hbm5vdGF0ZV9pbmNyZWFzZVthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKSBjb25zdKUDggJzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6X0NvbnN0cnVjdFRyYW5zYWN0aW9uOjp+X0NvbnN0cnVjdFRyYW5zYWN0aW9uKCmmA/8Bc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46Ol9fcmVjb21tZW5kW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpIGNvbnN0pwP0AnN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+PiY+OjpfX3NwbGl0X2J1ZmZlcih1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4mKagDygNzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6X19zd2FwX291dF9jaXJjdWxhcl9idWZmZXIoc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Jj4mKakD7QFzdGQ6Ol9fMjo6X19zcGxpdF9idWZmZXI8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4mPjo6fl9fc3BsaXRfYnVmZmVyKCmqA4UCc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46Ol9fYW5ub3RhdGVfc2hyaW5rW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpIGNvbnN0qwOsAnN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+OjpfX2Fubm90YXRlX2NvbnRpZ3VvdXNfY29udGFpbmVyKHZvaWQgY29uc3QqLCB2b2lkIGNvbnN0Kiwgdm9pZCBjb25zdCosIHZvaWQgY29uc3QqKSBjb25zdKwD+wFzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6X190aHJvd19sZW5ndGhfZXJyb3JbYWJpOnYxNTAwN10oKSBjb25zdK0D+AFzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6X19hbm5vdGF0ZV9kZWxldGVbYWJpOnYxNTAwN10oKSBjb25zdK4D0QJzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6X19jb25zdHJ1Y3RfYXRfZW5kKHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYprwPMAnN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+OjpfX2Jhc2VfZGVzdHJ1Y3RfYXRfZW5kW2FiaTp2MTUwMDddKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiopsAPoAXN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+Ojp+dmVjdG9yW2FiaTp2MTUwMDddKCmxA9MDZW1zY3JpcHRlbjo6aW50ZXJuYWw6Okludm9rZXI8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4qPjo6aW52b2tlKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+KiAoKikoKSmyA7wKZW1zY3JpcHRlbjo6aW50ZXJuYWw6Ok1ldGhvZEludm9rZXI8dm9pZCAoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OiopKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpLCB2b2lkLCBzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiosIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCY+OjppbnZva2Uodm9pZCAoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OiogY29uc3QmKShzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKSwgc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4qLCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6QmluZGluZ1R5cGU8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCB2b2lkPjo6J3VubmFtZWQnKimzA9QHdm9pZCAoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OioqZW1zY3JpcHRlbjo6aW50ZXJuYWw6OmdldENvbnRleHQ8dm9pZCAoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OiopKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpPih2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6KiBjb25zdCYpKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpKSkoc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0Jim0A5YCZW1zY3JpcHRlbjo6aW50ZXJuYWw6OkJpbmRpbmdUeXBlPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgdm9pZD46OmZyb21XaXJlVHlwZShlbXNjcmlwdGVuOjppbnRlcm5hbDo6QmluZGluZ1R5cGU8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCB2b2lkPjo6J3VubmFtZWQnKim1A/gKZW1zY3JpcHRlbjo6aW50ZXJuYWw6Ok1ldGhvZEludm9rZXI8dm9pZCAoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OiopKHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpLCB2b2lkLCBzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiosIHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCY+OjppbnZva2Uodm9pZCAoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OiogY29uc3QmKSh1bnNpZ25lZCBsb25nLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKSwgc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4qLCB1bnNpZ25lZCBsb25nLCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6QmluZGluZ1R5cGU8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCB2b2lkPjo6J3VubmFtZWQnKim2A9EHZW1zY3JpcHRlbjo6aW50ZXJuYWw6Ok1ldGhvZEludm9rZXI8dW5zaWduZWQgbG9uZyAoc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj46OiopKCkgY29uc3QsIHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0Kj46Omludm9rZSh1bnNpZ25lZCBsb25nIChzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Pjo6KiBjb25zdCYpKCkgY29uc3QsIHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0Kim3A4cIZW1zY3JpcHRlbjo6aW50ZXJuYWw6OkZ1bmN0aW9uSW52b2tlcjxlbXNjcmlwdGVuOjp2YWwgKCopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZyksIGVtc2NyaXB0ZW46OnZhbCwgc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4gY29uc3QmLCB1bnNpZ25lZCBsb25nPjo6aW52b2tlKGVtc2NyaXB0ZW46OnZhbCAoKiopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZyksIHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+KiwgdW5zaWduZWQgbG9uZym4A/YKZW1zY3JpcHRlbjo6aW50ZXJuYWw6OkZ1bmN0aW9uSW52b2tlcjxib29sICgqKShzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiYsIHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpLCBib29sLCBzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiYsIHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCY+OjppbnZva2UoYm9vbCAoKiopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+JiwgdW5zaWduZWQgbG9uZywgc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0JiksIHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+KiwgdW5zaWduZWQgbG9uZywgZW1zY3JpcHRlbjo6aW50ZXJuYWw6OkJpbmRpbmdUeXBlPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgdm9pZD46Oid1bm5hbWVkJyopuQO7AmVtc2NyaXB0ZW46OmludGVybmFsOjpNZXRob2RJbnZva2VyPHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+OjoqKShpbnQgY29uc3QmKSwgdm9pZCwgc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj4qLCBpbnQgY29uc3QmPjo6aW52b2tlKHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+OjoqIGNvbnN0JikoaW50IGNvbnN0JiksIHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+KiwgaW50KboD9wJlbXNjcmlwdGVuOjppbnRlcm5hbDo6TWV0aG9kSW52b2tlcjx2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pjo6KikodW5zaWduZWQgbG9uZywgaW50IGNvbnN0JiksIHZvaWQsIHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+KiwgdW5zaWduZWQgbG9uZywgaW50IGNvbnN0Jj46Omludm9rZSh2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pjo6KiBjb25zdCYpKHVuc2lnbmVkIGxvbmcsIGludCBjb25zdCYpLCBzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiosIHVuc2lnbmVkIGxvbmcsIGludCm7A/8CZW1zY3JpcHRlbjo6aW50ZXJuYWw6OkZ1bmN0aW9uSW52b2tlcjxlbXNjcmlwdGVuOjp2YWwgKCopKHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZyksIGVtc2NyaXB0ZW46OnZhbCwgc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj4gY29uc3QmLCB1bnNpZ25lZCBsb25nPjo6aW52b2tlKGVtc2NyaXB0ZW46OnZhbCAoKiopKHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZyksIHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+KiwgdW5zaWduZWQgbG9uZym8A/UCZW1zY3JpcHRlbjo6aW50ZXJuYWw6OkZ1bmN0aW9uSW52b2tlcjxib29sICgqKShzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiYsIHVuc2lnbmVkIGxvbmcsIGludCBjb25zdCYpLCBib29sLCBzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiYsIHVuc2lnbmVkIGxvbmcsIGludCBjb25zdCY+OjppbnZva2UoYm9vbCAoKiopKHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+JiwgdW5zaWduZWQgbG9uZywgaW50IGNvbnN0JiksIHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+KiwgdW5zaWduZWQgbG9uZywgaW50Kb0DZnN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjpfX2FwcGVuZCh1bnNpZ25lZCBsb25nLCBuZnRNYXJrZXIgY29uc3QmKb4DOGVtc2NyaXB0ZW46OnZhbDo6dmFsPG5mdE1hcmtlciBjb25zdCY+KG5mdE1hcmtlciBjb25zdCYpvwNwc3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj46Ol9fY29uc3RydWN0X2F0X2VuZCh1bnNpZ25lZCBsb25nLCBuZnRNYXJrZXIgY29uc3QmKcADaXN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjpfX3JlY29tbWVuZFthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKSBjb25zdMEDkwFzdGQ6Ol9fMjo6X19zcGxpdF9idWZmZXI8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4mPjo6X19zcGxpdF9idWZmZXIodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+JinCA54Bc3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj46Ol9fc3dhcF9vdXRfY2lyY3VsYXJfYnVmZmVyKHN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPiY+JinDA1dzdGQ6Ol9fMjo6X19zcGxpdF9idWZmZXI8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4mPjo6fl9fc3BsaXRfYnVmZmVyKCnEA29zdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6X19hbm5vdGF0ZV9zaHJpbmtbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZykgY29uc3TFA2xzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6X0NvbnN0cnVjdFRyYW5zYWN0aW9uOjp+X0NvbnN0cnVjdFRyYW5zYWN0aW9uKCnGA2JzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6X19hbm5vdGF0ZV9kZWxldGVbYWJpOnYxNTAwN10oKSBjb25zdMcDcXN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjpfX2Fubm90YXRlX2luY3JlYXNlW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpIGNvbnN0yANSc3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj46On52ZWN0b3JbYWJpOnYxNTAwN10oKckDhANlbXNjcmlwdGVuOjppbnRlcm5hbDo6TWV0aG9kSW52b2tlcjx2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6KikobmZ0TWFya2VyIGNvbnN0JiksIHZvaWQsIHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+KiwgbmZ0TWFya2VyIGNvbnN0Jj46Omludm9rZSh2b2lkIChzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+Pjo6KiBjb25zdCYpKG5mdE1hcmtlciBjb25zdCYpLCBzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+PiosIG5mdE1hcmtlciopygPAA2Vtc2NyaXB0ZW46OmludGVybmFsOjpNZXRob2RJbnZva2VyPHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjoqKSh1bnNpZ25lZCBsb25nLCBuZnRNYXJrZXIgY29uc3QmKSwgdm9pZCwgc3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj4qLCB1bnNpZ25lZCBsb25nLCBuZnRNYXJrZXIgY29uc3QmPjo6aW52b2tlKHZvaWQgKHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+OjoqIGNvbnN0JikodW5zaWduZWQgbG9uZywgbmZ0TWFya2VyIGNvbnN0JiksIHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+KiwgdW5zaWduZWQgbG9uZywgbmZ0TWFya2VyKinLA68DZW1zY3JpcHRlbjo6aW50ZXJuYWw6OkZ1bmN0aW9uSW52b2tlcjxlbXNjcmlwdGVuOjp2YWwgKCopKHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZyksIGVtc2NyaXB0ZW46OnZhbCwgc3RkOjpfXzI6OnZlY3RvcjxuZnRNYXJrZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8bmZ0TWFya2VyPj4gY29uc3QmLCB1bnNpZ25lZCBsb25nPjo6aW52b2tlKGVtc2NyaXB0ZW46OnZhbCAoKiopKHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZyksIHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+KiwgdW5zaWduZWQgbG9uZynMA1FlbXNjcmlwdGVuOjppbnRlcm5hbDo6R2VuZXJpY0JpbmRpbmdUeXBlPG5mdE1hcmtlcj46OnRvV2lyZVR5cGUobmZ0TWFya2VyIGNvbnN0JinNA74DZW1zY3JpcHRlbjo6aW50ZXJuYWw6OkZ1bmN0aW9uSW52b2tlcjxib29sICgqKShzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+PiYsIHVuc2lnbmVkIGxvbmcsIG5mdE1hcmtlciBjb25zdCYpLCBib29sLCBzdGQ6Ol9fMjo6dmVjdG9yPG5mdE1hcmtlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxuZnRNYXJrZXI+PiYsIHVuc2lnbmVkIGxvbmcsIG5mdE1hcmtlciBjb25zdCY+OjppbnZva2UoYm9vbCAoKiopKHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+JiwgdW5zaWduZWQgbG9uZywgbmZ0TWFya2VyIGNvbnN0JiksIHN0ZDo6X18yOjp2ZWN0b3I8bmZ0TWFya2VyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPG5mdE1hcmtlcj4+KiwgdW5zaWduZWQgbG9uZywgbmZ0TWFya2VyKinOA7sBZW1zY3JpcHRlbjo6aW50ZXJuYWw6Ok1ldGhvZEludm9rZXI8ZW1zY3JpcHRlbjo6dmFsIChBUlRvb2xLaXRORlQ6OiopKGludCksIGVtc2NyaXB0ZW46OnZhbCwgQVJUb29sS2l0TkZUKiwgaW50Pjo6aW52b2tlKGVtc2NyaXB0ZW46OnZhbCAoQVJUb29sS2l0TkZUOjoqIGNvbnN0JikoaW50KSwgQVJUb29sS2l0TkZUKiwgaW50Kc8DqQFlbXNjcmlwdGVuOjppbnRlcm5hbDo6TWV0aG9kSW52b2tlcjxuZnRNYXJrZXIgKEFSVG9vbEtpdE5GVDo6KikoaW50KSwgbmZ0TWFya2VyLCBBUlRvb2xLaXRORlQqLCBpbnQ+OjppbnZva2UobmZ0TWFya2VyIChBUlRvb2xLaXRORlQ6OiogY29uc3QmKShpbnQpLCBBUlRvb2xLaXRORlQqLCBpbnQp0AOQBGVtc2NyaXB0ZW46OmludGVybmFsOjpNZXRob2RJbnZva2VyPGludCAoQVJUb29sS2l0TkZUOjoqKShzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4pLCBpbnQsIEFSVG9vbEtpdE5GVCosIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj46Omludm9rZShpbnQgKEFSVG9vbEtpdE5GVDo6KiBjb25zdCYpKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiksIEFSVG9vbEtpdE5GVCosIGVtc2NyaXB0ZW46OmludGVybmFsOjpCaW5kaW5nVHlwZTxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHZvaWQ+OjondW5uYW1lZCcqKdEDvwFlbXNjcmlwdGVuOjppbnRlcm5hbDo6TWV0aG9kSW52b2tlcjxpbnQgKEFSVG9vbEtpdE5GVDo6KikoaW50LCBpbnQsIGludCksIGludCwgQVJUb29sS2l0TkZUKiwgaW50LCBpbnQsIGludD46Omludm9rZShpbnQgKEFSVG9vbEtpdE5GVDo6KiBjb25zdCYpKGludCwgaW50LCBpbnQpLCBBUlRvb2xLaXRORlQqLCBpbnQsIGludCwgaW50KdIDqwFlbXNjcmlwdGVuOjppbnRlcm5hbDo6TWV0aG9kSW52b2tlcjxlbXNjcmlwdGVuOjp2YWwgKEFSVG9vbEtpdE5GVDo6KikoKSwgZW1zY3JpcHRlbjo6dmFsLCBBUlRvb2xLaXRORlQqPjo6aW52b2tlKGVtc2NyaXB0ZW46OnZhbCAoQVJUb29sS2l0TkZUOjoqIGNvbnN0JikoKSwgQVJUb29sS2l0TkZUKinTA5UCZW1zY3JpcHRlbjo6aW50ZXJuYWw6Ok1ldGhvZEludm9rZXI8aW50IChBUlRvb2xLaXRORlQ6OiopKGVtc2NyaXB0ZW46OnZhbCwgZW1zY3JpcHRlbjo6dmFsKSwgaW50LCBBUlRvb2xLaXRORlQqLCBlbXNjcmlwdGVuOjp2YWwsIGVtc2NyaXB0ZW46OnZhbD46Omludm9rZShpbnQgKEFSVG9vbEtpdE5GVDo6KiBjb25zdCYpKGVtc2NyaXB0ZW46OnZhbCwgZW1zY3JpcHRlbjo6dmFsKSwgQVJUb29sS2l0TkZUKiwgZW1zY3JpcHRlbjo6X0VNX1ZBTCosIGVtc2NyaXB0ZW46Ol9FTV9WQUwqKdQD1whlbXNjcmlwdGVuOjppbnRlcm5hbDo6TWV0aG9kSW52b2tlcjxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiAoQVJUb29sS2l0TkZUOjoqKShzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiYpLCBzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+PiwgQVJUb29sS2l0TkZUKiwgc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4mPjo6aW52b2tlKHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+IChBUlRvb2xLaXRORlQ6OiogY29uc3QmKShzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiYpLCBBUlRvb2xLaXRORlQqLCBzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+Piop1QOmAWVtc2NyaXB0ZW46OmludGVybmFsOjpNZXRob2RJbnZva2VyPHZvaWQgKEFSVG9vbEtpdE5GVDo6KikoZG91YmxlKSwgdm9pZCwgQVJUb29sS2l0TkZUKiwgZG91YmxlPjo6aW52b2tlKHZvaWQgKEFSVG9vbEtpdE5GVDo6KiBjb25zdCYpKGRvdWJsZSksIEFSVG9vbEtpdE5GVCosIGRvdWJsZSnWA5ABZW1zY3JpcHRlbjo6aW50ZXJuYWw6Ok1ldGhvZEludm9rZXI8ZG91YmxlIChBUlRvb2xLaXRORlQ6OiopKCksIGRvdWJsZSwgQVJUb29sS2l0TkZUKj46Omludm9rZShkb3VibGUgKEFSVG9vbEtpdE5GVDo6KiBjb25zdCYpKCksIEFSVG9vbEtpdE5GVCop1wOXAWVtc2NyaXB0ZW46OmludGVybmFsOjpNZXRob2RJbnZva2VyPGludCAoQVJUb29sS2l0TkZUOjoqKShpbnQpLCBpbnQsIEFSVG9vbEtpdE5GVCosIGludD46Omludm9rZShpbnQgKEFSVG9vbEtpdE5GVDo6KiBjb25zdCYpKGludCksIEFSVG9vbEtpdE5GVCosIGludCnYA7oCc3RkOjpfXzI6OnVuaXF1ZV9wdHI8c3RkOjpfXzI6Ol9faGFzaF9ub2RlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIEFSUGFyYW0+LCB2b2lkKj4sIHN0ZDo6X18yOjpfX2hhc2hfbm9kZV9kZXN0cnVjdG9yPHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6Ol9faGFzaF9ub2RlPHN0ZDo6X18yOjpfX2hhc2hfdmFsdWVfdHlwZTxpbnQsIEFSUGFyYW0+LCB2b2lkKj4+Pj46OnJlc2V0W2FiaTp2MTUwMDddKHN0ZDo6X18yOjpfX2hhc2hfbm9kZTxzdGQ6Ol9fMjo6X19oYXNoX3ZhbHVlX3R5cGU8aW50LCBBUlBhcmFtPiwgdm9pZCo+KinZAw8uTGNhbGxfZHRvcnMuNTDaAw5hcjJUcmFja2luZ01vZNsDDmFyMkdldFRyYW5zTWF03AMYYXIyR2V0VHJhbnNNYXRIb21vZ3JhcGh53QMJZ2V0RGVsdGFT3gMHY29tcEUuMd8DES5MY2FsbF9kdG9ycy41MC4x4AMQYXIyVHJhY2tpbmcyZFN1YuEDCmpwZWdfYWJvcnTiAwxqcGVnX2Rlc3Ryb3njAxVqcGVnX0NyZWF0ZURlY29tcHJlc3PkAxdqcGVnX2Rlc3Ryb3lfZGVjb21wcmVzc+UDEGpwZWdfcmVhZF9oZWFkZXLmAxZqcGVnX2ZpbmlzaF9kZWNvbXByZXNz5wMVanBlZ19zdGFydF9kZWNvbXByZXNz6AMTanBlZ19yZWFkX3NjYW5saW5lc+kDDmpwZWdfc3RkaW9fc3Jj6gMPc2tpcF9pbnB1dF9kYXRh6wMRZmlsbF9pbnB1dF9idWZmZXLsAwtpbml0X3NvdXJjZe0DEWZpbmlzaF9pbnB1dF9wYXNz7gMQc3RhcnRfaW5wdXRfcGFzc+8DFnJlc2V0X2lucHV0X2NvbnRyb2xsZXLwAw9jb25zdW1lX21hcmtlcnPxAxZqcGVnX3Jlc3luY190b19yZXN0YXJ08gMLbmV4dF9tYXJrZXLzAw1za2lwX3ZhcmlhYmxl9AMTcmVhZF9yZXN0YXJ0X21hcmtlcvUDDHJlYWRfbWFya2Vyc/YDE3Jlc2V0X21hcmtlcl9yZWFkZXL3AxRnZXRfaW50ZXJlc3RpbmdfYXBwbvgDB2dldF9zb2b5AxFncmF5c2NhbGVfY29udmVydPoDEHJnYl9ncmF5X2NvbnZlcnT7AxFyZ2IxX2dyYXlfY29udmVydPwDEGdyYXlfcmdiX2NvbnZlcnT9Aw95Y2NfcmdiX2NvbnZlcnT+AxNidWlsZF95Y2NfcmdiX3RhYmxl/wMLcmdiX2NvbnZlcnSABBByZ2IxX3JnYl9jb252ZXJ0gQQReWNja19jbXlrX2NvbnZlcnSCBAxudWxsX2NvbnZlcnSDBApzdGFydF9wYXNzhAQMc3RhcnRfcGFzcy4xhQQTZGVjb2RlX21jdV9EQ19maXJzdIYEE2RlY29kZV9tY3VfQUNfZmlyc3SHBBRkZWNvZGVfbWN1X0RDX3JlZmluZYgEFGRlY29kZV9tY3VfQUNfcmVmaW5liQQKZGVjb2RlX21jdYoED3Byb2Nlc3NfcmVzdGFydIsEDGFyaXRoX2RlY29kZYwEEGZpbmlzaF9wYXNzX2h1ZmaNBBdzdGFydF9wYXNzX2h1ZmZfZGVjb2Rlco4EFmRlY29kZV9tY3VfQUNfcmVmaW5lLjGPBBZkZWNvZGVfbWN1X0RDX3JlZmluZS4xkAQVZGVjb2RlX21jdV9BQ19maXJzdC4xkQQVZGVjb2RlX21jdV9EQ19maXJzdC4xkgQXanBlZ19tYWtlX2RfZGVyaXZlZF90YmyTBAxkZWNvZGVfbWN1LjGUBA5kZWNvZGVfbWN1X3N1YpUEFGpwZWdfZmlsbF9iaXRfYnVmZmVylgQQanBlZ19odWZmX2RlY29kZZcEEXN0YXJ0X291dHB1dF9wYXNzmAQSc3RhcnRfaW5wdXRfcGFzcy4xmQQPZGVjb21wcmVzc19kYXRhmgQMY29uc3VtZV9kYXRhmwQSZGVjb21wcmVzc19vbmVwYXNznAQSZHVtbXlfY29uc3VtZV9kYXRhnQQWZGVjb21wcmVzc19zbW9vdGhfZGF0YZ4ED3N0YXJ0X3Bhc3NfbWFpbp8EGXByb2Nlc3NfZGF0YV9jb250ZXh0X21haW6gBBhwcm9jZXNzX2RhdGFfc2ltcGxlX21haW6hBBdwcm9jZXNzX2RhdGFfY3JhbmtfcG9zdKIEE3VzZV9tZXJnZWRfdXBzYW1wbGWjBBJmaW5pc2hfb3V0cHV0X3Bhc3OkBBdwcmVwYXJlX2Zvcl9vdXRwdXRfcGFzc6UEGnN0YXJ0X3Bhc3NfbWVyZ2VkX3Vwc2FtcGxlpgQUaDJ2Ml9tZXJnZWRfdXBzYW1wbGWnBBJtZXJnZWRfMnZfdXBzYW1wbGWoBBRoMnYxX21lcmdlZF91cHNhbXBsZakEEm1lcmdlZF8xdl91cHNhbXBsZaoEEHN0YXJ0X3Bhc3NfZHBvc3SrBBJwb3N0X3Byb2Nlc3NfMXBhc3OsBBRwb3N0X3Byb2Nlc3NfcHJlcGFzc60EEnBvc3RfcHJvY2Vzc18ycGFzc64EDHNlcF91cHNhbXBsZa8EE3N0YXJ0X3Bhc3NfdXBzYW1wbGWwBA1ub29wX3Vwc2FtcGxlsQQRZnVsbHNpemVfdXBzYW1wbGWyBA1oMnYxX3Vwc2FtcGxlswQNaDJ2Ml91cHNhbXBsZbQEDGludF91cHNhbXBsZbUEDmpwZWdfc3RkX2Vycm9ytgQPcmVzZXRfZXJyb3JfbWdytwQOZm9ybWF0X21lc3NhZ2W4BA5vdXRwdXRfbWVzc2FnZbkEDGVtaXRfbWVzc2FnZboECmVycm9yX2V4aXS7BA9qcGVnX2lkY3RfZmxvYXS8BA9qcGVnX2lkY3RfaWZhc3S9BA9qcGVnX2lkY3RfaXNsb3e+BA1qcGVnX2lkY3RfN3g3vwQNanBlZ19pZGN0XzZ4NsAEDWpwZWdfaWRjdF81eDXBBA1qcGVnX2lkY3RfNHg0wgQNanBlZ19pZGN0XzN4M8MEDWpwZWdfaWRjdF8yeDLEBA1qcGVnX2lkY3RfMXgxxQQNanBlZ19pZGN0Xzl4OcYED2pwZWdfaWRjdF8xMHgxMMcED2pwZWdfaWRjdF8xMXgxMcgED2pwZWdfaWRjdF8xMngxMskED2pwZWdfaWRjdF8xM3gxM8oED2pwZWdfaWRjdF8xNHgxNMsED2pwZWdfaWRjdF8xNXgxNcwED2pwZWdfaWRjdF8xNngxNs0EDmpwZWdfaWRjdF8xNng4zgQOanBlZ19pZGN0XzE0eDfPBA5qcGVnX2lkY3RfMTJ4NtAEDmpwZWdfaWRjdF8xMHg10QQNanBlZ19pZGN0Xzh4NNIEDWpwZWdfaWRjdF82eDPTBA1qcGVnX2lkY3RfNHgy1AQNanBlZ19pZGN0XzJ4MdUEDmpwZWdfaWRjdF84eDE21gQOanBlZ19pZGN0Xzd4MTTXBA5qcGVnX2lkY3RfNngxMtgEDmpwZWdfaWRjdF81eDEw2QQNanBlZ19pZGN0XzR4ONoEDWpwZWdfaWRjdF8zeDbbBA1qcGVnX2lkY3RfMng03AQNanBlZ19pZGN0XzF4Mt0EDXNlbGZfZGVzdHJ1Y3TeBAlmcmVlX3Bvb2zfBBJhY2Nlc3NfdmlydF9iYXJyYXngBBJhY2Nlc3NfdmlydF9zYXJyYXnhBBNyZWFsaXplX3ZpcnRfYXJyYXlz4gQTcmVxdWVzdF92aXJ0X2JhcnJheeMEE3JlcXVlc3RfdmlydF9zYXJyYXnkBAxhbGxvY19iYXJyYXnlBAxhbGxvY19zYXJyYXnmBAthbGxvY19sYXJnZecEC2FsbG9jX3NtYWxs6AQXanBlZ19vcGVuX2JhY2tpbmdfc3RvcmXpBBVuZXdfY29sb3JfbWFwXzFfcXVhbnTqBBJzdGFydF9wYXNzXzFfcXVhbnTrBBFjcmVhdGVfY29sb3JpbmRleOwED2NvbG9yX3F1YW50aXplM+0EDmNvbG9yX3F1YW50aXpl7gQUcXVhbnRpemUzX29yZF9kaXRoZXLvBBNxdWFudGl6ZV9vcmRfZGl0aGVy8AQScXVhbnRpemVfZnNfZGl0aGVy8QQVbmV3X2NvbG9yX21hcF8yX3F1YW508gQSc3RhcnRfcGFzc18yX3F1YW508wQQaW5pdF9lcnJvcl9saW1pdPQED3Bhc3MyX25vX2RpdGhlcvUED3Bhc3MyX2ZzX2RpdGhlcvYEDGZpbmlzaF9wYXNzMfcEEHByZXNjYW5fcXVhbnRpemX4BAp1cGRhdGVfYm94+QQRZmlsbF9pbnZlcnNlX2NtYXD6BA1qZGl2X3JvdW5kX3Vw+wQJanJvdW5kX3Vw/AQRamNvcHlfc2FtcGxlX3Jvd3P9BA1fX2dldFR5cGVOYW1l/gQbX2VtYmluZF9pbml0aWFsaXplX2JpbmRpbmdz/wQVZW1iaW5kX2luaXRfYnVpbHRpbigpgAUIX19tZW1jcHmBBRBfX2Vycm5vX2xvY2F0aW9uggURLkxjYWxsX2R0b3JzLjUwLjKDBQFShAUGYXRhbjJmhQURLkxjYWxsX2R0b3JzLjUwLjOGBQVhdGFuZocFES5MY2FsbF9kdG9ycy41MC40iAUPX19mdW5jc19vbl9leGl0iQUNX19fY3hhX2F0ZXhpdIoFCF9fYXRleGl0iwUEY2FsbIwFES5MY2FsbF9kdG9ycy41MC41jQUFX19jb3OOBRBfX3JlbV9waW8yX2xhcmdljwURLkxjYWxsX2R0b3JzLjUwLjaQBQpfX3JlbV9waW8ykQUFX19zaW6SBQNjb3OTBQdfX2Nvc2RmlAUHX19zaW5kZpUFC19fcmVtX3BpbzJmlgUEY29zZpcFBl9fdGltZZgFD19fY2xvY2tfZ2V0dGltZZkFDl9fZ2V0dGltZW9mZGF5mgURLkxjYWxsX2R0b3JzLjUwLjebBQ1fX21hdGhfeGZsb3dmnAULZnBfYmFycmllcmadBREuTGNhbGxfZHRvcnMuNTAuOJ4FCl9fbG9ja2ZpbGWfBQZmY2xvc2WgBQZmZmx1c2ihBREuTGNhbGxfZHRvcnMuNTAuOaIFCF9fdG9yZWFkowUHX191Zmxvd6QFDF9fc3RkaW9fcmVhZKUFDV9fc3RkaW9fd3JpdGWmBQxfX3N0ZGlvX3NlZWunBQ1fX3N0ZGlvX2Nsb3NlqAUIX19mZG9wZW6pBRIuTGNhbGxfZHRvcnMuNTAuMTCqBQVmb3BlbqsFEi5MY2FsbF9kdG9ycy41MC4xMawFCGZpcHJpbnRmrQUJX190b3dyaXRlrgUKX19vdmVyZmxvd68FBWFfY2FzsAUGYV9zd2FwsQUFZnJlYWSyBRFfX2ZzZWVrb191bmxvY2tlZLMFBWZzZWVrtAURX19mdGVsbG9fdW5sb2NrZWS1BQVmdGVsbLYFCV9fZndyaXRleLcFBmZ3cml0ZbgFIF9fZW1zY3JpcHRlbl9lbnZpcm9uX2NvbnN0cnVjdG9yuQUSLkxjYWxsX2R0b3JzLjUwLjEyugUGZ2V0ZW52uwUHaXNkaWdpdLwFB2lzc3BhY2W9BRIuTGNhbGxfZHRvcnMuNTAuMTO+BRNwdGhyZWFkX3NldHNwZWNpZmljvwUSLkxjYWxsX2R0b3JzLjUwLjE0wAUSLkxjYWxsX2R0b3JzLjUwLjE1wQUNZnBfYmFycmllcmYuMcIFD19fbWF0aF9pbnZhbGlkZsMFBGxvZ2bEBRIuTGNhbGxfZHRvcnMuNTAuMTbFBQdscm91bmRmxgUHX19sc2Vla8cFBm1lbWNocsgFEi5MY2FsbF9kdG9ycy41MC4xN8kFCnplcm9pbmZuYW7KBQhjaGVja2ludMsFDWZwX2JhcnJpZXJmLjLMBRIuTGNhbGxfZHRvcnMuNTAuMTjNBRNfX3N5c2NhbGxfcHJsaW1pdDY0zgUSLkxjYWxsX2R0b3JzLjUwLjE5zwUJX19xc29ydF9y0AUEc2lmdNEFA3NoctIFB3RyaW5rbGXTBQNzaGzUBQRwbnR61QUFY3ljbGXWBQhhX2N0el8zMtcFEi5MY2FsbF9kdG9ycy41MC4yMNgFBXFzb3J02QULd3JhcHBlcl9jbXDaBRIuTGNhbGxfZHRvcnMuNTAuMjHbBQZyZXdpbmTcBQZzY2FsYm7dBQNzaW7eBQRzaW5m3wUIc25wcmludGbgBQhzaXByaW50ZuEFBnNzY2FuZuIFEi5MY2FsbF9kdG9ycy41MC4yMuMFGF9fZW1zY3JpcHRlbl9zdGRvdXRfc2Vla+QFEi5MY2FsbF9kdG9ycy41MC4yM+UFBnN0cmNocuYFC19fc3RyY2hybnVs5wUGc3RyY21w6AUGc3RyZHVw6QUIc3RyZXJyb3LqBRIuTGNhbGxfZHRvcnMuNTAuMjTrBQZzdHJsZW7sBQdzdHJuY3B57QUGc3Ryc3Bu7gUHc3RyY3Nwbu8FEi5MY2FsbF9kdG9ycy41MC4yNfAFDV9fc3lzY2FsbF9yZXTxBQl2YXNwcmludGbyBQVmcmV4cPMFE19fdmZwcmludGZfaW50ZXJuYWz0BQtwcmludGZfY29yZfUFA291dPYFBmdldGludPcFB3BvcF9hcmf4BQVmbXRfdfkFA3BhZPoFCHZmcHJpbnRm+wUGZm10X2Zw/AUTcG9wX2FyZ19sb25nX2RvdWJsZf0FCXZmaXByaW50Zv4FEi5MY2FsbF9kdG9ycy41MC4yNv8FCXZzbnByaW50ZoAGCHNuX3dyaXRlgQYKdnNuaXByaW50ZoIGEi5MY2FsbF9kdG9ycy41MC4yN4MGB19fc2hsaW2EBghfX3NoZ2V0Y4UGCWNvcHlzaWdubIYGB3NjYWxibmyHBgVmbW9kbIgGC19fZmxvYXRzY2FuiQYIZGVjZmxvYXSKBgdzY2FuZXhwiwYSLkxjYWxsX2R0b3JzLjUwLjI4jAYSLkxjYWxsX2R0b3JzLjUwLjI5jQYSLkxjYWxsX2R0b3JzLjUwLjMwjgYHbWJydG93Y48GEi5MY2FsbF9kdG9ycy41MC4zMZAGB3Zmc2NhbmaRBgVhcmdfbpIGCXN0b3JlX2ludJMGB3Zzc2NhbmaUBgtzdHJpbmdfcmVhZJUGEl9fd2FzaV9zeXNjYWxsX3JldJYGB3djcnRvbWKXBgZ3Y3RvbWKYBghkbG1hbGxvY5kGBmRsZnJlZZoGCmRsbWVtYWxpZ26bBg1kaXNwb3NlX2NodW5rnAYYZW1zY3JpcHRlbl9nZXRfaGVhcF9zaXplnQYEc2Jya54GCF9fYWRkdGYznwYJX19hc2hsdGkzoAYHX19sZXRmMqEGB19fZ2V0ZjKiBghfX2RpdnRmM6MGCHNldFRocmV3pAYKc2F2ZVNldGptcKUGCnRlc3RTZXRqbXCmBhJlbXNjcmlwdGVuX2xvbmdqbXCnBg1fX2V4dGVuZGRmdGYyqAYLX19mbG9hdHNpdGapBg1fX2Zsb2F0dW5zaXRmqgYJX19sc2hydGkzqwYIX19tdWx0ZjOsBghfX211bHRpM60GCF9fc3VidGYzrgYMX190cnVuY3RmZGYyrwYMX190cnVuY3Rmc2YysAYlc3RkOjpfXzI6Ol9fbmV4dF9wcmltZSh1bnNpZ25lZCBsb25nKbEGmQF1bnNpZ25lZCBpbnQgY29uc3QqIHN0ZDo6X18yOjpsb3dlcl9ib3VuZFthYmk6djE1MDA3XTx1bnNpZ25lZCBpbnQgY29uc3QqLCB1bnNpZ25lZCBsb25nPih1bnNpZ25lZCBpbnQgY29uc3QqLCB1bnNpZ25lZCBpbnQgY29uc3QqLCB1bnNpZ25lZCBsb25nIGNvbnN0JimyBjlzdGQ6Ol9fMjo6X190aHJvd19vdmVyZmxvd19lcnJvclthYmk6djE1MDA3XShjaGFyIGNvbnN0KimzBp0Bc3RkOjpfXzI6Oml0ZXJhdG9yX3RyYWl0czx1bnNpZ25lZCBpbnQgY29uc3QqPjo6ZGlmZmVyZW5jZV90eXBlIHN0ZDo6X18yOjpkaXN0YW5jZVthYmk6djE1MDA3XTx1bnNpZ25lZCBpbnQgY29uc3QqPih1bnNpZ25lZCBpbnQgY29uc3QqLCB1bnNpZ25lZCBpbnQgY29uc3QqKbQGdnN0ZDo6X18yOjpfX2xlc3M8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPjo6b3BlcmF0b3IoKVthYmk6djE1MDA3XSh1bnNpZ25lZCBpbnQgY29uc3QmLCB1bnNpZ25lZCBsb25nIGNvbnN0JikgY29uc3S1BmR1bnNpZ25lZCBpbnQgY29uc3QmIHN0ZDo6X18yOjpfX2lkZW50aXR5OjpvcGVyYXRvcigpPHVuc2lnbmVkIGludCBjb25zdCY+KHVuc2lnbmVkIGludCBjb25zdCYpIGNvbnN0tgbFAXN0ZDo6X18yOjppdGVyYXRvcl90cmFpdHM8dW5zaWduZWQgaW50IGNvbnN0Kj46OmRpZmZlcmVuY2VfdHlwZSBzdGQ6Ol9fMjo6X19kaXN0YW5jZVthYmk6djE1MDA3XTx1bnNpZ25lZCBpbnQgY29uc3QqPih1bnNpZ25lZCBpbnQgY29uc3QqLCB1bnNpZ25lZCBpbnQgY29uc3QqLCBzdGQ6Ol9fMjo6cmFuZG9tX2FjY2Vzc19pdGVyYXRvcl90YWcptwZEc3RkOjpfXzI6OmJhc2ljX2lvczxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp+YmFzaWNfaW9zKCm4BkZzdGQ6Ol9fMjo6YmFzaWNfaW9zPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46On5iYXNpY19pb3MoKS4xuQZQc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp+YmFzaWNfc3RyZWFtYnVmKCm6BlJzdGQ6Ol9fMjo6YmFzaWNfc3RyZWFtYnVmPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46On5iYXNpY19zdHJlYW1idWYoKS4xuwZPc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpiYXNpY19zdHJlYW1idWYoKbwGXHN0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6aW1idWUoc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYpvQZRc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpzZXRidWYoY2hhciosIGxvbmcpvgZ7c3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpzZWVrb2ZmKGxvbmcgbG9uZywgc3RkOjpfXzI6Omlvc19iYXNlOjpzZWVrZGlyLCB1bnNpZ25lZCBpbnQpvwY4c3RkOjpfXzI6OmZwb3M8X19tYnN0YXRlX3Q+OjpmcG9zW2FiaTp2MTUwMDddKGxvbmcgbG9uZynABnBzdGQ6Ol9fMjo6YmFzaWNfc3RyZWFtYnVmPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46OnNlZWtwb3Moc3RkOjpfXzI6OmZwb3M8X19tYnN0YXRlX3Q+LCB1bnNpZ25lZCBpbnQpwQZRc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp4c2dldG4oY2hhciosIGxvbmcpwgZFbG9uZyBjb25zdCYgc3RkOjpfXzI6Om1pblthYmk6djE1MDA3XTxsb25nPihsb25nIGNvbnN0JiwgbG9uZyBjb25zdCYpwwZEc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Ojpjb3B5KGNoYXIqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZynEBklzdGQ6Ol9fMjo6YmFzaWNfc3RyZWFtYnVmPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46OnVuZGVyZmxvdygpxQZFc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp1ZmxvdygpxgYuc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Ojp0b19pbnRfdHlwZShjaGFyKccGTHN0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6cGJhY2tmYWlsKGludCnIBldzdGQ6Ol9fMjo6YmFzaWNfc3RyZWFtYnVmPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46OnhzcHV0bihjaGFyIGNvbnN0KiwgbG9uZynJBk5zdGQ6Ol9fMjo6YmFzaWNfaXN0cmVhbTxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp+YmFzaWNfaXN0cmVhbSgpLjHKBl12aXJ0dWFsIHRodW5rIHRvIHN0ZDo6X18yOjpiYXNpY19pc3RyZWFtPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46On5iYXNpY19pc3RyZWFtKCnLBk5zdGQ6Ol9fMjo6YmFzaWNfaXN0cmVhbTxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp+YmFzaWNfaXN0cmVhbSgpLjLMBl92aXJ0dWFsIHRodW5rIHRvIHN0ZDo6X18yOjpiYXNpY19pc3RyZWFtPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46On5iYXNpY19pc3RyZWFtKCkuMc0GUHN0ZDo6X18yOjpiYXNpY19pb3M8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6Z29vZFthYmk6djE1MDA3XSgpIGNvbnN0zgZDc3RkOjpfXzI6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6Zmx1c2goKc8G2gFib29sIHN0ZDo6X18yOjpvcGVyYXRvcj09W2FiaTp2MTUwMDddPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4oc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiBjb25zdCYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4gY29uc3QmKdAGX3N0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46Om9wZXJhdG9yKlthYmk6djE1MDA3XSgpIGNvbnN00QZAc3RkOjpfXzI6OmN0eXBlPGNoYXI+Ojppc1thYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nLCBjaGFyKSBjb25zdNIGWnN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46Om9wZXJhdG9yKytbYWJpOnYxNTAwN10oKdMGWnN0ZDo6X18yOjpiYXNpY19pb3M8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6c2V0c3RhdGVbYWJpOnYxNTAwN10odW5zaWduZWQgaW50KdQGU3N0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6cHVic3luY1thYmk6djE1MDA3XSgp1QZRc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpzZ2V0Y1thYmk6djE1MDA3XSgp1gZSc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpzYnVtcGNbYWJpOnYxNTAwN10oKdcGMnN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPjo6ZXFfaW50X3R5cGUoaW50LCBpbnQp2AZOc3RkOjpfXzI6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6fmJhc2ljX29zdHJlYW0oKS4x2QZddmlydHVhbCB0aHVuayB0byBzdGQ6Ol9fMjo6YmFzaWNfb3N0cmVhbTxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp+YmFzaWNfb3N0cmVhbSgp2gZOc3RkOjpfXzI6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6fmJhc2ljX29zdHJlYW0oKS4y2wZfdmlydHVhbCB0aHVuayB0byBzdGQ6Ol9fMjo6YmFzaWNfb3N0cmVhbTxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Ojp+YmFzaWNfb3N0cmVhbSgpLjHcBocBc3RkOjpfXzI6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6c2VudHJ5OjpzZW50cnkoc3RkOjpfXzI6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiYp3QZNc3RkOjpfXzI6OmJhc2ljX29zdHJlYW08Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6c2VudHJ5Ojp+c2VudHJ5KCneBp4Bc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6b3N0cmVhbWJ1Zl9pdGVyYXRvclthYmk6djE1MDA3XShzdGQ6Ol9fMjo6YmFzaWNfb3N0cmVhbTxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+JinfBlxzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpmYWlsZWRbYWJpOnYxNTAwN10oKSBjb25zdOAGS3N0ZDo6X18yOjpiYXNpY19vc3RyZWFtPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46Om9wZXJhdG9yPDwoaW50KeEGXXN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46Om9wZXJhdG9yPVthYmk6djE1MDA3XShjaGFyKeIGVnN0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pjo6fmJhc2ljX3N0cmVhbWJ1Zigp4wZYc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1Zjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Ojp+YmFzaWNfc3RyZWFtYnVmKCkuMeQGVXN0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pjo6YmFzaWNfc3RyZWFtYnVmKCnlBlpzdGQ6Ol9fMjo6YmFzaWNfc3RyZWFtYnVmPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj46OnhzZ2V0bih3Y2hhcl90KiwgbG9uZynmBk1zdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD46OmNvcHkod2NoYXJfdCosIHdjaGFyX3QgY29uc3QqLCB1bnNpZ25lZCBsb25nKecGS3N0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pjo6dWZsb3coKegGYHN0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pjo6eHNwdXRuKHdjaGFyX3QgY29uc3QqLCBsb25nKekGSXN0ZDo6X18yOjpiYXNpY19vc3RyZWFtPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj46OmZsdXNoKCnqBnJzdGQ6Ol9fMjo6Y3R5cGU8d2NoYXJfdD4gY29uc3QmIHN0ZDo6X18yOjp1c2VfZmFjZXRbYWJpOnYxNTAwN108c3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+PihzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0JinrBuwBYm9vbCBzdGQ6Ol9fMjo6b3BlcmF0b3I9PVthYmk6djE1MDA3XTx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4gY29uc3QmLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+IGNvbnN0JinsBmVzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+OjpvcGVyYXRvcipbYWJpOnYxNTAwN10oKSBjb25zdO0GRnN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90Pjo6aXNbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZywgd2NoYXJfdCkgY29uc3TuBmBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+OjpvcGVyYXRvcisrW2FiaTp2MTUwMDddKCnvBldzdGQ6Ol9fMjo6YmFzaWNfc3RyZWFtYnVmPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj46OnNnZXRjW2FiaTp2MTUwMDddKCnwBlhzdGQ6Ol9fMjo6YmFzaWNfc3RyZWFtYnVmPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj46OnNidW1wY1thYmk6djE1MDA3XSgp8QZmc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pjo6b3BlcmF0b3I9W2FiaTp2MTUwMDddKHdjaGFyX3Qp8gZrc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1Zjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+OjpzcHV0blthYmk6djE1MDA3XSh3Y2hhcl90IGNvbnN0KiwgbG9uZynzBnBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46OmJhc2ljX3N0cmluZ1thYmk6djE1MDA3XSgp9AbDAXN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6b3BlcmF0b3I9W2FiaTp2MTUwMDddKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiYmKfUGWHN0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6Z2V0bG9jW2FiaTp2MTUwMDddKCkgY29uc3T2BnFzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46Ol9fZ2V0X3BvaW50ZXJbYWJpOnYxNTAwN10oKfcGvQFzdGQ6Ol9fMjo6ZW5hYmxlX2lmPGlzX21vdmVfY29uc3RydWN0aWJsZTx1bnNpZ25lZCBpbnQ+Ojp2YWx1ZSAmJiBpc19tb3ZlX2Fzc2lnbmFibGU8dW5zaWduZWQgaW50Pjo6dmFsdWUsIHZvaWQ+Ojp0eXBlIHN0ZDo6X18yOjpzd2FwW2FiaTp2MTUwMDddPHVuc2lnbmVkIGludD4odW5zaWduZWQgaW50JiwgdW5zaWduZWQgaW50Jin4BnNzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46Ol9faXNfbG9uZ1thYmk6djE1MDA3XSgpIGNvbnN0+Qa8AXN0ZDo6X18yOjplbmFibGVfaWY8X19pc19jcHAxN19mb3J3YXJkX2l0ZXJhdG9yPGNoYXIqPjo6dmFsdWUsIHZvaWQ+Ojp0eXBlIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19pbml0PGNoYXIqPihjaGFyKiwgY2hhciop+gZuc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjpzaXplW2FiaTp2MTUwMDddKCkgY29uc3T7BnJzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46OmNhcGFjaXR5W2FiaTp2MTUwMDddKCkgY29uc3T8BndzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46OnJlc2l6ZVthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKf0GenN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19nZXRfc2hvcnRfc2l6ZVthYmk6djE1MDA3XSgpIGNvbnN0/gZ4c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjpfX2dldF9sb25nX2NhcFthYmk6djE1MDA3XSgpIGNvbnN0/wYpc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Ojpub3RfZW9mKGludCmAB5YBc3RkOjpfXzI6OmNvZGVjdnQ8Y2hhciwgY2hhciwgX19tYnN0YXRlX3Q+IGNvbnN0JiBzdGQ6Ol9fMjo6dXNlX2ZhY2V0W2FiaTp2MTUwMDddPHN0ZDo6X18yOjpjb2RlY3Z0PGNoYXIsIGNoYXIsIF9fbWJzdGF0ZV90Pj4oc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYpgQdNc3RkOjpfXzI6OmNvZGVjdnQ8Y2hhciwgY2hhciwgX19tYnN0YXRlX3Q+OjphbHdheXNfbm9jb252W2FiaTp2MTUwMDddKCkgY29uc3SCB2l1bnNpZ25lZCBsb25nIGNvbnN0JiBzdGQ6Ol9fMjo6bWluW2FiaTp2MTUwMDddPHVuc2lnbmVkIGxvbmc+KHVuc2lnbmVkIGxvbmcgY29uc3QmLCB1bnNpZ25lZCBsb25nIGNvbnN0JimDB4wBc3RkOjpfXzI6OmNvZGVjdnQ8Y2hhciwgY2hhciwgX19tYnN0YXRlX3Q+OjppblthYmk6djE1MDA3XShfX21ic3RhdGVfdCYsIGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdComLCBjaGFyKiwgY2hhciosIGNoYXIqJikgY29uc3SEB40Bc3RkOjpfXzI6OmNvZGVjdnQ8Y2hhciwgY2hhciwgX19tYnN0YXRlX3Q+OjpvdXRbYWJpOnYxNTAwN10oX19tYnN0YXRlX3QmLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIGNoYXIgY29uc3QqJiwgY2hhciosIGNoYXIqLCBjaGFyKiYpIGNvbnN0hQdUc3RkOjpfXzI6Ol9fbGVzczxsb25nLCBsb25nPjo6b3BlcmF0b3IoKVthYmk6djE1MDA3XShsb25nIGNvbnN0JiwgbG9uZyBjb25zdCYpIGNvbnN0hgdVY2hhciogc3RkOjpfXzI6OmNvcHlbYWJpOnYxNTAwN108Y2hhciBjb25zdCosIGNoYXIqPihjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIGNoYXIqKYcHXWF1dG8gc3RkOjpfXzI6Ol9fdW53cmFwX3JhbmdlW2FiaTp2MTUwMDddPGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0Kj4oY2hhciBjb25zdCosIGNoYXIgY29uc3QqKYgHfXN0ZDo6X18yOjpwYWlyPGNoYXIgY29uc3QqLCBjaGFyKj4gc3RkOjpfXzI6Ol9fY29weV9pbXBsW2FiaTp2MTUwMDddPGNoYXIgY29uc3QsIGNoYXIsIHZvaWQ+KGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgY2hhciopiQdxY2hhciBjb25zdCogc3RkOjpfXzI6Ol9fcmV3cmFwX3JhbmdlW2FiaTp2MTUwMDddPGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdCo+KGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KimKB3BjaGFyKiBzdGQ6Ol9fMjo6X19yZXdyYXBfaXRlclthYmk6djE1MDA3XTxjaGFyKiwgY2hhciosIHN0ZDo6X18yOjpfX3Vud3JhcF9pdGVyX2ltcGw8Y2hhciosIHRydWU+PihjaGFyKiwgY2hhciopiwe2AXN0ZDo6X18yOjpwYWlyPHN0ZDo6X18yOjpfX3Vud3JhcF9yZWZfZGVjYXk8Y2hhciBjb25zdCo+Ojp0eXBlLCBzdGQ6Ol9fMjo6X191bndyYXBfcmVmX2RlY2F5PGNoYXIqPjo6dHlwZT4gc3RkOjpfXzI6Om1ha2VfcGFpclthYmk6djE1MDA3XTxjaGFyIGNvbnN0KiwgY2hhcio+KGNoYXIgY29uc3QqJiYsIGNoYXIqJiYpjAdqc3RkOjpfXzI6OnBhaXI8Y2hhciBjb25zdCosIGNoYXIqPjo6cGFpclthYmk6djE1MDA3XTxjaGFyIGNvbnN0KiwgY2hhciosICh2b2lkKikwPihjaGFyIGNvbnN0KiYmLCBjaGFyKiYmKY0Hf3N0ZDo6X18yOjphbGxvY2F0b3JfdHJhaXRzPHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjpkZWFsbG9jYXRlW2FiaTp2MTUwMDddKHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4mLCBjaGFyKiwgdW5zaWduZWQgbG9uZymOB4EBc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjpfX3NldF9zaG9ydF9zaXplW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpjwc3c3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Ojphc3NpZ24oY2hhciYsIGNoYXIgY29uc3QmKZAHTnN0ZDo6X18yOjpfX2xpYmNwcF9kZWFsbG9jYXRlW2FiaTp2MTUwMDddKHZvaWQqLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nKZEHPXN0ZDo6X18yOjpfX2lzX292ZXJhbGlnbmVkX2Zvcl9uZXdbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZymSB2VzdGQ6Ol9fMjo6aXRlcmF0b3JfdHJhaXRzPGNoYXIqPjo6ZGlmZmVyZW5jZV90eXBlIHN0ZDo6X18yOjpkaXN0YW5jZVthYmk6djE1MDA3XTxjaGFyKj4oY2hhciosIGNoYXIqKZMHfnN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19maXRzX2luX3Nzb1thYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKZQHfHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19yZWNvbW1lbmRbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZymVB80Bc3RkOjpfXzI6Ol9fYWxsb2NhdGlvbl9yZXN1bHQ8c3RkOjpfXzI6OmFsbG9jYXRvcl90cmFpdHM8c3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46OnBvaW50ZXI+IHN0ZDo6X18yOjpfX2FsbG9jYXRlX2F0X2xlYXN0W2FiaTp2MTUwMDddPHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+KHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4mLCB1bnNpZ25lZCBsb25nKZYHe3N0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19zZXRfbG9uZ19wb2ludGVyW2FiaTp2MTUwMDddKGNoYXIqKZcHf3N0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19zZXRfbG9uZ19jYXBbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZymYB4ABc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjpfX3NldF9sb25nX3NpemVbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZymZB35zdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46Ol9fdGhyb3dfbGVuZ3RoX2Vycm9yW2FiaTp2MTUwMDddKCkgY29uc3SaB40Bc3RkOjpfXzI6Oml0ZXJhdG9yX3RyYWl0czxjaGFyKj46OmRpZmZlcmVuY2VfdHlwZSBzdGQ6Ol9fMjo6X19kaXN0YW5jZVthYmk6djE1MDA3XTxjaGFyKj4oY2hhciosIGNoYXIqLCBzdGQ6Ol9fMjo6cmFuZG9tX2FjY2Vzc19pdGVyYXRvcl90YWcpmwdFc3RkOjpfXzI6Ol9fbGliY3BwX2FsbG9jYXRlW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcpnAdkc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6X190ZXN0X2Zvcl9lb2ZbYWJpOnYxNTAwN10oKSBjb25zdJ0HNHN0ZDo6X18yOjpjdHlwZTxjaGFyPjo6d2lkZW5bYWJpOnYxNTAwN10oY2hhcikgY29uc3SeB2pzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+OjpfX3Rlc3RfZm9yX2VvZlthYmk6djE1MDA3XSgpIGNvbnN0nwc3c3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+Ojp3aWRlblthYmk6djE1MDA3XShjaGFyKSBjb25zdKAHInN0ZDo6X18yOjppb3NfYmFzZTo6Z2V0bG9jKCkgY29uc3ShB2l1bnNpZ25lZCBsb25nIGNvbnN0JiBzdGQ6Ol9fMjo6bWF4W2FiaTp2MTUwMDddPHVuc2lnbmVkIGxvbmc+KHVuc2lnbmVkIGxvbmcgY29uc3QmLCB1bnNpZ25lZCBsb25nIGNvbnN0JimiBx9zdGQ6Ol9fMjo6aW9zX2Jhc2U6On5pb3NfYmFzZSgpowcfc3RkOjpfXzI6Omlvc19iYXNlOjppbml0KHZvaWQqKaQHiQFzdGQ6Ol9fMjo6X19jb21wcmVzc2VkX3BhaXJfZWxlbTx2b2lkICgqKSh2b2lkKiksIDEsIGZhbHNlPjo6X19jb21wcmVzc2VkX3BhaXJfZWxlbVthYmk6djE1MDA3XTx2b2lkICgqKSh2b2lkKiksIHZvaWQ+KHZvaWQgKComJikodm9pZCopKaUHEi5MY2FsbF9kdG9ycy41MC4zMqYHBnVuZ2V0Y6cHBGdldGOoB0FzdGQ6Ol9fMjo6X19zdGRvdXRidWY8Y2hhcj46Ol9fc3Rkb3V0YnVmKF9JT19GSUxFKiwgX19tYnN0YXRlX3QqKakHlAFzdGQ6Ol9fMjo6YmFzaWNfb3N0cmVhbTxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpiYXNpY19vc3RyZWFtW2FiaTp2MTUwMDddKHN0ZDo6X18yOjpiYXNpY19zdHJlYW1idWY8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiopqgeEAXN0ZDo6X18yOjpiYXNpY19pb3M8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pjo6dGllW2FiaTp2MTUwMDddKHN0ZDo6X18yOjpiYXNpY19vc3RyZWFtPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4qKasHRHN0ZDo6X18yOjpfX3N0ZG91dGJ1Zjx3Y2hhcl90Pjo6X19zdGRvdXRidWYoX0lPX0ZJTEUqLCBfX21ic3RhdGVfdCoprAegAXN0ZDo6X18yOjpiYXNpY19vc3RyZWFtPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj46OmJhc2ljX29zdHJlYW1bYWJpOnYxNTAwN10oc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1Zjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+KimtB09zdGQ6Ol9fMjo6YmFzaWNfaW9zPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj46OmJhc2ljX2lvc1thYmk6djE1MDA3XSgprgcyc3RkOjpfXzI6Omlvc19iYXNlOjpzZXRmW2FiaTp2MTUwMDddKHVuc2lnbmVkIGludCmvB1VzdGQ6Ol9fMjo6YmFzaWNfaW9zPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj46OmJhc2ljX2lvc1thYmk6djE1MDA3XSgpsAeTAXN0ZDo6X18yOjpiYXNpY19pb3M8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pjo6aW5pdFthYmk6djE1MDA3XShzdGQ6Ol9fMjo6YmFzaWNfc3RyZWFtYnVmPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4qKbEHnAFzdGQ6Ol9fMjo6Y29kZWN2dDx3Y2hhcl90LCBjaGFyLCBfX21ic3RhdGVfdD4gY29uc3QmIHN0ZDo6X18yOjp1c2VfZmFjZXRbYWJpOnYxNTAwN108c3RkOjpfXzI6OmNvZGVjdnQ8d2NoYXJfdCwgY2hhciwgX19tYnN0YXRlX3Q+PihzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0JimyBxtfX2N4eF9nbG9iYWxfYXJyYXlfZHRvci4xLjGzBylzdGQ6Ol9fMjo6X19zdGRpbmJ1ZjxjaGFyPjo6fl9fc3RkaW5idWYoKbQHOnN0ZDo6X18yOjpfX3N0ZGluYnVmPGNoYXI+OjppbWJ1ZShzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0Jim1BydzdGQ6Ol9fMjo6X19zdGRpbmJ1ZjxjaGFyPjo6dW5kZXJmbG93KCm2BytzdGQ6Ol9fMjo6X19zdGRpbmJ1ZjxjaGFyPjo6X19nZXRjaGFyKGJvb2wptwcjc3RkOjpfXzI6Ol9fc3RkaW5idWY8Y2hhcj46OnVmbG93KCm4BypzdGQ6Ol9fMjo6X19zdGRpbmJ1ZjxjaGFyPjo6cGJhY2tmYWlsKGludCm5B0FpbnQgY29uc3QmIHN0ZDo6X18yOjptYXhbYWJpOnYxNTAwN108aW50PihpbnQgY29uc3QmLCBpbnQgY29uc3QmKboHKnN0ZDo6X18yOjppb3NfYmFzZTo6aW9zX2Jhc2VbYWJpOnYxNTAwN10oKbsHO3N0ZDo6X18yOjpfX3N0ZG91dGJ1ZjxjaGFyPjo6aW1idWUoc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYpvAcjc3RkOjpfXzI6Ol9fc3Rkb3V0YnVmPGNoYXI+OjpzeW5jKCm9BzZzdGQ6Ol9fMjo6X19zdGRvdXRidWY8Y2hhcj46OnhzcHV0bihjaGFyIGNvbnN0KiwgbG9uZym+BypzdGQ6Ol9fMjo6X19zdGRvdXRidWY8Y2hhcj46Om92ZXJmbG93KGludCm/ByxzdGQ6Ol9fMjo6X19zdGRpbmJ1Zjx3Y2hhcl90Pjo6fl9fc3RkaW5idWYoKcAHPXN0ZDo6X18yOjpfX3N0ZGluYnVmPHdjaGFyX3Q+OjppbWJ1ZShzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0JinBBypzdGQ6Ol9fMjo6X19zdGRpbmJ1Zjx3Y2hhcl90Pjo6dW5kZXJmbG93KCnCBy5zdGQ6Ol9fMjo6X19zdGRpbmJ1Zjx3Y2hhcl90Pjo6X19nZXRjaGFyKGJvb2wpwwcmc3RkOjpfXzI6Ol9fc3RkaW5idWY8d2NoYXJfdD46OnVmbG93KCnEBzZzdGQ6Ol9fMjo6X19zdGRpbmJ1Zjx3Y2hhcl90Pjo6cGJhY2tmYWlsKHVuc2lnbmVkIGludCnFBz5zdGQ6Ol9fMjo6X19zdGRvdXRidWY8d2NoYXJfdD46OmltYnVlKHN0ZDo6X18yOjpsb2NhbGUgY29uc3QmKcYHPHN0ZDo6X18yOjpfX3N0ZG91dGJ1Zjx3Y2hhcl90Pjo6eHNwdXRuKHdjaGFyX3QgY29uc3QqLCBsb25nKccHNnN0ZDo6X18yOjpfX3N0ZG91dGJ1Zjx3Y2hhcl90Pjo6b3ZlcmZsb3codW5zaWduZWQgaW50KcgHEi5MY2FsbF9kdG9ycy41MC4zM8kHBXN3YXBjygcMX19nZXRfbG9jYWxlywcSLkxjYWxsX2R0b3JzLjUwLjM0zAcGbWVtY21wzQcSX19sb2NfaXNfYWxsb2NhdGVkzgcMZG9fbmV3bG9jYWxlzwcSLkxjYWxsX2R0b3JzLjUwLjM10AcMX19pc3hkaWdpdF9s0QcKZnJlZWxvY2FsZdIHBndjc2xlbtMHEi5MY2FsbF9kdG9ycy41MC4zNtQHEi5MY2FsbF9kdG9ycy41MC4zN9UHCndjc25ydG9tYnPWBwltYnNydG93Y3PXBwptYnNucnRvd2Nz2AcSLkxjYWxsX2R0b3JzLjUwLjM42QcLX191c2Vsb2NhbGXaBwZzdHJ0b3jbBwhzdHJ0b3guMdwHXXN0ZDo6X18yOjpjb2xsYXRlPGNoYXI+Ojpkb19jb21wYXJlKGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIGNoYXIgY29uc3QqKSBjb25zdN0HRXN0ZDo6X18yOjpjb2xsYXRlPGNoYXI+Ojpkb190cmFuc2Zvcm0oY2hhciBjb25zdCosIGNoYXIgY29uc3QqKSBjb25zdN4HQHN0ZDo6X18yOjpjb2xsYXRlPGNoYXI+Ojpkb19oYXNoKGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KikgY29uc3TfB2xzdGQ6Ol9fMjo6Y29sbGF0ZTx3Y2hhcl90Pjo6ZG9fY29tcGFyZSh3Y2hhcl90IGNvbnN0Kiwgd2NoYXJfdCBjb25zdCosIHdjaGFyX3QgY29uc3QqLCB3Y2hhcl90IGNvbnN0KikgY29uc3TgB05zdGQ6Ol9fMjo6Y29sbGF0ZTx3Y2hhcl90Pjo6ZG9fdHJhbnNmb3JtKHdjaGFyX3QgY29uc3QqLCB3Y2hhcl90IGNvbnN0KikgY29uc3ThB+kBc3RkOjpfXzI6OmVuYWJsZV9pZjxfX2lzX2NwcDE3X2ZvcndhcmRfaXRlcmF0b3I8d2NoYXJfdCBjb25zdCo+Ojp2YWx1ZSwgdm9pZD46OnR5cGUgc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpfX2luaXQ8d2NoYXJfdCBjb25zdCo+KHdjaGFyX3QgY29uc3QqLCB3Y2hhcl90IGNvbnN0KiniB0lzdGQ6Ol9fMjo6Y29sbGF0ZTx3Y2hhcl90Pjo6ZG9faGFzaCh3Y2hhcl90IGNvbnN0Kiwgd2NoYXJfdCBjb25zdCopIGNvbnN04weWAnN0ZDo6X18yOjpudW1fZ2V0PGNoYXIsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgYm9vbCYpIGNvbnN05Adyc3RkOjpfXzI6Om51bXB1bmN0PGNoYXI+IGNvbnN0JiBzdGQ6Ol9fMjo6dXNlX2ZhY2V0W2FiaTp2MTUwMDddPHN0ZDo6X18yOjpudW1wdW5jdDxjaGFyPj4oc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYp5Qc2c3RkOjpfXzI6Om51bXB1bmN0PGNoYXI+Ojp0cnVlbmFtZVthYmk6djE1MDA3XSgpIGNvbnN05gc3c3RkOjpfXzI6Om51bXB1bmN0PGNoYXI+OjpmYWxzZW5hbWVbYWJpOnYxNTAwN10oKSBjb25zdOcHnAVzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QqIHN0ZDo6X18yOjpfX3NjYW5fa2V5d29yZDxzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QqLCBzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj4+KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4mLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QqLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QqLCBzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj4gY29uc3QmLCB1bnNpZ25lZCBpbnQmLCBib29sKegHOHN0ZDo6X18yOjpsb2NhbGU6OnVzZV9mYWNldChzdGQ6Ol9fMjo6bG9jYWxlOjppZCYpIGNvbnN06Qe9A3N0ZDo6X18yOjppdGVyYXRvcl90cmFpdHM8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0Kj46OmRpZmZlcmVuY2VfdHlwZSBzdGQ6Ol9fMjo6ZGlzdGFuY2VbYWJpOnYxNTAwN108c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0Kj4oc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0Kiwgc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0KinqB9gBc3RkOjpfXzI6OnVuaXF1ZV9wdHI8dW5zaWduZWQgY2hhciwgdm9pZCAoKikodm9pZCopPjo6dW5pcXVlX3B0clthYmk6djE1MDA3XTx0cnVlLCB2b2lkPih1bnNpZ25lZCBjaGFyKiwgc3RkOjpfXzI6Ol9fZGVwZW5kZW50X3R5cGU8c3RkOjpfXzI6Ol9fdW5pcXVlX3B0cl9kZWxldGVyX3NmaW5hZTx2b2lkICgqKSh2b2lkKik+LCB0cnVlPjo6X19nb29kX3J2YWxfcmVmX3R5cGUp6wdXc3RkOjpfXzI6OnVuaXF1ZV9wdHI8dW5zaWduZWQgY2hhciwgdm9pZCAoKikodm9pZCopPjo6cmVzZXRbYWJpOnYxNTAwN10odW5zaWduZWQgY2hhciop7Ac2c3RkOjpfXzI6OmN0eXBlPGNoYXI+Ojp0b3VwcGVyW2FiaTp2MTUwMDddKGNoYXIpIGNvbnN07QeBAXN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6b3BlcmF0b3JbXVthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKSBjb25zdO4Hb3N0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6ZW1wdHlbYWJpOnYxNTAwN10oKSBjb25zdO8HT3N0ZDo6X18yOjp1bmlxdWVfcHRyPHVuc2lnbmVkIGNoYXIsIHZvaWQgKCopKHZvaWQqKT46On51bmlxdWVfcHRyW2FiaTp2MTUwMDddKCnwB5YCc3RkOjpfXzI6Om51bV9nZXQ8Y2hhciwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX2dldChzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCBsb25nJikgY29uc3TxBzlzdGQ6Ol9fMjo6X19udW1fZ2V0X2Jhc2U6Ol9fZ2V0X2Jhc2Uoc3RkOjpfXzI6Omlvc19iYXNlJinyB0hzdGQ6Ol9fMjo6X19udW1fZ2V0PGNoYXI+OjpfX3N0YWdlMl9pbnRfcHJlcChzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCBjaGFyJinzB+QBc3RkOjpfXzI6Ol9fbnVtX2dldDxjaGFyPjo6X19zdGFnZTJfaW50X2xvb3AoY2hhciwgaW50LCBjaGFyKiwgY2hhciomLCB1bnNpZ25lZCBpbnQmLCBjaGFyLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmLCB1bnNpZ25lZCBpbnQqLCB1bnNpZ25lZCBpbnQqJiwgY2hhciBjb25zdCop9AdcbG9uZyBzdGQ6Ol9fMjo6X19udW1fZ2V0X3NpZ25lZF9pbnRlZ3JhbDxsb25nPihjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGludCYsIGludCn1B6QBc3RkOjpfXzI6Ol9fY2hlY2tfZ3JvdXBpbmcoc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0JiwgdW5zaWduZWQgaW50KiwgdW5zaWduZWQgaW50KiwgdW5zaWduZWQgaW50Jin2B5sCc3RkOjpfXzI6Om51bV9nZXQ8Y2hhciwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX2dldChzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCBsb25nIGxvbmcmKSBjb25zdPcHZmxvbmcgbG9uZyBzdGQ6Ol9fMjo6X19udW1fZ2V0X3NpZ25lZF9pbnRlZ3JhbDxsb25nIGxvbmc+KGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgaW50JiwgaW50KfgHoAJzdGQ6Ol9fMjo6bnVtX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIHVuc2lnbmVkIHNob3J0JikgY29uc3T5B3J1bnNpZ25lZCBzaG9ydCBzdGQ6Ol9fMjo6X19udW1fZ2V0X3Vuc2lnbmVkX2ludGVncmFsPHVuc2lnbmVkIHNob3J0PihjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGludCYsIGludCn6B54Cc3RkOjpfXzI6Om51bV9nZXQ8Y2hhciwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX2dldChzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCB1bnNpZ25lZCBpbnQmKSBjb25zdPsHbnVuc2lnbmVkIGludCBzdGQ6Ol9fMjo6X19udW1fZ2V0X3Vuc2lnbmVkX2ludGVncmFsPHVuc2lnbmVkIGludD4oY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBpbnQmLCBpbnQp/AekAnN0ZDo6X18yOjpudW1fZ2V0PGNoYXIsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgdW5zaWduZWQgbG9uZyBsb25nJikgY29uc3T9B3p1bnNpZ25lZCBsb25nIGxvbmcgc3RkOjpfXzI6Ol9fbnVtX2dldF91bnNpZ25lZF9pbnRlZ3JhbDx1bnNpZ25lZCBsb25nIGxvbmc+KGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgaW50JiwgaW50Kf4HlwJzdGQ6Ol9fMjo6bnVtX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIGZsb2F0JikgY29uc3T/B1hzdGQ6Ol9fMjo6X19udW1fZ2V0PGNoYXI+OjpfX3N0YWdlMl9mbG9hdF9wcmVwKHN0ZDo6X18yOjppb3NfYmFzZSYsIGNoYXIqLCBjaGFyJiwgY2hhciYpgAjvAXN0ZDo6X18yOjpfX251bV9nZXQ8Y2hhcj46Ol9fc3RhZ2UyX2Zsb2F0X2xvb3AoY2hhciwgYm9vbCYsIGNoYXImLCBjaGFyKiwgY2hhciomLCBjaGFyLCBjaGFyLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmLCB1bnNpZ25lZCBpbnQqLCB1bnNpZ25lZCBpbnQqJiwgdW5zaWduZWQgaW50JiwgY2hhciopgQhPZmxvYXQgc3RkOjpfXzI6Ol9fbnVtX2dldF9mbG9hdDxmbG9hdD4oY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBpbnQmKYIImAJzdGQ6Ol9fMjo6bnVtX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIGRvdWJsZSYpIGNvbnN0gwhRZG91YmxlIHN0ZDo6X18yOjpfX251bV9nZXRfZmxvYXQ8ZG91YmxlPihjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGludCYphAidAnN0ZDo6X18yOjpudW1fZ2V0PGNoYXIsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgbG9uZyBkb3VibGUmKSBjb25zdIUIW2xvbmcgZG91YmxlIHN0ZDo6X18yOjpfX251bV9nZXRfZmxvYXQ8bG9uZyBkb3VibGU+KGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgaW50JimGCJcCc3RkOjpfXzI6Om51bV9nZXQ8Y2hhciwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX2dldChzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCB2b2lkKiYpIGNvbnN0hwhPc3RkOjpfXzI6OmN0eXBlPGNoYXI+Ojp3aWRlblthYmk6djE1MDA3XShjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIGNoYXIqKSBjb25zdIgIEnN0ZDo6X18yOjpfX2Nsb2MoKYkITHN0ZDo6X18yOjpfX2xpYmNwcF9zc2NhbmZfbChjaGFyIGNvbnN0KiwgX19sb2NhbGVfc3RydWN0KiwgY2hhciBjb25zdCosIC4uLimKCGBjaGFyIGNvbnN0KiBzdGQ6Ol9fMjo6ZmluZFthYmk6djE1MDA3XTxjaGFyIGNvbnN0KiwgY2hhcj4oY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0JimLCFVzdGQ6Ol9fMjo6X19saWJjcHBfbG9jYWxlX2d1YXJkOjpfX2xpYmNwcF9sb2NhbGVfZ3VhcmRbYWJpOnYxNTAwN10oX19sb2NhbGVfc3RydWN0KiYpjAhFc3RkOjpfXzI6Ol9fbGliY3BwX2xvY2FsZV9ndWFyZDo6fl9fbGliY3BwX2xvY2FsZV9ndWFyZFthYmk6djE1MDA3XSgpjQirAnN0ZDo6X18yOjpudW1fZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgYm9vbCYpIGNvbnN0jgh4c3RkOjpfXzI6Om51bXB1bmN0PHdjaGFyX3Q+IGNvbnN0JiBzdGQ6Ol9fMjo6dXNlX2ZhY2V0W2FiaTp2MTUwMDddPHN0ZDo6X18yOjpudW1wdW5jdDx3Y2hhcl90Pj4oc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYpjwjYBXN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+PiBjb25zdCogc3RkOjpfXzI6Ol9fc2Nhbl9rZXl3b3JkPHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+PiBjb25zdCosIHN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90Pj4oc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+PiBjb25zdCosIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+PiBjb25zdCosIHN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90PiBjb25zdCYsIHVuc2lnbmVkIGludCYsIGJvb2wpkAiKAXN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+Pjo6b3BlcmF0b3JbXVthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKSBjb25zdJEIqwJzdGQ6Ol9fMjo6bnVtX2dldDx3Y2hhcl90LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIGxvbmcmKSBjb25zdJIITXN0ZDo6X18yOjpfX251bV9nZXQ8d2NoYXJfdD46Ol9fZG9fd2lkZW4oc3RkOjpfXzI6Omlvc19iYXNlJiwgd2NoYXJfdCopIGNvbnN0kwhOc3RkOjpfXzI6Ol9fbnVtX2dldDx3Y2hhcl90Pjo6X19zdGFnZTJfaW50X3ByZXAoc3RkOjpfXzI6Omlvc19iYXNlJiwgd2NoYXJfdCYplAjwAXN0ZDo6X18yOjpfX251bV9nZXQ8d2NoYXJfdD46Ol9fc3RhZ2UyX2ludF9sb29wKHdjaGFyX3QsIGludCwgY2hhciosIGNoYXIqJiwgdW5zaWduZWQgaW50Jiwgd2NoYXJfdCwgc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0JiwgdW5zaWduZWQgaW50KiwgdW5zaWduZWQgaW50KiYsIHdjaGFyX3QgY29uc3QqKZUIsAJzdGQ6Ol9fMjo6bnVtX2dldDx3Y2hhcl90LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIGxvbmcgbG9uZyYpIGNvbnN0lgi1AnN0ZDo6X18yOjpudW1fZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgdW5zaWduZWQgc2hvcnQmKSBjb25zdJcIswJzdGQ6Ol9fMjo6bnVtX2dldDx3Y2hhcl90LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIHVuc2lnbmVkIGludCYpIGNvbnN0mAi5AnN0ZDo6X18yOjpudW1fZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgdW5zaWduZWQgbG9uZyBsb25nJikgY29uc3SZCKwCc3RkOjpfXzI6Om51bV9nZXQ8d2NoYXJfdCwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pj46OmRvX2dldChzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCBmbG9hdCYpIGNvbnN0mghkc3RkOjpfXzI6Ol9fbnVtX2dldDx3Y2hhcl90Pjo6X19zdGFnZTJfZmxvYXRfcHJlcChzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB3Y2hhcl90Kiwgd2NoYXJfdCYsIHdjaGFyX3QmKZsI/gFzdGQ6Ol9fMjo6X19udW1fZ2V0PHdjaGFyX3Q+OjpfX3N0YWdlMl9mbG9hdF9sb29wKHdjaGFyX3QsIGJvb2wmLCBjaGFyJiwgY2hhciosIGNoYXIqJiwgd2NoYXJfdCwgd2NoYXJfdCwgc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0JiwgdW5zaWduZWQgaW50KiwgdW5zaWduZWQgaW50KiYsIHVuc2lnbmVkIGludCYsIHdjaGFyX3QqKZwIrQJzdGQ6Ol9fMjo6bnVtX2dldDx3Y2hhcl90LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIGRvdWJsZSYpIGNvbnN0nQiyAnN0ZDo6X18yOjpudW1fZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgbG9uZyBkb3VibGUmKSBjb25zdJ4IrAJzdGQ6Ol9fMjo6bnVtX2dldDx3Y2hhcl90LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIHZvaWQqJikgY29uc3SfCFVzdGQ6Ol9fMjo6Y3R5cGU8d2NoYXJfdD46OndpZGVuW2FiaTp2MTUwMDddKGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0Kiwgd2NoYXJfdCopIGNvbnN0oAhyd2NoYXJfdCBjb25zdCogc3RkOjpfXzI6OmZpbmRbYWJpOnYxNTAwN108d2NoYXJfdCBjb25zdCosIHdjaGFyX3Q+KHdjaGFyX3QgY29uc3QqLCB3Y2hhcl90IGNvbnN0Kiwgd2NoYXJfdCBjb25zdCYpoQg7c3RkOjpfXzI6Om51bXB1bmN0PGNoYXI+OjpkZWNpbWFsX3BvaW50W2FiaTp2MTUwMDddKCkgY29uc3SiCDtzdGQ6Ol9fMjo6bnVtcHVuY3Q8Y2hhcj46OnRob3VzYW5kc19zZXBbYWJpOnYxNTAwN10oKSBjb25zdKMINnN0ZDo6X18yOjpudW1wdW5jdDxjaGFyPjo6Z3JvdXBpbmdbYWJpOnYxNTAwN10oKSBjb25zdKQIygFzdGQ6Ol9fMjo6bnVtX3B1dDxjaGFyLCBzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fcHV0KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIGNoYXIsIGJvb2wpIGNvbnN0pQhpc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjpiZWdpblthYmk6djE1MDA3XSgppghnc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjplbmRbYWJpOnYxNTAwN10oKacIdmJvb2wgc3RkOjpfXzI6Om9wZXJhdG9yIT1bYWJpOnYxNTAwN108Y2hhcio+KHN0ZDo6X18yOjpfX3dyYXBfaXRlcjxjaGFyKj4gY29uc3QmLCBzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhcio+IGNvbnN0JimoCDZzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhcio+OjpvcGVyYXRvcisrW2FiaTp2MTUwMDddKCmpCElzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhcio+OjpfX3dyYXBfaXRlclthYmk6djE1MDA3XSh2b2lkIGNvbnN0KiwgY2hhciopqgjKAXN0ZDo6X18yOjpudW1fcHV0PGNoYXIsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgY2hhciwgbG9uZykgY29uc3SrCE5zdGQ6Ol9fMjo6X19udW1fcHV0X2Jhc2U6Ol9fZm9ybWF0X2ludChjaGFyKiwgY2hhciBjb25zdCosIGJvb2wsIHVuc2lnbmVkIGludCmsCFdzdGQ6Ol9fMjo6X19saWJjcHBfc25wcmludGZfbChjaGFyKiwgdW5zaWduZWQgbG9uZywgX19sb2NhbGVfc3RydWN0KiwgY2hhciBjb25zdCosIC4uLimtCFVzdGQ6Ol9fMjo6X19udW1fcHV0X2Jhc2U6Ol9faWRlbnRpZnlfcGFkZGluZyhjaGFyKiwgY2hhciosIHN0ZDo6X18yOjppb3NfYmFzZSBjb25zdCYprgh1c3RkOjpfXzI6Ol9fbnVtX3B1dDxjaGFyPjo6X193aWRlbl9hbmRfZ3JvdXBfaW50KGNoYXIqLCBjaGFyKiwgY2hhciosIGNoYXIqLCBjaGFyKiYsIGNoYXIqJiwgc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYprwjPAXN0ZDo6X18yOjpudW1fcHV0PGNoYXIsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgY2hhciwgbG9uZyBsb25nKSBjb25zdLAI0wFzdGQ6Ol9fMjo6bnVtX3B1dDxjaGFyLCBzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fcHV0KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIGNoYXIsIHVuc2lnbmVkIGxvbmcpIGNvbnN0sQjYAXN0ZDo6X18yOjpudW1fcHV0PGNoYXIsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgY2hhciwgdW5zaWduZWQgbG9uZyBsb25nKSBjb25zdLIIzAFzdGQ6Ol9fMjo6bnVtX3B1dDxjaGFyLCBzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fcHV0KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIGNoYXIsIGRvdWJsZSkgY29uc3SzCEpzdGQ6Ol9fMjo6X19udW1fcHV0X2Jhc2U6Ol9fZm9ybWF0X2Zsb2F0KGNoYXIqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgaW50KbQIMXN0ZDo6X18yOjppb3NfYmFzZTo6cHJlY2lzaW9uW2FiaTp2MTUwMDddKCkgY29uc3S1CElzdGQ6Ol9fMjo6X19saWJjcHBfYXNwcmludGZfbChjaGFyKiosIF9fbG9jYWxlX3N0cnVjdCosIGNoYXIgY29uc3QqLCAuLi4ptgh3c3RkOjpfXzI6Ol9fbnVtX3B1dDxjaGFyPjo6X193aWRlbl9hbmRfZ3JvdXBfZmxvYXQoY2hhciosIGNoYXIqLCBjaGFyKiwgY2hhciosIGNoYXIqJiwgY2hhciomLCBzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0Jim3CNEBc3RkOjpfXzI6Om51bV9wdXQ8Y2hhciwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCBjaGFyLCBsb25nIGRvdWJsZSkgY29uc3S4CNEBc3RkOjpfXzI6Om51bV9wdXQ8Y2hhciwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCBjaGFyLCB2b2lkIGNvbnN0KikgY29uc3S5CC1zdGQ6Ol9fMjo6aW9zX2Jhc2U6OndpZHRoW2FiaTp2MTUwMDddKCkgY29uc3S6CNwBc3RkOjpfXzI6Om51bV9wdXQ8d2NoYXJfdCwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB3Y2hhcl90LCBib29sKSBjb25zdLsIcHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+Pjo6ZW5kW2FiaTp2MTUwMDddKCm8CDlzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8d2NoYXJfdCo+OjpvcGVyYXRvcisrW2FiaTp2MTUwMDddKCm9CNwBc3RkOjpfXzI6Om51bV9wdXQ8d2NoYXJfdCwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB3Y2hhcl90LCBsb25nKSBjb25zdL4IgQFzdGQ6Ol9fMjo6X19udW1fcHV0PHdjaGFyX3Q+OjpfX3dpZGVuX2FuZF9ncm91cF9pbnQoY2hhciosIGNoYXIqLCBjaGFyKiwgd2NoYXJfdCosIHdjaGFyX3QqJiwgd2NoYXJfdComLCBzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0Jim/CKACc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiBzdGQ6Ol9fMjo6X19wYWRfYW5kX291dHB1dDx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHdjaGFyX3QgY29uc3QqLCB3Y2hhcl90IGNvbnN0Kiwgd2NoYXJfdCBjb25zdCosIHN0ZDo6X18yOjppb3NfYmFzZSYsIHdjaGFyX3QpwAjhAXN0ZDo6X18yOjpudW1fcHV0PHdjaGFyX3QsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgd2NoYXJfdCwgbG9uZyBsb25nKSBjb25zdMEI5QFzdGQ6Ol9fMjo6bnVtX3B1dDx3Y2hhcl90LCBzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fcHV0KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHdjaGFyX3QsIHVuc2lnbmVkIGxvbmcpIGNvbnN0wgjqAXN0ZDo6X18yOjpudW1fcHV0PHdjaGFyX3QsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgd2NoYXJfdCwgdW5zaWduZWQgbG9uZyBsb25nKSBjb25zdMMI3gFzdGQ6Ol9fMjo6bnVtX3B1dDx3Y2hhcl90LCBzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fcHV0KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHdjaGFyX3QsIGRvdWJsZSkgY29uc3TECIMBc3RkOjpfXzI6Ol9fbnVtX3B1dDx3Y2hhcl90Pjo6X193aWRlbl9hbmRfZ3JvdXBfZmxvYXQoY2hhciosIGNoYXIqLCBjaGFyKiwgd2NoYXJfdCosIHdjaGFyX3QqJiwgd2NoYXJfdComLCBzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0JinFCOMBc3RkOjpfXzI6Om51bV9wdXQ8d2NoYXJfdCwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB3Y2hhcl90LCBsb25nIGRvdWJsZSkgY29uc3TGCOMBc3RkOjpfXzI6Om51bV9wdXQ8d2NoYXJfdCwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB3Y2hhcl90LCB2b2lkIGNvbnN0KikgY29uc3THCI8Bc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpiYXNpY19zdHJpbmdbYWJpOnYxNTAwN10odW5zaWduZWQgbG9uZywgd2NoYXJfdCnICDd2b2lkIHN0ZDo6X18yOjpyZXZlcnNlW2FiaTp2MTUwMDddPGNoYXIqPihjaGFyKiwgY2hhciopyQhAdm9pZCBzdGQ6Ol9fMjo6cmV2ZXJzZVthYmk6djE1MDA3XTx3Y2hhcl90Kj4od2NoYXJfdCosIHdjaGFyX3QqKcoIrAJzdGQ6Ol9fMjo6dGltZV9nZXQ8Y2hhciwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmdldChzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCB0bSosIGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KikgY29uc3TLCDtzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj46Om5hcnJvd1thYmk6djE1MDA3XShjaGFyLCBjaGFyKSBjb25zdMwIcXN0ZDo6X18yOjp0aW1lX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fZGF0ZV9vcmRlcigpIGNvbnN0zQiaAnN0ZDo6X18yOjp0aW1lX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fZ2V0X3RpbWUoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgdG0qKSBjb25zdM4ImgJzdGQ6Ol9fMjo6dGltZV9nZXQ8Y2hhciwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX2dldF9kYXRlKHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIHRtKikgY29uc3TPCJ0Cc3RkOjpfXzI6OnRpbWVfZ2V0PGNoYXIsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojpkb19nZXRfd2Vla2RheShzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCB0bSopIGNvbnN00AirAnN0ZDo6X18yOjp0aW1lX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6X19nZXRfd2Vla2RheW5hbWUoaW50Jiwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHVuc2lnbmVkIGludCYsIHN0ZDo6X18yOjpjdHlwZTxjaGFyPiBjb25zdCYpIGNvbnN00QifAnN0ZDo6X18yOjp0aW1lX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fZ2V0X21vbnRobmFtZShzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCB0bSopIGNvbnN00gipAnN0ZDo6X18yOjp0aW1lX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6X19nZXRfbW9udGhuYW1lKGludCYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4mLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCB1bnNpZ25lZCBpbnQmLCBzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj4gY29uc3QmKSBjb25zdNMImgJzdGQ6Ol9fMjo6dGltZV9nZXQ8Y2hhciwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX2dldF95ZWFyKHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIHRtKikgY29uc3TUCKQCc3RkOjpfXzI6OnRpbWVfZ2V0PGNoYXIsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+OjpfX2dldF95ZWFyKGludCYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4mLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCB1bnNpZ25lZCBpbnQmLCBzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj4gY29uc3QmKSBjb25zdNUIoQJpbnQgc3RkOjpfXzI6Ol9fZ2V0X3VwX3RvX25fZGlnaXRzPGNoYXIsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4mLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCB1bnNpZ25lZCBpbnQmLCBzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj4gY29uc3QmLCBpbnQp1gihAnN0ZDo6X18yOjp0aW1lX2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIHRtKiwgY2hhciwgY2hhcikgY29uc3TXCMcCc3RkOjpfXzI6OnRpbWVfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+OjpnZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgdG0qLCB3Y2hhcl90IGNvbnN0Kiwgd2NoYXJfdCBjb25zdCopIGNvbnN02AhBc3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+OjpuYXJyb3dbYWJpOnYxNTAwN10od2NoYXJfdCwgY2hhcikgY29uc3TZCK8Cc3RkOjpfXzI6OnRpbWVfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXRfdGltZShzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCB0bSopIGNvbnN02givAnN0ZDo6X18yOjp0aW1lX2dldDx3Y2hhcl90LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fZ2V0X2RhdGUoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgdG0qKSBjb25zdNsIsgJzdGQ6Ol9fMjo6dGltZV9nZXQ8d2NoYXJfdCwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pj46OmRvX2dldF93ZWVrZGF5KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIHRtKikgY29uc3TcCMMCc3RkOjpfXzI6OnRpbWVfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+OjpfX2dldF93ZWVrZGF5bmFtZShpbnQmLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Jiwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiwgdW5zaWduZWQgaW50Jiwgc3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+IGNvbnN0JikgY29uc3TdCLQCc3RkOjpfXzI6OnRpbWVfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXRfbW9udGhuYW1lKHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIHRtKikgY29uc3TeCMECc3RkOjpfXzI6OnRpbWVfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+OjpfX2dldF9tb250aG5hbWUoaW50Jiwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHVuc2lnbmVkIGludCYsIHN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90PiBjb25zdCYpIGNvbnN03wivAnN0ZDo6X18yOjp0aW1lX2dldDx3Y2hhcl90LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fZ2V0X3llYXIoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgdG0qKSBjb25zdOAIvAJzdGQ6Ol9fMjo6dGltZV9nZXQ8d2NoYXJfdCwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pj46Ol9fZ2V0X3llYXIoaW50Jiwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHVuc2lnbmVkIGludCYsIHN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90PiBjb25zdCYpIGNvbnN04Qi5AmludCBzdGQ6Ol9fMjo6X19nZXRfdXBfdG9fbl9kaWdpdHM8d2NoYXJfdCwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Pj4oc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHVuc2lnbmVkIGludCYsIHN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90PiBjb25zdCYsIGludCniCLYCc3RkOjpfXzI6OnRpbWVfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgdG0qLCBjaGFyLCBjaGFyKSBjb25zdOMI3AFzdGQ6Ol9fMjo6dGltZV9wdXQ8Y2hhciwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCBjaGFyLCB0bSBjb25zdCosIGNoYXIsIGNoYXIpIGNvbnN05AhKc3RkOjpfXzI6Ol9fdGltZV9wdXQ6Ol9fZG9fcHV0KGNoYXIqLCBjaGFyKiYsIHRtIGNvbnN0KiwgY2hhciwgY2hhcikgY29uc3TlCJUBc3RkOjpfXzI6OmVuYWJsZV9pZjxpc19tb3ZlX2NvbnN0cnVjdGlibGU8Y2hhcj46OnZhbHVlICYmIGlzX21vdmVfYXNzaWduYWJsZTxjaGFyPjo6dmFsdWUsIHZvaWQ+Ojp0eXBlIHN0ZDo6X18yOjpzd2FwW2FiaTp2MTUwMDddPGNoYXI+KGNoYXImLCBjaGFyJinmCO4Bc3RkOjpfXzI6OnRpbWVfcHV0PHdjaGFyX3QsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgd2NoYXJfdCwgdG0gY29uc3QqLCBjaGFyLCBjaGFyKSBjb25zdOcIO3N0ZDo6X18yOjptb25leXB1bmN0PGNoYXIsIGZhbHNlPjo6ZG9fZGVjaW1hbF9wb2ludCgpIGNvbnN06Ag2c3RkOjpfXzI6Om1vbmV5cHVuY3Q8Y2hhciwgZmFsc2U+Ojpkb19ncm91cGluZygpIGNvbnN06Qg7c3RkOjpfXzI6Om1vbmV5cHVuY3Q8Y2hhciwgZmFsc2U+Ojpkb19uZWdhdGl2ZV9zaWduKCkgY29uc3TqCDhzdGQ6Ol9fMjo6bW9uZXlwdW5jdDxjaGFyLCBmYWxzZT46OmRvX3Bvc19mb3JtYXQoKSBjb25zdOsIPnN0ZDo6X18yOjptb25leXB1bmN0PHdjaGFyX3QsIGZhbHNlPjo6ZG9fZGVjaW1hbF9wb2ludCgpIGNvbnN07Ag+c3RkOjpfXzI6Om1vbmV5cHVuY3Q8d2NoYXJfdCwgZmFsc2U+Ojpkb19uZWdhdGl2ZV9zaWduKCkgY29uc3TtCKUCc3RkOjpfXzI6Om1vbmV5X2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fZ2V0KHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIGJvb2wsIHN0ZDo6X18yOjppb3NfYmFzZSYsIHVuc2lnbmVkIGludCYsIGxvbmcgZG91YmxlJikgY29uc3TuCIgDc3RkOjpfXzI6Om1vbmV5X2dldDxjaGFyLCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6X19kb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiYsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIGJvb2wsIHN0ZDo6X18yOjpsb2NhbGUgY29uc3QmLCB1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGludCYsIGJvb2wmLCBzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj4gY29uc3QmLCBzdGQ6Ol9fMjo6dW5pcXVlX3B0cjxjaGFyLCB2b2lkICgqKSh2b2lkKik+JiwgY2hhciomLCBjaGFyKinvCF1zdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpvcGVyYXRvcisrW2FiaTp2MTUwMDddKGludCnwCGZ2b2lkIHN0ZDo6X18yOjpfX2RvdWJsZV9vcl9ub3RoaW5nPGNoYXI+KHN0ZDo6X18yOjp1bmlxdWVfcHRyPGNoYXIsIHZvaWQgKCopKHZvaWQqKT4mLCBjaGFyKiYsIGNoYXIqJinxCIYBdm9pZCBzdGQ6Ol9fMjo6X19kb3VibGVfb3Jfbm90aGluZzx1bnNpZ25lZCBpbnQ+KHN0ZDo6X18yOjp1bmlxdWVfcHRyPHVuc2lnbmVkIGludCwgdm9pZCAoKikodm9pZCopPiYsIHVuc2lnbmVkIGludComLCB1bnNpZ25lZCBpbnQqJinyCElzdGQ6Ol9fMjo6X19jb21wcmVzc2VkX3BhaXI8Y2hhciosIHZvaWQgKCopKHZvaWQqKT46OnNlY29uZFthYmk6djE1MDA3XSgp8wjuAnN0ZDo6X18yOjptb25leV9nZXQ8Y2hhciwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX2dldChzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBib29sLCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCB1bnNpZ25lZCBpbnQmLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4mKSBjb25zdPQIe3N0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19zZXRfc2l6ZVthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKfUIggFzdGQ6Ol9fMjo6bW9uZXlwdW5jdDxjaGFyLCB0cnVlPiBjb25zdCYgc3RkOjpfXzI6OnVzZV9mYWNldFthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6bW9uZXlwdW5jdDxjaGFyLCB0cnVlPj4oc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYp9ghAc3RkOjpfXzI6Om1vbmV5cHVuY3Q8Y2hhciwgdHJ1ZT46Om5lZ19mb3JtYXRbYWJpOnYxNTAwN10oKSBjb25zdPcIQ3N0ZDo6X18yOjptb25leXB1bmN0PGNoYXIsIHRydWU+OjpuZWdhdGl2ZV9zaWduW2FiaTp2MTUwMDddKCkgY29uc3T4CEFzdGQ6Ol9fMjo6bW9uZXlwdW5jdDxjaGFyLCB0cnVlPjo6ZnJhY19kaWdpdHNbYWJpOnYxNTAwN10oKSBjb25zdPkIhAFzdGQ6Ol9fMjo6bW9uZXlwdW5jdDxjaGFyLCBmYWxzZT4gY29uc3QmIHN0ZDo6X18yOjp1c2VfZmFjZXRbYWJpOnYxNTAwN108c3RkOjpfXzI6Om1vbmV5cHVuY3Q8Y2hhciwgZmFsc2U+PihzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0Jin6CD9zdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhcio+OjpvcGVyYXRvcitbYWJpOnYxNTAwN10obG9uZykgY29uc3T7CEJzdGQ6Ol9fMjo6dW5pcXVlX3B0cjxjaGFyLCB2b2lkICgqKSh2b2lkKik+OjpyZWxlYXNlW2FiaTp2MTUwMDddKCn8CHFzdGQ6Ol9fMjo6dW5pcXVlX3B0cjxjaGFyLCB2b2lkICgqKSh2b2lkKik+OjpvcGVyYXRvcj1bYWJpOnYxNTAwN10oc3RkOjpfXzI6OnVuaXF1ZV9wdHI8Y2hhciwgdm9pZCAoKikodm9pZCopPiYmKf0IugJzdGQ6Ol9fMjo6bW9uZXlfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiwgYm9vbCwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50JiwgbG9uZyBkb3VibGUmKSBjb25zdP4IqQNzdGQ6Ol9fMjo6bW9uZXlfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+OjpfX2RvX2dldChzdGQ6Ol9fMjo6aXN0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Jiwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiwgYm9vbCwgc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYsIHVuc2lnbmVkIGludCwgdW5zaWduZWQgaW50JiwgYm9vbCYsIHN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90PiBjb25zdCYsIHN0ZDo6X18yOjp1bmlxdWVfcHRyPHdjaGFyX3QsIHZvaWQgKCopKHZvaWQqKT4mLCB3Y2hhcl90KiYsIHdjaGFyX3QqKf8IY3N0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj46Om9wZXJhdG9yKytbYWJpOnYxNTAwN10oaW50KYAJjANzdGQ6Ol9fMjo6bW9uZXlfZ2V0PHdjaGFyX3QsIHN0ZDo6X18yOjppc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19nZXQoc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6OmlzdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiwgYm9vbCwgc3RkOjpfXzI6Omlvc19iYXNlJiwgdW5zaWduZWQgaW50Jiwgc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+JikgY29uc3SBCUBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD46OmFzc2lnbih3Y2hhcl90Jiwgd2NoYXJfdCBjb25zdCYpggl7c3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpjYXBhY2l0eVthYmk6djE1MDA3XSgpIGNvbnN0gwmIAXN0ZDo6X18yOjptb25leXB1bmN0PHdjaGFyX3QsIHRydWU+IGNvbnN0JiBzdGQ6Ol9fMjo6dXNlX2ZhY2V0W2FiaTp2MTUwMDddPHN0ZDo6X18yOjptb25leXB1bmN0PHdjaGFyX3QsIHRydWU+PihzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0JimECdUBc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpvcGVyYXRvcj1bYWJpOnYxNTAwN10oc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+JiYphQmKAXN0ZDo6X18yOjptb25leXB1bmN0PHdjaGFyX3QsIGZhbHNlPiBjb25zdCYgc3RkOjpfXzI6OnVzZV9mYWNldFthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6bW9uZXlwdW5jdDx3Y2hhcl90LCBmYWxzZT4+KHN0ZDo6X18yOjpsb2NhbGUgY29uc3QmKYYJQnN0ZDo6X18yOjpfX3dyYXBfaXRlcjx3Y2hhcl90Kj46Om9wZXJhdG9yK1thYmk6djE1MDA3XShsb25nKSBjb25zdIcJ2QFzdGQ6Ol9fMjo6bW9uZXlfcHV0PGNoYXIsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+PiwgYm9vbCwgc3RkOjpfXzI6Omlvc19iYXNlJiwgY2hhciwgbG9uZyBkb3VibGUpIGNvbnN0iAmIA3N0ZDo6X18yOjpfX21vbmV5X3B1dDxjaGFyPjo6X19nYXRoZXJfaW5mbyhib29sLCBib29sLCBzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0Jiwgc3RkOjpfXzI6Om1vbmV5X2Jhc2U6OnBhdHRlcm4mLCBjaGFyJiwgY2hhciYsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiYsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiYsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiYsIGludCYpiQnWA3N0ZDo6X18yOjpfX21vbmV5X3B1dDxjaGFyPjo6X19mb3JtYXQoY2hhciosIGNoYXIqJiwgY2hhciomLCB1bnNpZ25lZCBpbnQsIGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0Kiwgc3RkOjpfXzI6OmN0eXBlPGNoYXI+IGNvbnN0JiwgYm9vbCwgc3RkOjpfXzI6Om1vbmV5X2Jhc2U6OnBhdHRlcm4gY29uc3QmLCBjaGFyLCBjaGFyLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmLCBpbnQpiglAc3RkOjpfXzI6Om1vbmV5cHVuY3Q8Y2hhciwgdHJ1ZT46OnBvc19mb3JtYXRbYWJpOnYxNTAwN10oKSBjb25zdIsJmgFjaGFyKiBzdGQ6Ol9fMjo6Y29weVthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhciBjb25zdCo+LCBjaGFyKj4oc3RkOjpfXzI6Ol9fd3JhcF9pdGVyPGNoYXIgY29uc3QqPiwgc3RkOjpfXzI6Ol9fd3JhcF9pdGVyPGNoYXIgY29uc3QqPiwgY2hhciopjAmpAnN0ZDo6X18yOjptb25leV9wdXQ8Y2hhciwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBib29sLCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCBjaGFyLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmKSBjb25zdI0J6wFzdGQ6Ol9fMjo6bW9uZXlfcHV0PHdjaGFyX3QsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+PiwgYm9vbCwgc3RkOjpfXzI6Omlvc19iYXNlJiwgd2NoYXJfdCwgbG9uZyBkb3VibGUpIGNvbnN0jgmjA3N0ZDo6X18yOjpfX21vbmV5X3B1dDx3Y2hhcl90Pjo6X19nYXRoZXJfaW5mbyhib29sLCBib29sLCBzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0Jiwgc3RkOjpfXzI6Om1vbmV5X2Jhc2U6OnBhdHRlcm4mLCB3Y2hhcl90Jiwgd2NoYXJfdCYsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiYsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+PiYsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+PiYsIGludCYpjwmDBHN0ZDo6X18yOjpfX21vbmV5X3B1dDx3Y2hhcl90Pjo6X19mb3JtYXQod2NoYXJfdCosIHdjaGFyX3QqJiwgd2NoYXJfdComLCB1bnNpZ25lZCBpbnQsIHdjaGFyX3QgY29uc3QqLCB3Y2hhcl90IGNvbnN0Kiwgc3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+IGNvbnN0JiwgYm9vbCwgc3RkOjpfXzI6Om1vbmV5X2Jhc2U6OnBhdHRlcm4gY29uc3QmLCB3Y2hhcl90LCB3Y2hhcl90LCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx3Y2hhcl90Pj4gY29uc3QmLCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx3Y2hhcl90Pj4gY29uc3QmLCBpbnQpkAmsAXdjaGFyX3QqIHN0ZDo6X18yOjpjb3B5W2FiaTp2MTUwMDddPHN0ZDo6X18yOjpfX3dyYXBfaXRlcjx3Y2hhcl90IGNvbnN0Kj4sIHdjaGFyX3QqPihzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8d2NoYXJfdCBjb25zdCo+LCBzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8d2NoYXJfdCBjb25zdCo+LCB3Y2hhcl90KimRCcQCc3RkOjpfXzI6Om1vbmV5X3B1dDx3Y2hhcl90LCBzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fcHV0KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIGJvb2wsIHN0ZDo6X18yOjppb3NfYmFzZSYsIHdjaGFyX3QsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+PiBjb25zdCYpIGNvbnN0kgmdAXN0ZDo6X18yOjptZXNzYWdlczxjaGFyPjo6ZG9fb3BlbihzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4gY29uc3QmLCBzdGQ6Ol9fMjo6bG9jYWxlIGNvbnN0JikgY29uc3STCZMBc3RkOjpfXzI6Om1lc3NhZ2VzPGNoYXI+Ojpkb19nZXQobG9uZywgaW50LCBpbnQsIHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpIGNvbnN0lAmfAXN0ZDo6X18yOjptZXNzYWdlczx3Y2hhcl90Pjo6ZG9fZ2V0KGxvbmcsIGludCwgaW50LCBzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx3Y2hhcl90Pj4gY29uc3QmKSBjb25zdJUJOXN0ZDo6X18yOjpjb2RlY3Z0PHdjaGFyX3QsIGNoYXIsIF9fbWJzdGF0ZV90Pjo6fmNvZGVjdnQoKZYJOXN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0OjpmYWNldFthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKZcJiAFzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0Kiwgc3RkOjpfXzI6Ol9fc3NvX2FsbG9jYXRvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIDMwdWw+Pjo6X19jb25zdHJ1Y3RfYXRfZW5kKHVuc2lnbmVkIGxvbmcpmAl/c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46OnNpemVbYWJpOnYxNTAwN10oKSBjb25zdJkJfHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCBzdGQ6Ol9fMjo6X19zc29fYWxsb2NhdG9yPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0KiwgMzB1bD4+OjpfX2NsZWFyW2FiaTp2MTUwMDddKCmaCZkBc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46Ol9fYW5ub3RhdGVfc2hyaW5rW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpIGNvbnN0mwkdc3RkOjpfXzI6OmxvY2FsZTo6aWQ6Ol9fZ2V0KCmcCUBzdGQ6Ol9fMjo6bG9jYWxlOjpfX2ltcDo6aW5zdGFsbChzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIGxvbmcpnQmMAXN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCBzdGQ6Ol9fMjo6X19zc29fYWxsb2NhdG9yPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0KiwgMzB1bD4+OjpvcGVyYXRvcltdW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpngk0c3RkOjpfXzI6Ol9fc2hhcmVkX2NvdW50OjpfX2FkZF9zaGFyZWRbYWJpOnYxNTAwN10oKZ8JOHN0ZDo6X18yOjpfX3NoYXJlZF9jb3VudDo6X19yZWxlYXNlX3NoYXJlZFthYmk6djE1MDA3XSgpoAkhc3RkOjpfXzI6OmxvY2FsZTo6X19pbXA6On5fX2ltcCgpoQlKbG9uZyBzdGQ6Ol9fMjo6X19saWJjcHBfYXRvbWljX3JlZmNvdW50X2RlY3JlbWVudFthYmk6djE1MDA3XTxsb25nPihsb25nJimiCZEBc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46Ol9fZGVzdHJveV92ZWN0b3I6Om9wZXJhdG9yKClbYWJpOnYxNTAwN10oKaMJI3N0ZDo6X18yOjpsb2NhbGU6Ol9faW1wOjp+X19pbXAoKS4xpAkac3RkOjpfXzI6OmxvY2FsZTo6bG9jYWxlKCmlCTFzdGQ6Ol9fMjo6bG9jYWxlOjpsb2NhbGUoc3RkOjpfXzI6OmxvY2FsZSBjb25zdCYppgkbc3RkOjpfXzI6OmxvY2FsZTo6fmxvY2FsZSgppwkec3RkOjpfXzI6OmxvY2FsZTo6aWQ6Ol9faW5pdCgpqAkrc3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQ6Ol9fb25femVyb19zaGFyZWQoKakJdHZvaWQgc3RkOjpfXzI6Ol9fY2FsbF9vbmNlX3Byb3h5W2FiaTp2MTUwMDddPHN0ZDo6X18yOjp0dXBsZTxzdGQ6Ol9fMjo6KGFub255bW91cyBuYW1lc3BhY2UpOjpfX2Zha2VfYmluZCYmPj4odm9pZCopqgk9c3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+Ojpkb19pcyh1bnNpZ25lZCBsb25nLCB3Y2hhcl90KSBjb25zdKsJVXN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90Pjo6ZG9faXMod2NoYXJfdCBjb25zdCosIHdjaGFyX3QgY29uc3QqLCB1bnNpZ25lZCBsb25nKikgY29uc3SsCVlzdGQ6Ol9fMjo6Y3R5cGU8d2NoYXJfdD46OmRvX3NjYW5faXModW5zaWduZWQgbG9uZywgd2NoYXJfdCBjb25zdCosIHdjaGFyX3QgY29uc3QqKSBjb25zdK0JWnN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90Pjo6ZG9fc2Nhbl9ub3QodW5zaWduZWQgbG9uZywgd2NoYXJfdCBjb25zdCosIHdjaGFyX3QgY29uc3QqKSBjb25zdK4JM3N0ZDo6X18yOjpjdHlwZTx3Y2hhcl90Pjo6ZG9fdG91cHBlcih3Y2hhcl90KSBjb25zdK8JRHN0ZDo6X18yOjpjdHlwZTx3Y2hhcl90Pjo6ZG9fdG91cHBlcih3Y2hhcl90Kiwgd2NoYXJfdCBjb25zdCopIGNvbnN0sAkzc3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+Ojpkb190b2xvd2VyKHdjaGFyX3QpIGNvbnN0sQlEc3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+Ojpkb190b2xvd2VyKHdjaGFyX3QqLCB3Y2hhcl90IGNvbnN0KikgY29uc3SyCUxzdGQ6Ol9fMjo6Y3R5cGU8d2NoYXJfdD46OmRvX3dpZGVuKGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0Kiwgd2NoYXJfdCopIGNvbnN0swk4c3RkOjpfXzI6OmN0eXBlPHdjaGFyX3Q+Ojpkb19uYXJyb3cod2NoYXJfdCwgY2hhcikgY29uc3S0CVZzdGQ6Ol9fMjo6Y3R5cGU8d2NoYXJfdD46OmRvX25hcnJvdyh3Y2hhcl90IGNvbnN0Kiwgd2NoYXJfdCBjb25zdCosIGNoYXIsIGNoYXIqKSBjb25zdLUJH3N0ZDo6X18yOjpjdHlwZTxjaGFyPjo6fmN0eXBlKCm2CSFzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj46On5jdHlwZSgpLjG3CS1zdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj46OmRvX3RvdXBwZXIoY2hhcikgY29uc3S4CTtzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj46OmRvX3RvdXBwZXIoY2hhciosIGNoYXIgY29uc3QqKSBjb25zdLkJLXN0ZDo6X18yOjpjdHlwZTxjaGFyPjo6ZG9fdG9sb3dlcihjaGFyKSBjb25zdLoJO3N0ZDo6X18yOjpjdHlwZTxjaGFyPjo6ZG9fdG9sb3dlcihjaGFyKiwgY2hhciBjb25zdCopIGNvbnN0uwlGc3RkOjpfXzI6OmN0eXBlPGNoYXI+Ojpkb193aWRlbihjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIGNoYXIqKSBjb25zdLwJMnN0ZDo6X18yOjpjdHlwZTxjaGFyPjo6ZG9fbmFycm93KGNoYXIsIGNoYXIpIGNvbnN0vQlNc3RkOjpfXzI6OmN0eXBlPGNoYXI+Ojpkb19uYXJyb3coY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCBjaGFyLCBjaGFyKikgY29uc3S+CYQBc3RkOjpfXzI6OmNvZGVjdnQ8Y2hhciwgY2hhciwgX19tYnN0YXRlX3Q+Ojpkb19vdXQoX19tYnN0YXRlX3QmLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIGNoYXIgY29uc3QqJiwgY2hhciosIGNoYXIqLCBjaGFyKiYpIGNvbnN0vwlgc3RkOjpfXzI6OmNvZGVjdnQ8Y2hhciwgY2hhciwgX19tYnN0YXRlX3Q+Ojpkb191bnNoaWZ0KF9fbWJzdGF0ZV90JiwgY2hhciosIGNoYXIqLCBjaGFyKiYpIGNvbnN0wAlyc3RkOjpfXzI6OmNvZGVjdnQ8Y2hhciwgY2hhciwgX19tYnN0YXRlX3Q+Ojpkb19sZW5ndGgoX19tYnN0YXRlX3QmLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcpIGNvbnN0wQk7c3RkOjpfXzI6OmNvZGVjdnQ8d2NoYXJfdCwgY2hhciwgX19tYnN0YXRlX3Q+Ojp+Y29kZWN2dCgpLjHCCZABc3RkOjpfXzI6OmNvZGVjdnQ8d2NoYXJfdCwgY2hhciwgX19tYnN0YXRlX3Q+Ojpkb19vdXQoX19tYnN0YXRlX3QmLCB3Y2hhcl90IGNvbnN0Kiwgd2NoYXJfdCBjb25zdCosIHdjaGFyX3QgY29uc3QqJiwgY2hhciosIGNoYXIqLCBjaGFyKiYpIGNvbnN0wwlYc3RkOjpfXzI6Ol9fbGliY3BwX3djcnRvbWJfbFthYmk6djE1MDA3XShjaGFyKiwgd2NoYXJfdCwgX19tYnN0YXRlX3QqLCBfX2xvY2FsZV9zdHJ1Y3QqKcQJjwFzdGQ6Ol9fMjo6Y29kZWN2dDx3Y2hhcl90LCBjaGFyLCBfX21ic3RhdGVfdD46OmRvX2luKF9fbWJzdGF0ZV90JiwgY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiYsIHdjaGFyX3QqLCB3Y2hhcl90Kiwgd2NoYXJfdComKSBjb25zdMUJbnN0ZDo6X18yOjpfX2xpYmNwcF9tYnJ0b3djX2xbYWJpOnYxNTAwN10od2NoYXJfdCosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nLCBfX21ic3RhdGVfdCosIF9fbG9jYWxlX3N0cnVjdCopxgljc3RkOjpfXzI6OmNvZGVjdnQ8d2NoYXJfdCwgY2hhciwgX19tYnN0YXRlX3Q+Ojpkb191bnNoaWZ0KF9fbWJzdGF0ZV90JiwgY2hhciosIGNoYXIqLCBjaGFyKiYpIGNvbnN0xwlCc3RkOjpfXzI6OmNvZGVjdnQ8d2NoYXJfdCwgY2hhciwgX19tYnN0YXRlX3Q+Ojpkb19lbmNvZGluZygpIGNvbnN0yAk9c3RkOjpfXzI6Ol9fbGliY3BwX21iX2N1cl9tYXhfbFthYmk6djE1MDA3XShfX2xvY2FsZV9zdHJ1Y3QqKckJdXN0ZDo6X18yOjpjb2RlY3Z0PHdjaGFyX3QsIGNoYXIsIF9fbWJzdGF0ZV90Pjo6ZG9fbGVuZ3RoKF9fbWJzdGF0ZV90JiwgY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSBjb25zdMoJRHN0ZDo6X18yOjpjb2RlY3Z0PHdjaGFyX3QsIGNoYXIsIF9fbWJzdGF0ZV90Pjo6ZG9fbWF4X2xlbmd0aCgpIGNvbnN0ywmUAXN0ZDo6X18yOjpjb2RlY3Z0PGNoYXIxNl90LCBjaGFyLCBfX21ic3RhdGVfdD46OmRvX291dChfX21ic3RhdGVfdCYsIGNoYXIxNl90IGNvbnN0KiwgY2hhcjE2X3QgY29uc3QqLCBjaGFyMTZfdCBjb25zdComLCBjaGFyKiwgY2hhciosIGNoYXIqJikgY29uc3TMCZMBc3RkOjpfXzI6OmNvZGVjdnQ8Y2hhcjE2X3QsIGNoYXIsIF9fbWJzdGF0ZV90Pjo6ZG9faW4oX19tYnN0YXRlX3QmLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdCosIGNoYXIgY29uc3QqJiwgY2hhcjE2X3QqLCBjaGFyMTZfdCosIGNoYXIxNl90KiYpIGNvbnN0zQl2c3RkOjpfXzI6OmNvZGVjdnQ8Y2hhcjE2X3QsIGNoYXIsIF9fbWJzdGF0ZV90Pjo6ZG9fbGVuZ3RoKF9fbWJzdGF0ZV90JiwgY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKSBjb25zdM4JRXN0ZDo6X18yOjpjb2RlY3Z0PGNoYXIxNl90LCBjaGFyLCBfX21ic3RhdGVfdD46OmRvX21heF9sZW5ndGgoKSBjb25zdM8JlAFzdGQ6Ol9fMjo6Y29kZWN2dDxjaGFyMzJfdCwgY2hhciwgX19tYnN0YXRlX3Q+Ojpkb19vdXQoX19tYnN0YXRlX3QmLCBjaGFyMzJfdCBjb25zdCosIGNoYXIzMl90IGNvbnN0KiwgY2hhcjMyX3QgY29uc3QqJiwgY2hhciosIGNoYXIqLCBjaGFyKiYpIGNvbnN00AmTAXN0ZDo6X18yOjpjb2RlY3Z0PGNoYXIzMl90LCBjaGFyLCBfX21ic3RhdGVfdD46OmRvX2luKF9fbWJzdGF0ZV90JiwgY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiYsIGNoYXIzMl90KiwgY2hhcjMyX3QqLCBjaGFyMzJfdComKSBjb25zdNEJdnN0ZDo6X18yOjpjb2RlY3Z0PGNoYXIzMl90LCBjaGFyLCBfX21ic3RhdGVfdD46OmRvX2xlbmd0aChfX21ic3RhdGVfdCYsIGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZykgY29uc3TSCSVzdGQ6Ol9fMjo6bnVtcHVuY3Q8Y2hhcj46On5udW1wdW5jdCgp0wknc3RkOjpfXzI6Om51bXB1bmN0PGNoYXI+Ojp+bnVtcHVuY3QoKS4x1Akoc3RkOjpfXzI6Om51bXB1bmN0PHdjaGFyX3Q+Ojp+bnVtcHVuY3QoKdUJKnN0ZDo6X18yOjpudW1wdW5jdDx3Y2hhcl90Pjo6fm51bXB1bmN0KCkuMdYJMnN0ZDo6X18yOjpudW1wdW5jdDxjaGFyPjo6ZG9fZGVjaW1hbF9wb2ludCgpIGNvbnN01wkyc3RkOjpfXzI6Om51bXB1bmN0PGNoYXI+Ojpkb190aG91c2FuZHNfc2VwKCkgY29uc3TYCS1zdGQ6Ol9fMjo6bnVtcHVuY3Q8Y2hhcj46OmRvX2dyb3VwaW5nKCkgY29uc3TZCTBzdGQ6Ol9fMjo6bnVtcHVuY3Q8d2NoYXJfdD46OmRvX2dyb3VwaW5nKCkgY29uc3TaCS1zdGQ6Ol9fMjo6bnVtcHVuY3Q8Y2hhcj46OmRvX3RydWVuYW1lKCkgY29uc3TbCTBzdGQ6Ol9fMjo6bnVtcHVuY3Q8d2NoYXJfdD46OmRvX3RydWVuYW1lKCkgY29uc3TcCZcBc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpiYXNpY19zdHJpbmdbYWJpOnYxNTAwN108c3RkOjpudWxscHRyX3Q+KHdjaGFyX3QgY29uc3QqKd0JLnN0ZDo6X18yOjpudW1wdW5jdDxjaGFyPjo6ZG9fZmFsc2VuYW1lKCkgY29uc3TeCTFzdGQ6Ol9fMjo6bnVtcHVuY3Q8d2NoYXJfdD46OmRvX2ZhbHNlbmFtZSgpIGNvbnN03wl4c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjpvcGVyYXRvcj1bYWJpOnYxNTAwN10oY2hhciBjb25zdCop4Ak1c3RkOjpfXzI6Ol9fdGltZV9nZXRfY19zdG9yYWdlPGNoYXI+OjpfX3dlZWtzKCkgY29uc3ThCRpfX2N4eF9nbG9iYWxfYXJyYXlfZHRvci41N+IJOHN0ZDo6X18yOjpfX3RpbWVfZ2V0X2Nfc3RvcmFnZTx3Y2hhcl90Pjo6X193ZWVrcygpIGNvbnN04wkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuNzLkCYQBc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpvcGVyYXRvcj1bYWJpOnYxNTAwN10od2NoYXJfdCBjb25zdCop5Qk2c3RkOjpfXzI6Ol9fdGltZV9nZXRfY19zdG9yYWdlPGNoYXI+OjpfX21vbnRocygpIGNvbnN05gkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuODfnCTlzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8d2NoYXJfdD46Ol9fbW9udGhzKCkgY29uc3ToCRtfX2N4eF9nbG9iYWxfYXJyYXlfZHRvci4xMTHpCTVzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8Y2hhcj46Ol9fYW1fcG0oKSBjb25zdOoJG19fY3h4X2dsb2JhbF9hcnJheV9kdG9yLjEzNesJOHN0ZDo6X18yOjpfX3RpbWVfZ2V0X2Nfc3RvcmFnZTx3Y2hhcl90Pjo6X19hbV9wbSgpIGNvbnN07AkbX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuMTM47Qkxc3RkOjpfXzI6Ol9fdGltZV9nZXRfY19zdG9yYWdlPGNoYXI+OjpfX3goKSBjb25zdO4JGV9fY3h4X2dsb2JhbF9hcnJheV9kdG9yLjPvCTRzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8d2NoYXJfdD46Ol9feCgpIGNvbnN08AkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuMzLxCTFzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8Y2hhcj46Ol9fWCgpIGNvbnN08gkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuMzTzCTRzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8d2NoYXJfdD46Ol9fWCgpIGNvbnN09AkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuMzb1CTFzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8Y2hhcj46Ol9fYygpIGNvbnN09gkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuMzj3CTRzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8d2NoYXJfdD46Ol9fYygpIGNvbnN0+AkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuNDD5CTFzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8Y2hhcj46Ol9fcigpIGNvbnN0+gkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuNDL7CTRzdGQ6Ol9fMjo6X190aW1lX2dldF9jX3N0b3JhZ2U8d2NoYXJfdD46Ol9fcigpIGNvbnN0/AkaX19jeHhfZ2xvYmFsX2FycmF5X2R0b3IuNDT9CXNzdGQ6Ol9fMjo6dGltZV9wdXQ8Y2hhciwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46On50aW1lX3B1dFthYmk6djE1MDA3XSgp/gl1c3RkOjpfXzI6OnRpbWVfcHV0PGNoYXIsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4+Ojp+dGltZV9wdXRbYWJpOnYxNTAwN10oKS4x/wmHAXN0ZDo6X18yOjpiYXNpY19zdHJpbmc8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+Pjo6X19maXRzX2luX3Nzb1thYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKYAKhQFzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx3Y2hhcl90Pj46Ol9fcmVjb21tZW5kW2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpgQrWAXN0ZDo6X18yOjpfX2FsbG9jYXRpb25fcmVzdWx0PHN0ZDo6X18yOjphbGxvY2F0b3JfdHJhaXRzPHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+Ojpwb2ludGVyPiBzdGQ6Ol9fMjo6X19hbGxvY2F0ZV9hdF9sZWFzdFthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+PihzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+JiwgdW5zaWduZWQgbG9uZymCCkFzdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+OjphbGxvY2F0ZVthYmk6djE1MDA3XSh1bnNpZ25lZCBsb25nKYMKiwFzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46Ol9fbnVsbF90ZXJtaW5hdGVfYXRbYWJpOnYxNTAwN10oY2hhciosIHVuc2lnbmVkIGxvbmcphAqIAXN0ZDo6X18yOjphbGxvY2F0b3JfdHJhaXRzPHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpkZWFsbG9jYXRlW2FiaTp2MTUwMDddKHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4mLCB3Y2hhcl90KiwgdW5zaWduZWQgbG9uZymFCk1zdGQ6Ol9fMjo6YWxsb2NhdG9yPHdjaGFyX3Q+OjpkZWFsbG9jYXRlW2FiaTp2MTUwMDddKHdjaGFyX3QqLCB1bnNpZ25lZCBsb25nKYYKuQFhdXRvIHN0ZDo6X18yOjpfX3Vud3JhcF9yYW5nZVthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhciBjb25zdCo+LCBzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhciBjb25zdCo+PihzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhciBjb25zdCo+LCBzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhciBjb25zdCo+KYcKxQJkZWNsdHlwZShzdGQ6Ol9fMjo6X191bndyYXBfaXRlcl9pbXBsPHN0ZDo6X18yOjpfX3dyYXBfaXRlcjxjaGFyIGNvbnN0Kj4sIHRydWU+OjpfX3Vud3JhcChzdGQ6OmRlY2x2YWw8c3RkOjpfXzI6Ol9fd3JhcF9pdGVyPGNoYXIgY29uc3QqPj4oKSkpIHN0ZDo6X18yOjpfX3Vud3JhcF9pdGVyW2FiaTp2MTUwMDddPHN0ZDo6X18yOjpfX3dyYXBfaXRlcjxjaGFyIGNvbnN0Kj4sIHN0ZDo6X18yOjpfX3Vud3JhcF9pdGVyX2ltcGw8c3RkOjpfXzI6Ol9fd3JhcF9pdGVyPGNoYXIgY29uc3QqPiwgdHJ1ZT4sIDA+KHN0ZDo6X18yOjpfX3dyYXBfaXRlcjxjaGFyIGNvbnN0Kj4piAqOAnN0ZDo6X18yOjpkZWNheTxkZWNsdHlwZShfX3RvX2FkZHJlc3NfaGVscGVyPHN0ZDo6X18yOjpfX3dyYXBfaXRlcjxjaGFyIGNvbnN0Kj4+OjpfX2NhbGwoZGVjbHZhbDxzdGQ6Ol9fMjo6X193cmFwX2l0ZXI8Y2hhciBjb25zdCo+IGNvbnN0Jj4oKSkpPjo6dHlwZSBzdGQ6Ol9fMjo6X190b19hZGRyZXNzW2FiaTp2MTUwMDddPHN0ZDo6X18yOjpfX3dyYXBfaXRlcjxjaGFyIGNvbnN0Kj4sIHZvaWQ+KHN0ZDo6X18yOjpfX3dyYXBfaXRlcjxjaGFyIGNvbnN0Kj4gY29uc3QmKYkKkQFzdGQ6Ol9fMjo6X19jb21wcmVzc2VkX3BhaXJfZWxlbTxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCoqLCAwLCBmYWxzZT46Ol9fY29tcHJlc3NlZF9wYWlyX2VsZW1bYWJpOnYxNTAwN108c3RkOjpudWxscHRyX3QsIHZvaWQ+KHN0ZDo6bnVsbHB0cl90JiYpigp3c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46Om1heF9zaXplKCkgY29uc3SLCo8Bc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46Ol9fdGhyb3dfbGVuZ3RoX2Vycm9yW2FiaTp2MTUwMDddKCkgY29uc3SMCnxzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0Kiwgc3RkOjpfXzI6Ol9fc3NvX2FsbG9jYXRvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIDMwdWw+Pjo6X19hbGxvY1thYmk6djE1MDA3XSgpjQqtAnN0ZDo6X18yOjpfX2FsbG9jYXRpb25fcmVzdWx0PHN0ZDo6X18yOjphbGxvY2F0b3JfdHJhaXRzPHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46OnBvaW50ZXI+IHN0ZDo6X18yOjpfX2FsbG9jYXRlX2F0X2xlYXN0W2FiaTp2MTUwMDddPHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj4oc3RkOjpfXzI6Ol9fc3NvX2FsbG9jYXRvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIDMwdWw+JiwgdW5zaWduZWQgbG9uZymOCn5zdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0Kiwgc3RkOjpfXzI6Ol9fc3NvX2FsbG9jYXRvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIDMwdWw+Pjo6X19lbmRfY2FwW2FiaTp2MTUwMDddKCmPCpYBc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46Ol9fYW5ub3RhdGVfbmV3W2FiaTp2MTUwMDddKHVuc2lnbmVkIGxvbmcpIGNvbnN0kAqDAXN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCBzdGQ6Ol9fMjo6X19zc29fYWxsb2NhdG9yPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0KiwgMzB1bD4+OjpjYXBhY2l0eVthYmk6djE1MDA3XSgpIGNvbnN0kQqMAXN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0Kiogc3RkOjpfXzI6OmNvbnN0cnVjdF9hdFthYmk6djE1MDA3XTxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0Kio+KHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0KiopkgqMAXN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCBzdGQ6Ol9fMjo6X19zc29fYWxsb2NhdG9yPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0KiwgMzB1bD4+OjpfX2Fubm90YXRlX2RlbGV0ZVthYmk6djE1MDA3XSgpIGNvbnN0kwrTAXN0ZDo6X18yOjphbGxvY2F0b3JfdHJhaXRzPHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46OmRlYWxsb2NhdGVbYWJpOnYxNTAwN10oc3RkOjpfXzI6Ol9fc3NvX2FsbG9jYXRvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIDMwdWw+Jiwgc3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqKiwgdW5zaWduZWQgbG9uZymUCqQBc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIHN0ZDo6X18yOjpfX3Nzb19hbGxvY2F0b3I8c3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqLCAzMHVsPj46Ol9fYmFzZV9kZXN0cnVjdF9hdF9lbmRbYWJpOnYxNTAwN10oc3RkOjpfXzI6OmxvY2FsZTo6ZmFjZXQqKimVCocBc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0Kiwgc3RkOjpfXzI6Ol9fc3NvX2FsbG9jYXRvcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCosIDMwdWw+Jj46Ol9fZW5kX2NhcFthYmk6djE1MDA3XSgplgqIAXN0ZDo6X18yOjpfX2NvbXByZXNzZWRfcGFpcjxzdGQ6Ol9fMjo6bG9jYWxlOjpmYWNldCoqLCBzdGQ6Ol9fMjo6X19zc29fYWxsb2NhdG9yPHN0ZDo6X18yOjpsb2NhbGU6OmZhY2V0KiwgMzB1bD4mPjo6c2Vjb25kW2FiaTp2MTUwMDddKCmXCi5zdGQ6Ol9fMjo6X190aW1lX3B1dDo6X190aW1lX3B1dFthYmk6djE1MDA3XSgpmAoJc3RydG9sbF9smQoKc3RydG91bGxfbJoKLXN0ZDo6X18yOjpfX3NoYXJlZF9jb3VudDo6fl9fc2hhcmVkX2NvdW50KCkuMZsKG29wZXJhdG9yIG5ldyh1bnNpZ25lZCBsb25nKZwKJ3N0ZDo6ZXhjZXB0aW9uOjpleGNlcHRpb25bYWJpOnYxNTAwN10oKZ0KKnN0ZDo6bG9naWNfZXJyb3I6OmxvZ2ljX2Vycm9yKGNoYXIgY29uc3QqKZ4K0gFzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46Ol9fZ3Jvd19ieV9hbmRfcmVwbGFjZSh1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBjaGFyIGNvbnN0KimfCmVzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46On5iYXNpY19zdHJpbmcoKaAKuQFzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj46Ol9fZ3Jvd19ieSh1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nKaEKP3N0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPjo6YXNzaWduKGNoYXIqLCB1bnNpZ25lZCBsb25nLCBjaGFyKaIKeHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19pbml0KGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKaMKcXN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pjo6X19pbml0KHVuc2lnbmVkIGxvbmcsIGNoYXIppAplc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+OjpwdXNoX2JhY2soY2hhcimlCt4Bc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpfX2dyb3dfYnlfYW5kX3JlcGxhY2UodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgd2NoYXJfdCBjb25zdCoppgpuc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+Ojp+YmFzaWNfc3RyaW5nKCmnCsIBc3RkOjpfXzI6OmJhc2ljX3N0cmluZzx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8d2NoYXJfdD4+OjpfX2dyb3dfYnkodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZymoCnFzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjx3Y2hhcl90Pj46OnB1c2hfYmFjayh3Y2hhcl90KakKB3N5c2NvbmaqChIuTGNhbGxfZHRvcnMuNTAuMzmrChFfX2Nsb2NrX25hbm9zbGVlcKwKGF9fY3hhX2FsbG9jYXRlX2V4Y2VwdGlvbq0KEl9fY3hhX3B1cmVfdmlydHVhbK4KYV9fY3h4YWJpdjE6Ol9fZnVuZGFtZW50YWxfdHlwZV9pbmZvOjpjYW5fY2F0Y2goX19jeHhhYml2MTo6X19zaGltX3R5cGVfaW5mbyBjb25zdCosIHZvaWQqJikgY29uc3SvCjxpc19lcXVhbChzdGQ6OnR5cGVfaW5mbyBjb25zdCosIHN0ZDo6dHlwZV9pbmZvIGNvbnN0KiwgYm9vbCmwCltfX2N4eGFiaXYxOjpfX2NsYXNzX3R5cGVfaW5mbzo6Y2FuX2NhdGNoKF9fY3h4YWJpdjE6Ol9fc2hpbV90eXBlX2luZm8gY29uc3QqLCB2b2lkKiYpIGNvbnN0sQoOX19keW5hbWljX2Nhc3SyCmtfX2N4eGFiaXYxOjpfX2NsYXNzX3R5cGVfaW5mbzo6cHJvY2Vzc19mb3VuZF9iYXNlX2NsYXNzKF9fY3h4YWJpdjE6Ol9fZHluYW1pY19jYXN0X2luZm8qLCB2b2lkKiwgaW50KSBjb25zdLMKbl9fY3h4YWJpdjE6Ol9fY2xhc3NfdHlwZV9pbmZvOjpoYXNfdW5hbWJpZ3VvdXNfcHVibGljX2Jhc2UoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQqLCBpbnQpIGNvbnN0tApxX19jeHhhYml2MTo6X19zaV9jbGFzc190eXBlX2luZm86Omhhc191bmFtYmlndW91c19wdWJsaWNfYmFzZShfX2N4eGFiaXYxOjpfX2R5bmFtaWNfY2FzdF9pbmZvKiwgdm9pZCosIGludCkgY29uc3S1CnNfX2N4eGFiaXYxOjpfX2Jhc2VfY2xhc3NfdHlwZV9pbmZvOjpoYXNfdW5hbWJpZ3VvdXNfcHVibGljX2Jhc2UoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQqLCBpbnQpIGNvbnN0tgoodXBkYXRlX29mZnNldF90b19iYXNlKGNoYXIgY29uc3QqLCBsb25nKbcKcl9fY3h4YWJpdjE6Ol9fdm1pX2NsYXNzX3R5cGVfaW5mbzo6aGFzX3VuYW1iaWd1b3VzX3B1YmxpY19iYXNlKF9fY3h4YWJpdjE6Ol9fZHluYW1pY19jYXN0X2luZm8qLCB2b2lkKiwgaW50KSBjb25zdLgKXV9fY3h4YWJpdjE6Ol9fcG9pbnRlcl90eXBlX2luZm86OmNhbl9jYXRjaChfX2N4eGFiaXYxOjpfX3NoaW1fdHlwZV9pbmZvIGNvbnN0Kiwgdm9pZComKSBjb25zdLkKZl9fY3h4YWJpdjE6Ol9fcG9pbnRlcl90b19tZW1iZXJfdHlwZV9pbmZvOjpjYW5fY2F0Y2hfbmVzdGVkKF9fY3h4YWJpdjE6Ol9fc2hpbV90eXBlX2luZm8gY29uc3QqKSBjb25zdLoKgwFfX2N4eGFiaXYxOjpfX2NsYXNzX3R5cGVfaW5mbzo6cHJvY2Vzc19zdGF0aWNfdHlwZV9hYm92ZV9kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCB2b2lkIGNvbnN0KiwgaW50KSBjb25zdLsKdl9fY3h4YWJpdjE6Ol9fY2xhc3NfdHlwZV9pbmZvOjpwcm9jZXNzX3N0YXRpY190eXBlX2JlbG93X2RzdChfX2N4eGFiaXYxOjpfX2R5bmFtaWNfY2FzdF9pbmZvKiwgdm9pZCBjb25zdCosIGludCkgY29uc3S8CnNfX2N4eGFiaXYxOjpfX3ZtaV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9iZWxvd19kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0vQqBAV9fY3h4YWJpdjE6Ol9fYmFzZV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9hYm92ZV9kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCB2b2lkIGNvbnN0KiwgaW50LCBib29sKSBjb25zdL4KdF9fY3h4YWJpdjE6Ol9fYmFzZV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9iZWxvd19kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0vwpyX19jeHhhYml2MTo6X19zaV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9iZWxvd19kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0wApvX19jeHhhYml2MTo6X19jbGFzc190eXBlX2luZm86OnNlYXJjaF9iZWxvd19kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0wQqAAV9fY3h4YWJpdjE6Ol9fdm1pX2NsYXNzX3R5cGVfaW5mbzo6c2VhcmNoX2Fib3ZlX2RzdChfX2N4eGFiaXYxOjpfX2R5bmFtaWNfY2FzdF9pbmZvKiwgdm9pZCBjb25zdCosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0wgp/X19jeHhhYml2MTo6X19zaV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9hYm92ZV9kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCB2b2lkIGNvbnN0KiwgaW50LCBib29sKSBjb25zdMMKfF9fY3h4YWJpdjE6Ol9fY2xhc3NfdHlwZV9pbmZvOjpzZWFyY2hfYWJvdmVfZHN0KF9fY3h4YWJpdjE6Ol9fZHluYW1pY19jYXN0X2luZm8qLCB2b2lkIGNvbnN0Kiwgdm9pZCBjb25zdCosIGludCwgYm9vbCkgY29uc3TEChVfX2N4YV9pc19wb2ludGVyX3R5cGXFChxzdGQ6OmV4Y2VwdGlvbjo6d2hhdCgpIGNvbnN0xgocc3RkOjpiYWRfYWxsb2M6OndoYXQoKSBjb25zdMcKJ3N0ZDo6YmFkX2FycmF5X25ld19sZW5ndGg6OndoYXQoKSBjb25zdMgKIHN0ZDo6bG9naWNfZXJyb3I6On5sb2dpY19lcnJvcigpyQoic3RkOjpsb2dpY19lcnJvcjo6fmxvZ2ljX2Vycm9yKCkuMcoKM19fYXNhbjo6RmFrZVN0YWNrOjpBZGRySXNJbkZha2VTdGFjayh1bnNpZ25lZCBsb25nKcsKMV9fc2FuaXRpemVyOjpGbGFnSGFuZGxlcjxpbnQ+OjpQYXJzZShjaGFyIGNvbnN0KinMCjtfX3Nhbml0aXplcjo6RmxhZ0hhbmRsZXI8aW50Pjo6Rm9ybWF0KGNoYXIqLCB1bnNpZ25lZCBsb25nKc0KMl9fc2FuaXRpemVyOjpGbGFnSGFuZGxlcjxib29sPjo6UGFyc2UoY2hhciBjb25zdCopzgo8X19zYW5pdGl6ZXI6OkZsYWdIYW5kbGVyPGJvb2w+OjpGb3JtYXQoY2hhciosIHVuc2lnbmVkIGxvbmcpzwo5X19zYW5pdGl6ZXI6OkZsYWdIYW5kbGVyPGNoYXIgY29uc3QqPjo6UGFyc2UoY2hhciBjb25zdCop0ApDX19zYW5pdGl6ZXI6OkZsYWdIYW5kbGVyPGNoYXIgY29uc3QqPjo6Rm9ybWF0KGNoYXIqLCB1bnNpZ25lZCBsb25nKdEKGWVtc2NyaXB0ZW5fYnVpbHRpbl9tZW1zZXTSClhfX2FzYW46OkFsbG9jYXRvck9wdGlvbnM6OlNldEZyb20oX19hc2FuOjpGbGFncyBjb25zdCosIF9fc2FuaXRpemVyOjpDb21tb25GbGFncyBjb25zdCop0woiX19hc2FuOjpBc2FuQ2h1bmtWaWV3OjpCZWcoKSBjb25zdNQKIl9fYXNhbjo6QXNhbkNodW5rVmlldzo6RW5kKCkgY29uc3TVCidfX2FzYW46OkFzYW5DaHVua1ZpZXc6OlVzZWRTaXplKCkgY29uc3TWCidfX2FzYW46OkFzYW5DaHVua1ZpZXc6OkFsbG9jVGlkKCkgY29uc3TXCi5fX2FzYW46OkFzYW5DaHVua1ZpZXc6OkdldEFsbG9jU3RhY2tJZCgpIGNvbnN02ApGX19hc2FuOjpBbGxvY2F0b3I6OkNoZWNrT3B0aW9ucyhfX2FzYW46OkFsbG9jYXRvck9wdGlvbnMgY29uc3QmKSBjb25zdNkKQF9fYXNhbjo6QWxsb2NhdG9yOjpSZUluaXRpYWxpemUoX19hc2FuOjpBbGxvY2F0b3JPcHRpb25zIGNvbnN0JinaCi9fX2FzYW46OkFsbG9jYXRvcjo6UmVQb2lzb25DaHVuayh1bnNpZ25lZCBsb25nKdsKlgF2b2lkIF9fc2FuaXRpemVyOjpTb3J0PHVuc2lnbmVkIGxvbmcsIF9fc2FuaXRpemVyOjpDb21wYXJlTGVzczx1bnNpZ25lZCBsb25nPj4odW5zaWduZWQgbG9uZyosIHVuc2lnbmVkIGxvbmcsIF9fc2FuaXRpemVyOjpDb21wYXJlTGVzczx1bnNpZ25lZCBsb25nPincCrIBX19zYW5pdGl6ZXI6OkxhcmdlTW1hcEFsbG9jYXRvcjxfX2FzYW46OkFzYW5NYXBVbm1hcENhbGxiYWNrLCBfX3Nhbml0aXplcjo6TGFyZ2VNbWFwQWxsb2NhdG9yUHRyQXJyYXlTdGF0aWMsIF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXc+OjpHZXRCbG9ja0JlZ2luKHZvaWQgY29uc3QqKSBjb25zdN0KpAFfX3Nhbml0aXplcjo6UXVhcmFudGluZTxfX2FzYW46OlF1YXJhbnRpbmVDYWxsYmFjaywgX19hc2FuOjpBc2FuQ2h1bms+OjpEcmFpbihfX3Nhbml0aXplcjo6UXVhcmFudGluZUNhY2hlPF9fYXNhbjo6UXVhcmFudGluZUNhbGxiYWNrPiosIF9fYXNhbjo6UXVhcmFudGluZUNhbGxiYWNrKd4K+QJfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzJMb2NhbENhY2hlPF9fc2FuaXRpemVyOjpTaXplQ2xhc3NBbGxvY2F0b3IzMjxfX2FzYW46OkFQMzI8X19zYW5pdGl6ZXI6OkxvY2FsQWRkcmVzc1NwYWNlVmlldz4+Pjo6RHJhaW4oX19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyTG9jYWxDYWNoZTxfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzI8X19hc2FuOjpBUDMyPF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXc+Pj46OlBlckNsYXNzKiwgX19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyPF9fYXNhbjo6QVAzMjxfX3Nhbml0aXplcjo6TG9jYWxBZGRyZXNzU3BhY2VWaWV3Pj4qLCB1bnNpZ25lZCBsb25nKd8Kd19fYXNhbjo6QWxsb2NhdG9yOjpEZWFsbG9jYXRlKHZvaWQqLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBfX3Nhbml0aXplcjo6QnVmZmVyZWRTdGFja1RyYWNlKiwgX19hc2FuOjpBbGxvY1R5cGUp4Ap0X19hc2FuOjpBbGxvY2F0b3I6OkFsbG9jYXRlKHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcsIF9fc2FuaXRpemVyOjpCdWZmZXJlZFN0YWNrVHJhY2UqLCBfX2FzYW46OkFsbG9jVHlwZSwgYm9vbCnhCiBfX2FzYW46OlJaU2l6ZTJMb2codW5zaWduZWQgaW50KeIK7wFfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzJMb2NhbENhY2hlPF9fc2FuaXRpemVyOjpTaXplQ2xhc3NBbGxvY2F0b3IzMjxfX2FzYW46OkFQMzI8X19zYW5pdGl6ZXI6OkxvY2FsQWRkcmVzc1NwYWNlVmlldz4+Pjo6QWxsb2NhdGUoX19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyPF9fYXNhbjo6QVAzMjxfX3Nhbml0aXplcjo6TG9jYWxBZGRyZXNzU3BhY2VWaWV3Pj4qLCB1bnNpZ25lZCBsb25nKeMK1gFfX3Nhbml0aXplcjo6TGFyZ2VNbWFwQWxsb2NhdG9yPF9fYXNhbjo6QXNhbk1hcFVubWFwQ2FsbGJhY2ssIF9fc2FuaXRpemVyOjpMYXJnZU1tYXBBbGxvY2F0b3JQdHJBcnJheVN0YXRpYywgX19zYW5pdGl6ZXI6OkxvY2FsQWRkcmVzc1NwYWNlVmlldz46OkFsbG9jYXRlKF9fc2FuaXRpemVyOjpBbGxvY2F0b3JTdGF0cyosIHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcp5ArDAV9fc2FuaXRpemVyOjpDb21iaW5lZEFsbG9jYXRvcjxfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzI8X19hc2FuOjpBUDMyPF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXc+PiwgX19zYW5pdGl6ZXI6OkxhcmdlTW1hcEFsbG9jYXRvclB0ckFycmF5U3RhdGljPjo6R2V0QWN0dWFsbHlBbGxvY2F0ZWRTaXplKHZvaWQqKeUKsAFfX3Nhbml0aXplcjo6TGFyZ2VNbWFwQWxsb2NhdG9yPF9fYXNhbjo6QXNhbk1hcFVubWFwQ2FsbGJhY2ssIF9fc2FuaXRpemVyOjpMYXJnZU1tYXBBbGxvY2F0b3JQdHJBcnJheVN0YXRpYywgX19zYW5pdGl6ZXI6OkxvY2FsQWRkcmVzc1NwYWNlVmlldz46OkdldEJsb2NrQmVnaW5GYXN0TG9ja2VkKHZvaWQqKeYKI19fbHNhbjo6R2V0VXNlckJlZ2luKHVuc2lnbmVkIGxvbmcp5woxX19sc2FuOjpMc2FuTWV0YWRhdGE6OkxzYW5NZXRhZGF0YSh1bnNpZ25lZCBsb25nKegKJ19fbHNhbjo6THNhbk1ldGFkYXRhOjphbGxvY2F0ZWQoKSBjb25zdOkKIV9fbHNhbjo6THNhbk1ldGFkYXRhOjp0YWcoKSBjb25zdOoKL19fbHNhbjo6THNhbk1ldGFkYXRhOjpzZXRfdGFnKF9fbHNhbjo6Q2h1bmtUYWcp6wo7X19sc2FuOjpGb3JFYWNoQ2h1bmsodm9pZCAoKikodW5zaWduZWQgbG9uZywgdm9pZCopLCB2b2lkKinsClVfX3Nhbml0aXplcjo6SW50ZXJuYWxNbWFwVmVjdG9yTm9DdG9yPHVuc2lnbmVkIGxvbmc+OjpwdXNoX2JhY2sodW5zaWduZWQgbG9uZyBjb25zdCYp7QpMX19zYW5pdGl6ZXI6OkludGVybmFsTW1hcFZlY3Rvck5vQ3Rvcjx1bnNpZ25lZCBsb25nPjo6UmVhbGxvYyh1bnNpZ25lZCBsb25nKe4KN19fYXNhbjo6UXVhcmFudGluZUNhbGxiYWNrOjpSZWN5Y2xlKF9fYXNhbjo6QXNhbkNodW5rKinvCvgBX19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyTG9jYWxDYWNoZTxfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzI8X19hc2FuOjpBUDMyPF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXc+Pj46OkRlYWxsb2NhdGUoX19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyPF9fYXNhbjo6QVAzMjxfX3Nhbml0aXplcjo6TG9jYWxBZGRyZXNzU3BhY2VWaWV3Pj4qLCB1bnNpZ25lZCBsb25nLCB2b2lkKinwCsEBX19zYW5pdGl6ZXI6OkxhcmdlTW1hcEFsbG9jYXRvcjxfX2FzYW46OkFzYW5NYXBVbm1hcENhbGxiYWNrLCBfX3Nhbml0aXplcjo6TGFyZ2VNbWFwQWxsb2NhdG9yUHRyQXJyYXlTdGF0aWMsIF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXc+OjpEZWFsbG9jYXRlKF9fc2FuaXRpemVyOjpBbGxvY2F0b3JTdGF0cyosIHZvaWQqKfEK9gFfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzI8X19hc2FuOjpBUDMyPF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXc+Pjo6RGVhbGxvY2F0ZUJhdGNoKF9fc2FuaXRpemVyOjpBbGxvY2F0b3JTdGF0cyosIHVuc2lnbmVkIGxvbmcsIF9fc2FuaXRpemVyOjpTaXplQ2xhc3NBbGxvY2F0b3IzMjxfX2FzYW46OkFQMzI8X19zYW5pdGl6ZXI6OkxvY2FsQWRkcmVzc1NwYWNlVmlldz4+OjpUcmFuc2ZlckJhdGNoKinyCvoCX19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyTG9jYWxDYWNoZTxfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzI8X19hc2FuOjpBUDMyPF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXc+Pj46OlJlZmlsbChfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzJMb2NhbENhY2hlPF9fc2FuaXRpemVyOjpTaXplQ2xhc3NBbGxvY2F0b3IzMjxfX2FzYW46OkFQMzI8X19zYW5pdGl6ZXI6OkxvY2FsQWRkcmVzc1NwYWNlVmlldz4+Pjo6UGVyQ2xhc3MqLCBfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzI8X19hc2FuOjpBUDMyPF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXc+PiosIHVuc2lnbmVkIGxvbmcp8wpzX19zYW5pdGl6ZXI6OlF1YXJhbnRpbmVDYWNoZTxfX2FzYW46OlF1YXJhbnRpbmVDYWxsYmFjaz46OkVucXVldWUoX19hc2FuOjpRdWFyYW50aW5lQ2FsbGJhY2ssIHZvaWQqLCB1bnNpZ25lZCBsb25nKfQKVF9fc2FuaXRpemVyOjpJbnRlcm5hbE1tYXBWZWN0b3JOb0N0b3I8X19hc2FuOjpTdGFja1ZhckRlc2NyPjo6UmVhbGxvYyh1bnNpZ25lZCBsb25nKfUKTF9fYXNhbjo6QXNhblRocmVhZElkQW5kTmFtZTo6QXNhblRocmVhZElkQW5kTmFtZShfX2FzYW46OkFzYW5UaHJlYWRDb250ZXh0Kin2Cj5fX2FzYW46OkFzYW5UaHJlYWRJZEFuZE5hbWU6OkFzYW5UaHJlYWRJZEFuZE5hbWUodW5zaWduZWQgaW50KfcKMl9fYXNhbjo6RGVzY3JpYmVUaHJlYWQoX19hc2FuOjpBc2FuVGhyZWFkQ29udGV4dCop+ApDX19zYW5pdGl6ZXI6OkludGVybmFsTW1hcFZlY3Rvck5vQ3RvcjxjaGFyPjo6UmVhbGxvYyh1bnNpZ25lZCBsb25nKfkKYF9fYXNhbjo6R2V0SGVhcEFkZHJlc3NJbmZvcm1hdGlvbih1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBfX2FzYW46OkhlYXBBZGRyZXNzRGVzY3JpcHRpb24qKfoKLV9fYXNhbjo6SGVhcEFkZHJlc3NEZXNjcmlwdGlvbjo6UHJpbnQoKSBjb25zdPsKLl9fYXNhbjo6U3RhY2tBZGRyZXNzRGVzY3JpcHRpb246OlByaW50KCkgY29uc3T8CjpfX2FzYW46Okdsb2JhbEFkZHJlc3NEZXNjcmlwdGlvbjo6UHJpbnQoY2hhciBjb25zdCopIGNvbnN0/QpSX19hc2FuOjpBZGRyZXNzRGVzY3JpcHRpb246OkFkZHJlc3NEZXNjcmlwdGlvbih1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBib29sKf4KZ19fYXNhbjo6T25TdGFja1Vud2luZChfX3Nhbml0aXplcjo6U2lnbmFsQ29udGV4dCBjb25zdCYsIHZvaWQgY29uc3QqLCBfX3Nhbml0aXplcjo6QnVmZmVyZWRTdGFja1RyYWNlKin/CjRfX2FzYW46OkFkZHJlc3NEZXNjcmlwdGlvbjo6UHJpbnQoY2hhciBjb25zdCopIGNvbnN0gAtTX19hc2FuOjpGYWtlU3RhY2s6OkFkZHJJc0luRmFrZVN0YWNrKHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcqLCB1bnNpZ25lZCBsb25nKimBC0hfX2FzYW46OkZha2VTdGFjazo6QWxsb2NhdGUodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZymCCyRfX2FzYW46OkZha2VTdGFjazo6R0ModW5zaWduZWQgbG9uZymDCxVfX2FzYW5fc3RhY2tfbWFsbG9jXzCECxVfX2FzYW5fc3RhY2tfbWFsbG9jXzGFCxVfX2FzYW5fc3RhY2tfbWFsbG9jXzKGCxVfX2FzYW5fc3RhY2tfbWFsbG9jXzOHCxVfX2FzYW5fc3RhY2tfbWFsbG9jXzSICxVfX2FzYW5fc3RhY2tfbWFsbG9jXzWJCxNfX2FzYW5fc3RhY2tfZnJlZV81igtPX19hc2FuOjpHZXRHbG9iYWxzRm9yQWRkcmVzcyh1bnNpZ25lZCBsb25nLCBfX2FzYW5fZ2xvYmFsKiwgdW5zaWduZWQgaW50KiwgaW50KYsLN19fYXNhbjo6UmVwb3J0R2xvYmFsKF9fYXNhbl9nbG9iYWwgY29uc3QmLCBjaGFyIGNvbnN0KimMCyxfX2FzYW46Ok1heWJlRGVtYW5nbGVHbG9iYWxOYW1lKGNoYXIgY29uc3QqKY0LVV9fYXNhbjo6UHJpbnRHbG9iYWxMb2NhdGlvbihfX3Nhbml0aXplcjo6SW50ZXJuYWxTY29wZWRTdHJpbmcqLCBfX2FzYW5fZ2xvYmFsIGNvbnN0JimOCxdfX2FzYW5fcmVnaXN0ZXJfZ2xvYmFsc48LXV9fc2FuaXRpemVyOjpJbnRlcm5hbE1tYXBWZWN0b3JOb0N0b3I8X19hc2FuOjpHbG9iYWxSZWdpc3RyYXRpb25TaXRlPjo6UmVhbGxvYyh1bnNpZ25lZCBsb25nKZALd19fc2FuaXRpemVyOjpJbnRlcm5hbE1tYXBWZWN0b3JOb0N0b3I8X19hc2FuOjpHbG9iYWxSZWdpc3RyYXRpb25TaXRlPjo6cHVzaF9iYWNrKF9fYXNhbjo6R2xvYmFsUmVnaXN0cmF0aW9uU2l0ZSBjb25zdCYpkQtUX19zYW5pdGl6ZXI6OkludGVybmFsTW1hcFZlY3Rvck5vQ3RvcjxfX2FzYW46OkR5bkluaXRHbG9iYWw+OjpSZWFsbG9jKHVuc2lnbmVkIGxvbmcpkgsZX19hc2FuX3VucmVnaXN0ZXJfZ2xvYmFsc5MLGl9fYXNhbl9iZWZvcmVfZHluYW1pY19pbml0lAsZX19hc2FuX2FmdGVyX2R5bmFtaWNfaW5pdJULDV9fYXNhbl9tZW1jcHmWC0NfX2FzYW46OlF1aWNrQ2hlY2tGb3JVbnBvaXNvbmVkUmVnaW9uKHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcplwsNX19hc2FuX21lbXNldJgLDl9fYXNhbl9tZW1tb3ZlmQsEZnJlZZoLBm1hbGxvY5sLQF9fc2FuaXRpemVyOjpEbFN5bUFsbG9jYXRvcjxEbHN5bUFsbG9jPjo6QWxsb2NhdGUodW5zaWduZWQgbG9uZymcCwZjYWxsb2OdCwdyZWFsbG9jngsIbWVtYWxpZ26fCyBfX2FzYW46OlNldENhblBvaXNvbk1lbW9yeShib29sKaALGV9fYXNhbjo6Q2FuUG9pc29uTWVtb3J5KCmhC0FfX2FzYW46OlBvaXNvblNoYWRvdyh1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBjaGFyKaILGV9fYXNhbl9yZWdpb25faXNfcG9pc29uZWSjCxRfX2FzYW5fc2V0X3NoYWRvd18wMKQLFF9fYXNhbl9zZXRfc2hhZG93X2Y1pQsUX19hc2FuX3NldF9zaGFkb3dfZjimCxRfX2FzYW46OkFzYW5UU0RHZXQoKacLHl9fYXNhbjo6UGxhdGZvcm1UU0REdG9yKHZvaWQqKagLL19fYXNhbjo6QXBwZW5kVG9FcnJvck1lc3NhZ2VCdWZmZXIoY2hhciBjb25zdCopqQtqX19hc2FuOjpQcmludE1lbW9yeUJ5dGUoX19zYW5pdGl6ZXI6OkludGVybmFsU2NvcGVkU3RyaW5nKiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGNoYXIsIGJvb2wsIGNoYXIgY29uc3QqKaoLZV9fc2FuaXRpemVyOjpJbnRlcm5hbE1tYXBWZWN0b3JOb0N0b3I8X19hc2FuOjpTdGFja1ZhckRlc2NyPjo6cHVzaF9iYWNrKF9fYXNhbjo6U3RhY2tWYXJEZXNjciBjb25zdCYpqwszX19hc2FuOjpTY29wZWRJbkVycm9yUmVwb3J0Ojp+U2NvcGVkSW5FcnJvclJlcG9ydCgprAtJX19hc2FuOjpSZXBvcnREb3VibGVGcmVlKHVuc2lnbmVkIGxvbmcsIF9fc2FuaXRpemVyOjpCdWZmZXJlZFN0YWNrVHJhY2UqKa0LTl9fYXNhbjo6UmVwb3J0RnJlZU5vdE1hbGxvY2VkKHVuc2lnbmVkIGxvbmcsIF9fc2FuaXRpemVyOjpCdWZmZXJlZFN0YWNrVHJhY2UqKa4LSl9fYXNhbjo6UmVwb3J0T3V0T2ZNZW1vcnkodW5zaWduZWQgbG9uZywgX19zYW5pdGl6ZXI6OkJ1ZmZlcmVkU3RhY2tUcmFjZSoprwtoX19hc2FuOjpSZXBvcnRTdHJpbmdGdW5jdGlvblNpemVPdmVyZmxvdyh1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBfX3Nhbml0aXplcjo6QnVmZmVyZWRTdGFja1RyYWNlKimwC2JfX2FzYW46OlJlcG9ydE9EUlZpb2xhdGlvbihfX2FzYW5fZ2xvYmFsIGNvbnN0KiwgdW5zaWduZWQgaW50LCBfX2FzYW5fZ2xvYmFsIGNvbnN0KiwgdW5zaWduZWQgaW50KbELf19fYXNhbjo6UmVwb3J0R2VuZXJpY0Vycm9yKHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcsIGJvb2wsIHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGludCwgYm9vbCmyCxNfX2FzYW5fcmVwb3J0X2xvYWQxswsTX19hc2FuX3JlcG9ydF9sb2FkMrQLE19fYXNhbl9yZXBvcnRfbG9hZDS1CxNfX2FzYW5fcmVwb3J0X2xvYWQ4tgsUX19hc2FuX3JlcG9ydF9sb2FkMTa3CxRfX2FzYW5fcmVwb3J0X3N0b3JlMbgLFF9fYXNhbl9yZXBvcnRfc3RvcmUyuQsUX19hc2FuX3JlcG9ydF9zdG9yZTS6CxRfX2FzYW5fcmVwb3J0X3N0b3JlOLsLFV9fYXNhbl9yZXBvcnRfc3RvcmUxNrwLGl9fYXNhbjo6QXNhbkluaXRJbnRlcm5hbCgpvQsRX19hc2FuOjpBc2FuRGllKCm+CxVfX2FzYW46OkNoZWNrVW53aW5kKCm/CzhfX2FzYW46Ok9uTG93TGV2ZWxBbGxvY2F0ZSh1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nKcALFV9fYXNhbjo6YXNhbl9hdGV4aXQoKcELF19fYXNhbl9oYW5kbGVfbm9fcmV0dXJuwgsLX19hc2FuX2luaXTDCypfX2FzYW46OlNldE1hbGxvY0NvbnRleHRTaXplKHVuc2lnbmVkIGludCnEC2RfX3Nhbml0aXplcjo6QnVmZmVyZWRTdGFja1RyYWNlOjpVbndpbmRJbXBsKHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGxvbmcsIHZvaWQqLCBib29sLCB1bnNpZ25lZCBpbnQpxQtAX19hc2FuOjpNZXJnZVRocmVhZFN0YXRzKF9fc2FuaXRpemVyOjpUaHJlYWRDb250ZXh0QmFzZSosIHZvaWQqKcYLH19fYXNhbjo6R2V0Q3VycmVudFRocmVhZFN0YXRzKCnHCx5fX2FzYW5fcHJpbnRfYWNjdW11bGF0ZWRfc3RhdHPICy1fX2FzYW46OklzT0RSVmlvbGF0aW9uU3VwcHJlc3NlZChjaGFyIGNvbnN0KinJCytfX2FzYW46OkFzYW5UaHJlYWRDb250ZXh0OjpPbkNyZWF0ZWQodm9pZCopygsnX19hc2FuOjpBc2FuVGhyZWFkQ29udGV4dDo6T25GaW5pc2hlZCgpywscX19hc2FuOjphc2FuVGhyZWFkUmVnaXN0cnkoKcwLKl9fYXNhbjo6R2V0QXNhblRocmVhZENvbnRleHQodW5zaWduZWQgaW50Kc0LMV9fYXNhbjo6R2V0VGhyZWFkQ29udGV4dEJ5VGlkTG9ja2VkKHVuc2lnbmVkIGludCnOCxpfX2FzYW46OkdldEN1cnJlbnRUaHJlYWQoKc8LH19fYXNhbjo6QXNhblRocmVhZDo6c3RhY2tfdG9wKCnQCzZfX2FzYW46OkFzYW5UaHJlYWQ6OkFzeW5jU2lnbmFsU2FmZUxhenlJbml0RmFrZVN0YWNrKCnRCyBfX2FzYW46OkdldEN1cnJlbnRUaWRPckludmFsaWQoKdILY19fYXNhbjo6QXNhblRocmVhZDo6R2V0U3RhY2tGcmFtZUFjY2Vzc0J5QWRkcih1bnNpZ25lZCBsb25nLCBfX2FzYW46OkFzYW5UaHJlYWQ6OlN0YWNrRnJhbWVBY2Nlc3MqKdMLL19fYXNhbjo6RmluZFRocmVhZEJ5U3RhY2tBZGRyZXNzKHVuc2lnbmVkIGxvbmcp1AtKX19hc2FuOjpUaHJlYWRTdGFja0NvbnRhaW5zQWRkcmVzcyhfX3Nhbml0aXplcjo6VGhyZWFkQ29udGV4dEJhc2UqLCB2b2lkKinVCyVfX2xzYW46OkVuc3VyZU1haW5UaHJlYWRJRElzQ29ycmVjdCgp1guKAV9fbHNhbjo6U2NhblJhbmdlRm9yUG9pbnRlcnModW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgX19zYW5pdGl6ZXI6OkludGVybmFsTW1hcFZlY3Rvcjx1bnNpZ25lZCBsb25nPiosIGNoYXIgY29uc3QqLCBfX2xzYW46OkNodW5rVGFnKdcLFV9fbHNhbjo6RG9MZWFrQ2hlY2soKdgLF19fbHNhbjo6Q2hlY2tGb3JMZWFrcygp2QtOX19sc2FuOjpDaGVja0ZvckxlYWtzQ2FsbGJhY2soX19zYW5pdGl6ZXI6OlN1c3BlbmRlZFRocmVhZHNMaXN0IGNvbnN0Jiwgdm9pZCop2gspX19sc2FuOjpQcmludFJlc3VsdHMoX19sc2FuOjpMZWFrUmVwb3J0JinbC80Bdm9pZCBfX3Nhbml0aXplcjo6U29ydEFuZERlZHVwPF9fc2FuaXRpemVyOjpJbnRlcm5hbE1tYXBWZWN0b3I8dW5zaWduZWQgaW50PiwgX19zYW5pdGl6ZXI6OkNvbXBhcmVMZXNzPHVuc2lnbmVkIGludD4+KF9fc2FuaXRpemVyOjpJbnRlcm5hbE1tYXBWZWN0b3I8dW5zaWduZWQgaW50PiYsIF9fc2FuaXRpemVyOjpDb21wYXJlTGVzczx1bnNpZ25lZCBpbnQ+KdwLJF9fbHNhbjo6RG9SZWNvdmVyYWJsZUxlYWtDaGVja1ZvaWQoKd0LFF9fbHNhbl9pZ25vcmVfb2JqZWN03gsbX19sc2FuX3JlZ2lzdGVyX3Jvb3RfcmVnaW9u3wtfX19zYW5pdGl6ZXI6OkludGVybmFsTW1hcFZlY3Rvck5vQ3RvcjxfX2xzYW46OlJvb3RSZWdpb24+OjpwdXNoX2JhY2soX19sc2FuOjpSb290UmVnaW9uIGNvbnN0JingCx1fX2xzYW5fdW5yZWdpc3Rlcl9yb290X3JlZ2lvbuELMV9fbHNhbjo6SWdub3JlZFN1cHByZXNzZWRDYih1bnNpZ25lZCBsb25nLCB2b2lkKiniCy5fX2xzYW46OkNvbGxlY3RJZ25vcmVkQ2IodW5zaWduZWQgbG9uZywgdm9pZCop4ws0X19sc2FuOjpNYXJrSW5kaXJlY3RseUxlYWtlZENiKHVuc2lnbmVkIGxvbmcsIHZvaWQqKeQLLF9fbHNhbjo6Q29sbGVjdExlYWtzQ2IodW5zaWduZWQgbG9uZywgdm9pZCop5QspX19sc2FuOjpSZXNldFRhZ3NDYih1bnNpZ25lZCBsb25nLCB2b2lkKinmC2FfX3Nhbml0aXplcjo6SW50ZXJuYWxNbWFwVmVjdG9yTm9DdG9yPF9fbHNhbjo6TGVha2VkQ2h1bms+OjpwdXNoX2JhY2soX19sc2FuOjpMZWFrZWRDaHVuayBjb25zdCYp5wt4X19sc2FuOjpMb2NrU3R1ZmZBbmRTdG9wVGhlV29ybGQodm9pZCAoKikoX19zYW5pdGl6ZXI6OlN1c3BlbmRlZFRocmVhZHNMaXN0IGNvbnN0Jiwgdm9pZCopLCBfX2xzYW46OkNoZWNrRm9yTGVha3NQYXJhbSop6AtGX19sc2FuOjpQcm9jZXNzVGhyZWFkc0NhbGxiYWNrKF9fc2FuaXRpemVyOjpUaHJlYWRDb250ZXh0QmFzZSosIHZvaWQqKekLIV9fc2FuaXRpemVyOjppbnRlcm5hbF9hbGxvY2F0b3IoKeoLnAFfX3Nhbml0aXplcjo6SW50ZXJuYWxBbGxvYyh1bnNpZ25lZCBsb25nLCBfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzJMb2NhbENhY2hlPF9fc2FuaXRpemVyOjpTaXplQ2xhc3NBbGxvY2F0b3IzMjxfX3Nhbml0aXplcjo6QVAzMj4+KiwgdW5zaWduZWQgbG9uZynrC4QBX19zYW5pdGl6ZXI6OkludGVybmFsRnJlZSh2b2lkKiwgX19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyTG9jYWxDYWNoZTxfX3Nhbml0aXplcjo6U2l6ZUNsYXNzQWxsb2NhdG9yMzI8X19zYW5pdGl6ZXI6OkFQMzI+Piop7Au6AV9fc2FuaXRpemVyOjpTaXplQ2xhc3NBbGxvY2F0b3IzMkxvY2FsQ2FjaGU8X19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyPF9fc2FuaXRpemVyOjpBUDMyPj46OkRlYWxsb2NhdGUoX19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyPF9fc2FuaXRpemVyOjpBUDMyPiosIHVuc2lnbmVkIGxvbmcsIHZvaWQqKe0LN19fc2FuaXRpemVyOjpMb3dMZXZlbEFsbG9jYXRvcjo6QWxsb2NhdGUodW5zaWduZWQgbG9uZynuCyVfX3Nhbml0aXplcjo6QWxsb2NhdG9yTWF5UmV0dXJuTnVsbCgp7wssX19zYW5pdGl6ZXI6OlNldEFsbG9jYXRvck1heVJldHVybk51bGwoYm9vbCnwCzFfX3Nhbml0aXplcjo6UHJpbnRIaW50QWxsb2NhdG9yQ2Fubm90UmV0dXJuTnVsbCgp8QuxAV9fc2FuaXRpemVyOjpTaXplQ2xhc3NBbGxvY2F0b3IzMkxvY2FsQ2FjaGU8X19zYW5pdGl6ZXI6OlNpemVDbGFzc0FsbG9jYXRvcjMyPF9fc2FuaXRpemVyOjpBUDMyPj46OkFsbG9jYXRlKF9fc2FuaXRpemVyOjpTaXplQ2xhc3NBbGxvY2F0b3IzMjxfX3Nhbml0aXplcjo6QVAzMj4qLCB1bnNpZ25lZCBsb25nKfILH19fc2FuaXRpemVyOjpTZXRFcnJub1RvRU5PTUVNKCnzC1hfX3Nhbml0aXplcjo6UmVwb3J0TW1hcEZhaWx1cmVBbmREaWUodW5zaWduZWQgbG9uZywgY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCBpbnQsIGJvb2wp9As2X19zYW5pdGl6ZXI6OlN0cmlwUGF0aFByZWZpeChjaGFyIGNvbnN0KiwgY2hhciBjb25zdCop9QspX19zYW5pdGl6ZXI6OlN0cmlwTW9kdWxlTmFtZShjaGFyIGNvbnN0Kin2CzlfX3Nhbml0aXplcjo6UmVwb3J0RXJyb3JTdW1tYXJ5KGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0Kin3CzpfX3Nhbml0aXplcjo6TG9hZGVkTW9kdWxlOjpzZXQoY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcp+AsiX19zYW5pdGl6ZXI6OkxvYWRlZE1vZHVsZTo6Y2xlYXIoKfkLYV9fc2FuaXRpemVyOjpMb2FkZWRNb2R1bGU6OmFkZEFkZHJlc3NSYW5nZSh1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCBib29sLCBib29sLCBjaGFyIGNvbnN0Kin6Cz9fX3Nhbml0aXplcjo6TG9hZGVkTW9kdWxlOjpjb250YWluc0FkZHJlc3ModW5zaWduZWQgbG9uZykgY29uc3T7Cy1fX3Nhbml0aXplcjo6SW5jcmVhc2VUb3RhbE1tYXAodW5zaWduZWQgbG9uZyn8CzdfX3Nhbml0aXplcjo6UmVhZEJpbmFyeU5hbWVDYWNoZWQoY2hhciosIHVuc2lnbmVkIGxvbmcp/Qs3X19zYW5pdGl6ZXI6OldhaXRGb3JEZWJ1Z2dlcih1bnNpZ25lZCBpbnQsIGNoYXIgY29uc3QqKf4LFF9fc2FuaXRpemVyX2Nvdl9kdW1w/wttX19zYW5jb3Y6Oihhbm9ueW1vdXMgbmFtZXNwYWNlKTo6V3JpdGVNb2R1bGVDb3ZlcmFnZShjaGFyKiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcgY29uc3QqLCB1bnNpZ25lZCBsb25nKYAMEi5MY2FsbF9kdG9ycy41MC40MIEMEF9fc3lzY2FsbF9tdW5tYXCCDBIuTGNhbGxfZHRvcnMuNTAuNDGDDBVlbXNjcmlwdGVuX3N0YWNrX2luaXSEDBllbXNjcmlwdGVuX3N0YWNrX2dldF9mcmVlhQwZZW1zY3JpcHRlbl9zdGFja19nZXRfYmFzZYYMGGVtc2NyaXB0ZW5fc3RhY2tfZ2V0X2VuZIcMIl9fc2FuaXRpemVyOjpMaXN0T2ZNb2R1bGVzOjppbml0KCmIDFhfX3Nhbml0aXplcjo6SW50ZXJuYWxNbWFwVmVjdG9yTm9DdG9yPF9fc2FuaXRpemVyOjpMb2FkZWRNb2R1bGU+OjpSZWFsbG9jKHVuc2lnbmVkIGxvbmcpiQxtX19zYW5pdGl6ZXI6OkludGVybmFsTW1hcFZlY3Rvck5vQ3RvcjxfX3Nhbml0aXplcjo6TG9hZGVkTW9kdWxlPjo6cHVzaF9iYWNrKF9fc2FuaXRpemVyOjpMb2FkZWRNb2R1bGUgY29uc3QmKYoMKl9fc2FuaXRpemVyOjpMaXN0T2ZNb2R1bGVzOjpmYWxsYmFja0luaXQoKYsMU19fc2FuaXRpemVyOjppbnRlcm5hbF9tbWFwKHZvaWQqLCB1bnNpZ25lZCBsb25nLCBpbnQsIGludCwgaW50LCB1bnNpZ25lZCBsb25nIGxvbmcpjAxnX19zYW5pdGl6ZXI6OkdldFRocmVhZFN0YWNrQW5kVGxzKGJvb2wsIHVuc2lnbmVkIGxvbmcqLCB1bnNpZ25lZCBsb25nKiwgdW5zaWduZWQgbG9uZyosIHVuc2lnbmVkIGxvbmcqKY0MIF9fc2FuaXRpemVyOjpNb25vdG9uaWNOYW5vVGltZSgpjgyKAV9fc2FuaXRpemVyOjpTdXNwZW5kZWRUaHJlYWRzTGlzdDo6R2V0UmVnaXN0ZXJzQW5kU1AodW5zaWduZWQgbG9uZywgX19zYW5pdGl6ZXI6OkludGVybmFsTW1hcFZlY3Rvcjx1bnNpZ25lZCBsb25nPiosIHVuc2lnbmVkIGxvbmcqKSBjb25zdI8MNl9fc2FuaXRpemVyOjpTdXNwZW5kZWRUaHJlYWRzTGlzdDo6VGhyZWFkQ291bnQoKSBjb25zdJAMQ19fc2FuaXRpemVyOjpTdXNwZW5kZWRUaHJlYWRzTGlzdDo6R2V0VGhyZWFkSUQodW5zaWduZWQgbG9uZykgY29uc3SRDD9fX3Nhbml0aXplcjo6Q2F0YXN0cm9waGljRXJyb3JXcml0ZShjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZymSDCJfX3Nhbml0aXplcjo6UmF3V3JpdGUoY2hhciBjb25zdCopkwxnX19zYW5pdGl6ZXI6OlJlYWRGaWxlVG9CdWZmZXIoY2hhciBjb25zdCosIGNoYXIqKiwgdW5zaWduZWQgbG9uZyosIHVuc2lnbmVkIGxvbmcqLCB1bnNpZ25lZCBsb25nLCBpbnQqKZQMJl9fc2FuaXRpemVyOjpSZXBvcnRVbnJlY29nbml6ZWRGbGFncygplQwwX19zYW5pdGl6ZXI6OkZsYWdQYXJzZXI6OlByaW50RmxhZ0Rlc2NyaXB0aW9ucygplgwnX19zYW5pdGl6ZXI6OkZsYWdQYXJzZXI6OmlzX3NwYWNlKGNoYXIplwwwX19zYW5pdGl6ZXI6OkZsYWdQYXJzZXI6OnBhcnNlX2ZsYWcoY2hhciBjb25zdCopmAw+X19zYW5pdGl6ZXI6OkZsYWdQYXJzZXI6OlBhcnNlU3RyaW5nKGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KimZDDVfX3Nhbml0aXplcjo6RmxhZ1BhcnNlcjo6UGFyc2VGaWxlKGNoYXIgY29uc3QqLCBib29sKZoMYV9fc2FuaXRpemVyOjpGbGFnUGFyc2VyOjpSZWdpc3RlckhhbmRsZXIoY2hhciBjb25zdCosIF9fc2FuaXRpemVyOjpGbGFnSGFuZGxlckJhc2UqLCBjaGFyIGNvbnN0KimbDCVfX3Nhbml0aXplcjo6RmxhZ1BhcnNlcjo6RmxhZ1BhcnNlcigpnAwnX19zYW5pdGl6ZXI6OkNvbW1vbkZsYWdzOjpTZXREZWZhdWx0cygpnQxDX19zYW5pdGl6ZXI6OkNvbW1vbkZsYWdzOjpDb3B5RnJvbShfX3Nhbml0aXplcjo6Q29tbW9uRmxhZ3MgY29uc3QmKZ4MVV9fc2FuaXRpemVyOjpSZWdpc3RlckNvbW1vbkZsYWdzKF9fc2FuaXRpemVyOjpGbGFnUGFyc2VyKiwgX19zYW5pdGl6ZXI6OkNvbW1vbkZsYWdzKimfDD1fX3Nhbml0aXplcjo6SW5pdGlhbGl6ZUNvbW1vbkZsYWdzKF9fc2FuaXRpemVyOjpDb21tb25GbGFncyopoAwzX19zYW5pdGl6ZXI6OkZsYWdIYW5kbGVySW5jbHVkZTo6UGFyc2UoY2hhciBjb25zdCopoQw9X19zYW5pdGl6ZXI6OkZsYWdIYW5kbGVySW5jbHVkZTo6Rm9ybWF0KGNoYXIqLCB1bnNpZ25lZCBsb25nKaIMS19fc2FuaXRpemVyOjpGbGFnSGFuZGxlcjxfX3Nhbml0aXplcjo6SGFuZGxlU2lnbmFsTW9kZT46OlBhcnNlKGNoYXIgY29uc3QqKaMMO19fc2FuaXRpemVyOjpGbGFnSGFuZGxlcjx1bnNpZ25lZCBsb25nPjo6UGFyc2UoY2hhciBjb25zdCoppAxFX19zYW5pdGl6ZXI6OkZsYWdIYW5kbGVyPHVuc2lnbmVkIGxvbmc+OjpGb3JtYXQoY2hhciosIHVuc2lnbmVkIGxvbmcppQxEX19zYW5pdGl6ZXI6OmludGVybmFsX3NpbXBsZV9zdHJ0b2xsKGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiosIGludCmmDD9fX3Nhbml0aXplcjo6aW50ZXJuYWxfbWVtY3B5KHZvaWQqLCB2b2lkIGNvbnN0KiwgdW5zaWduZWQgbG9uZymnDEBfX3Nhbml0aXplcjo6aW50ZXJuYWxfbWVtbW92ZSh2b2lkKiwgdm9pZCBjb25zdCosIHVuc2lnbmVkIGxvbmcpqAw3X19zYW5pdGl6ZXI6OmludGVybmFsX21lbXNldCh2b2lkKiwgaW50LCB1bnNpZ25lZCBsb25nKakMLl9fc2FuaXRpemVyOjppbnRlcm5hbF9zdHJjaHIoY2hhciBjb25zdCosIGludCmqDClfX3Nhbml0aXplcjo6aW50ZXJuYWxfc3RyZHVwKGNoYXIgY29uc3QqKasMKV9fc2FuaXRpemVyOjppbnRlcm5hbF9zdHJsZW4oY2hhciBjb25zdCoprAw2X19zYW5pdGl6ZXI6OmludGVybmFsX3N0cmNtcChjaGFyIGNvbnN0KiwgY2hhciBjb25zdCoprQxGX19zYW5pdGl6ZXI6OmludGVybmFsX3N0cm5jbXAoY2hhciBjb25zdCosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKa4ML19fc2FuaXRpemVyOjppbnRlcm5hbF9zdHJyY2hyKGNoYXIgY29uc3QqLCBpbnQprwxAX19zYW5pdGl6ZXI6OmludGVybmFsX3N0cmxjYXQoY2hhciosIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKbAMOV9fc2FuaXRpemVyOjppbnRlcm5hbF9zdHJubGVuKGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKbEMQF9fc2FuaXRpemVyOjppbnRlcm5hbF9zdHJuY2F0KGNoYXIqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZymyDEBfX3Nhbml0aXplcjo6aW50ZXJuYWxfc3RybmNweShjaGFyKiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcpsww2X19zYW5pdGl6ZXI6OmludGVybmFsX3N0cnN0cihjaGFyIGNvbnN0KiwgY2hhciBjb25zdCoptAwGdXNsZWVwtQwyX19zYW5pdGl6ZXI6OmludGVybmFsX2lzZXJyb3IodW5zaWduZWQgbG9uZywgaW50Kim2DCBfX3Nhbml0aXplcjo6aW50ZXJuYWxfY2xvc2UoaW50KbcMPF9fc2FuaXRpemVyOjppbnRlcm5hbF93cml0ZShpbnQsIHZvaWQgY29uc3QqLCB1bnNpZ25lZCBsb25nKbgMMF9fc2FuaXRpemVyOjppbnRlcm5hbF91c2xlZXAodW5zaWduZWQgbG9uZyBsb25nKbkMIF9fc2FuaXRpemVyOjppbnRlcm5hbF9fZXhpdChpbnQpugwxX19zYW5pdGl6ZXI6OlJlYWRCaW5hcnlOYW1lKGNoYXIqLCB1bnNpZ25lZCBsb25nKbsMKF9fc2FuaXRpemVyOjpTdGF0aWNTcGluTXV0ZXg6OkxvY2tTbG93KCm8DB5fX3Nhbml0aXplcjo6U2VtYXBob3JlOjpXYWl0KCm9DCpfX3Nhbml0aXplcjo6U2VtYXBob3JlOjpQb3N0KHVuc2lnbmVkIGludCm+DDhfX3Nhbml0aXplcjo6TW1hcE9yRGllKHVuc2lnbmVkIGxvbmcsIGNoYXIgY29uc3QqLCBib29sKb8MLV9fc2FuaXRpemVyOjpVbm1hcE9yRGllKHZvaWQqLCB1bnNpZ25lZCBsb25nKcAMPl9fc2FuaXRpemVyOjpNbWFwT3JEaWVPbkZhdGFsRXJyb3IodW5zaWduZWQgbG9uZywgY2hhciBjb25zdCopwQxUX19zYW5pdGl6ZXI6Ok1tYXBBbGlnbmVkT3JEaWVPbkZhdGFsRXJyb3IodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgY2hhciBjb25zdCopwgw7X19zYW5pdGl6ZXI6Ok1tYXBOb1Jlc2VydmVPckRpZSh1bnNpZ25lZCBsb25nLCBjaGFyIGNvbnN0KinDDEVfX3Nhbml0aXplcjo6T3BlbkZpbGUoY2hhciBjb25zdCosIF9fc2FuaXRpemVyOjpGaWxlQWNjZXNzTW9kZSwgaW50KinEDE9fX3Nhbml0aXplcjo6V3JpdGVUb0ZpbGUoaW50LCB2b2lkIGNvbnN0KiwgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZyosIGludCopxQwdX19zYW5pdGl6ZXI6OkR1bXBQcm9jZXNzTWFwKCnGDAlnZXRybGltaXTHDAlzZXRybGltaXTIDAxkb19zZXRybGltaXTJDDZfX3Nhbml0aXplcjo6VlNOUHJpbnRmKGNoYXIqLCBpbnQsIGNoYXIgY29uc3QqLCB2b2lkKinKDHJfX3Nhbml0aXplcjo6QXBwZW5kTnVtYmVyKGNoYXIqKiwgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcgbG9uZywgdW5zaWduZWQgY2hhciwgdW5zaWduZWQgY2hhciwgYm9vbCwgYm9vbCwgYm9vbCnLDCVfX3Nhbml0aXplcjo6UHJpbnRmKGNoYXIgY29uc3QqLCAuLi4pzAw3X19zYW5pdGl6ZXI6OlNoYXJlZFByaW50ZkNvZGUoYm9vbCwgY2hhciBjb25zdCosIHZvaWQqKc0MJV9fc2FuaXRpemVyOjpSZXBvcnQoY2hhciBjb25zdCosIC4uLinODEZfX3Nhbml0aXplcjo6aW50ZXJuYWxfc25wcmludGYoY2hhciosIHVuc2lnbmVkIGxvbmcsIGNoYXIgY29uc3QqLCAuLi4pzww7X19zYW5pdGl6ZXI6OkludGVybmFsU2NvcGVkU3RyaW5nOjphcHBlbmQoY2hhciBjb25zdCosIC4uLinQDIAHYm9vbCBfX3Nhbml0aXplcjo6RGVuc2VNYXBCYXNlPF9fc2FuaXRpemVyOjpEZW5zZU1hcDxfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPiwgdW5zaWduZWQgaW50LCBfX3Nhbml0aXplcjo6RGVuc2VNYXBJbmZvPF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+PiwgX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+LCB1bnNpZ25lZCBpbnQ+PiwgX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPHVuc2lnbmVkIGludCwgdW5zaWduZWQgbG9uZz4sIHVuc2lnbmVkIGludCwgX19zYW5pdGl6ZXI6OkRlbnNlTWFwSW5mbzxfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPj4sIF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjxfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPiwgdW5zaWduZWQgaW50Pj46Okxvb2t1cEJ1Y2tldEZvcjxfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPj4oX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPHVuc2lnbmVkIGludCwgdW5zaWduZWQgbG9uZz4gY29uc3QmLCBfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8X19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPHVuc2lnbmVkIGludCwgdW5zaWduZWQgbG9uZz4sIHVuc2lnbmVkIGludD4gY29uc3QqJikgY29uc3TRDKsIX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+LCB1bnNpZ25lZCBpbnQ+KiBfX3Nhbml0aXplcjo6RGVuc2VNYXBCYXNlPF9fc2FuaXRpemVyOjpEZW5zZU1hcDxfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPiwgdW5zaWduZWQgaW50LCBfX3Nhbml0aXplcjo6RGVuc2VNYXBJbmZvPF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+PiwgX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+LCB1bnNpZ25lZCBpbnQ+PiwgX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPHVuc2lnbmVkIGludCwgdW5zaWduZWQgbG9uZz4sIHVuc2lnbmVkIGludCwgX19zYW5pdGl6ZXI6OkRlbnNlTWFwSW5mbzxfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPj4sIF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjxfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPiwgdW5zaWduZWQgaW50Pj46Okluc2VydEludG9CdWNrZXRJbXBsPF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+PihfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgaW50LCB1bnNpZ25lZCBsb25nPiBjb25zdCYsIF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+IGNvbnN0JiwgX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+LCB1bnNpZ25lZCBpbnQ+KinSDMMCX19zYW5pdGl6ZXI6OkRlbnNlTWFwPF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBpbnQsIHVuc2lnbmVkIGxvbmc+LCB1bnNpZ25lZCBpbnQsIF9fc2FuaXRpemVyOjpEZW5zZU1hcEluZm88X19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPHVuc2lnbmVkIGludCwgdW5zaWduZWQgbG9uZz4+LCBfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8X19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPHVuc2lnbmVkIGludCwgdW5zaWduZWQgbG9uZz4sIHVuc2lnbmVkIGludD4+Ojpncm93KHVuc2lnbmVkIGludCnTDFlfX3Nhbml0aXplcjo6KGFub255bW91cyBuYW1lc3BhY2UpOjpDb21wcmVzc1RocmVhZDo6TmV3V29ya05vdGlmeSgpOjokXzA6Ol9faW52b2tlKHZvaWQqKdQMIV9fc2FuaXRpemVyOjpDb21wcmVzc1N0YWNrU3RvcmUoKdUMUV9fc2FuaXRpemVyOjpTdGFja0RlcG90QmFzZTxfX3Nhbml0aXplcjo6U3RhY2tEZXBvdE5vZGUsIDEsIDIwPjo6R2V0U3RhdHMoKSBjb25zdNYMM19fc2FuaXRpemVyOjpTdGFja0RlcG90UHV0KF9fc2FuaXRpemVyOjpTdGFja1RyYWNlKdcMrQFfX3Nhbml0aXplcjo6VHdvTGV2ZWxNYXA8X19zYW5pdGl6ZXI6OlN0YWNrRGVwb3ROb2RlLCAzMjc2OHVsbCwgNjU1MzZ1bGwsIF9fc2FuaXRpemVyOjpMb2NhbEFkZHJlc3NTcGFjZVZpZXcsIF9fc2FuaXRpemVyOjpOb09wTWFwVW5tYXBDYWxsYmFjaz46OkNyZWF0ZSh1bnNpZ25lZCBsb25nKSBjb25zdNgMKF9fc2FuaXRpemVyOjpTdGFja0RlcG90R2V0KHVuc2lnbmVkIGludCnZDCdfX3Nhbml0aXplcjo6U3RhY2tUcmFjZTo6R2V0Q3VycmVudFBjKCnaDCZfX3Nhbml0aXplcjo6U3RhY2tUcmFjZTo6UHJpbnQoKSBjb25zdNsMWV9fc2FuaXRpemVyOjpHZXRNb2R1bGVBbmRPZmZzZXRGb3JQYyh1bnNpZ25lZCBsb25nLCBjaGFyKiwgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZyop3AyeAV9fc2FuaXRpemVyOjpSZW5kZXJGcmFtZShfX3Nhbml0aXplcjo6SW50ZXJuYWxTY29wZWRTdHJpbmcqLCBjaGFyIGNvbnN0KiwgaW50LCB1bnNpZ25lZCBsb25nLCBfX3Nhbml0aXplcjo6QWRkcmVzc0luZm8gY29uc3QqLCBib29sLCBjaGFyIGNvbnN0KiwgY2hhciBjb25zdCop3QxvX19zYW5pdGl6ZXI6OlJlbmRlclNvdXJjZUxvY2F0aW9uKF9fc2FuaXRpemVyOjpJbnRlcm5hbFNjb3BlZFN0cmluZyosIGNoYXIgY29uc3QqLCBpbnQsIGludCwgYm9vbCwgY2hhciBjb25zdCop3gyHAV9fc2FuaXRpemVyOjpSZW5kZXJNb2R1bGVMb2NhdGlvbihfX3Nhbml0aXplcjo6SW50ZXJuYWxTY29wZWRTdHJpbmcqLCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZywgX19zYW5pdGl6ZXI6Ok1vZHVsZUFyY2gsIGNoYXIgY29uc3QqKd8MRl9fc2FuaXRpemVyOjpTdXBwcmVzc2lvbkNvbnRleHQ6OlN1cHByZXNzaW9uQ29udGV4dChjaGFyIGNvbnN0KiosIGludCngDDtfX3Nhbml0aXplcjo6U3VwcHJlc3Npb25Db250ZXh0OjpQYXJzZUZyb21GaWxlKGNoYXIgY29uc3QqKeEMM19fc2FuaXRpemVyOjpTdXBwcmVzc2lvbkNvbnRleHQ6OlBhcnNlKGNoYXIgY29uc3QqKeIMXF9fc2FuaXRpemVyOjpTdXBwcmVzc2lvbkNvbnRleHQ6Ok1hdGNoKGNoYXIgY29uc3QqLCBjaGFyIGNvbnN0KiwgX19zYW5pdGl6ZXI6OlN1cHByZXNzaW9uKiop4wxGX19zYW5pdGl6ZXI6OlN1cHByZXNzaW9uQ29udGV4dDo6SGFzU3VwcHJlc3Npb25UeXBlKGNoYXIgY29uc3QqKSBjb25zdOQMMF9fc2FuaXRpemVyOjpTeW1ib2xpemVkU3RhY2s6Ok5ldyh1bnNpZ25lZCBsb25nKeUMKF9fc2FuaXRpemVyOjpTeW1ib2xpemVkU3RhY2s6OkNsZWFyQWxsKCnmDCFfX3Nhbml0aXplcjo6RGF0YUluZm86OkRhdGFJbmZvKCnnDFlfX3Nhbml0aXplcjo6U3ltYm9saXplcjo6U3ltYm9saXplclNjb3BlOjpTeW1ib2xpemVyU2NvcGUoX19zYW5pdGl6ZXI6OlN5bWJvbGl6ZXIgY29uc3QqKegMPF9fc2FuaXRpemVyOjpTeW1ib2xpemVyOjpTeW1ib2xpemVyU2NvcGU6On5TeW1ib2xpemVyU2NvcGUoKekMYF9fc2FuaXRpemVyOjpFbXNjcmlwdGVuU3ltYm9saXplclRvb2w6OlN5bWJvbGl6ZVBDKHVuc2lnbmVkIGxvbmcsIF9fc2FuaXRpemVyOjpTeW1ib2xpemVkU3RhY2sqKeoMW19fc2FuaXRpemVyOjpFbXNjcmlwdGVuU3ltYm9saXplclRvb2w6OlN5bWJvbGl6ZURhdGEodW5zaWduZWQgbG9uZywgX19zYW5pdGl6ZXI6OkRhdGFJbmZvKinrDCRfX3Nhbml0aXplcjo6U3ltYm9saXplcjo6R2V0T3JJbml0KCnsDDNfX3Nhbml0aXplcjo6U3ltYm9saXplcjo6U3ltYm9saXplUEModW5zaWduZWQgbG9uZyntDDxfX3Nhbml0aXplcjo6U3ltYm9saXplcjo6RmluZE1vZHVsZUZvckFkZHJlc3ModW5zaWduZWQgbG9uZynuDE1fX3Nhbml0aXplcjo6U3ltYm9saXplcjo6U3ltYm9saXplRGF0YSh1bnNpZ25lZCBsb25nLCBfX3Nhbml0aXplcjo6RGF0YUluZm8qKe8MYV9fc2FuaXRpemVyOjpTeW1ib2xpemVyOjpHZXRNb2R1bGVOYW1lQW5kT2Zmc2V0Rm9yUEModW5zaWduZWQgbG9uZywgY2hhciBjb25zdCoqLCB1bnNpZ25lZCBsb25nKinwDC5fX3Nhbml0aXplcjo6U3ltYm9saXplcjo6RGVtYW5nbGUoY2hhciBjb25zdCop8QxaX19zYW5pdGl6ZXI6OlJlcG9ydEVycm9yU3VtbWFyeShjaGFyIGNvbnN0KiwgX19zYW5pdGl6ZXI6OkFkZHJlc3NJbmZvIGNvbnN0JiwgY2hhciBjb25zdCop8gweX19zYW5pdGl6ZXI6OkNvbG9yaXplUmVwb3J0cygp8wxZX19zYW5pdGl6ZXI6OlJlcG9ydEVycm9yU3VtbWFyeShjaGFyIGNvbnN0KiwgX19zYW5pdGl6ZXI6OlN0YWNrVHJhY2UgY29uc3QqLCBjaGFyIGNvbnN0Kin0DCpfX3Nhbml0aXplcjo6U2NvcGVkRXJyb3JSZXBvcnRMb2NrOjpMb2NrKCn1DF5fX3Nhbml0aXplcjo6SW50ZXJuYWxNbWFwVmVjdG9yTm9DdG9yPF9fc2FuaXRpemVyOjpCdWZmZXJlZFN0YWNrVHJhY2U+OjpSZWFsbG9jKHVuc2lnbmVkIGxvbmcp9gwnX19zYW5pdGl6ZXI6OkFkZERpZUNhbGxiYWNrKHZvaWQgKCopKCkp9wwSX19zYW5pdGl6ZXI6OkRpZSgp+AxfX19zYW5pdGl6ZXI6OkNoZWNrRmFpbGVkKGNoYXIgY29uc3QqLCBpbnQsIGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nIGxvbmcsIHVuc2lnbmVkIGxvbmcgbG9uZyn5DF5fX3Nhbml0aXplcjo6VGhyZWFkUmVnaXN0cnk6OlRocmVhZFJlZ2lzdHJ5KF9fc2FuaXRpemVyOjpUaHJlYWRDb250ZXh0QmFzZSogKCopKHVuc2lnbmVkIGludCkp+gzHA2Jvb2wgX19zYW5pdGl6ZXI6OkRlbnNlTWFwQmFzZTxfX3Nhbml0aXplcjo6RGVuc2VNYXA8dW5zaWduZWQgbG9uZywgdW5zaWduZWQgaW50LCBfX3Nhbml0aXplcjo6RGVuc2VNYXBJbmZvPHVuc2lnbmVkIGxvbmc+LCBfX3Nhbml0aXplcjo6ZGV0YWlsOjpEZW5zZU1hcFBhaXI8dW5zaWduZWQgbG9uZywgdW5zaWduZWQgaW50Pj4sIHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGludCwgX19zYW5pdGl6ZXI6OkRlbnNlTWFwSW5mbzx1bnNpZ25lZCBsb25nPiwgX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGludD4+OjpMb29rdXBCdWNrZXRGb3I8dW5zaWduZWQgbG9uZz4odW5zaWduZWQgbG9uZyBjb25zdCYsIF9fc2FuaXRpemVyOjpkZXRhaWw6OkRlbnNlTWFwUGFpcjx1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBpbnQ+IGNvbnN0KiYpIGNvbnN0+wx0X19zYW5pdGl6ZXI6OlRocmVhZFJlZ2lzdHJ5OjpSdW5DYWxsYmFja0ZvckVhY2hUaHJlYWRMb2NrZWQodm9pZCAoKikoX19zYW5pdGl6ZXI6OlRocmVhZENvbnRleHRCYXNlKiwgdm9pZCopLCB2b2lkKin8DLABX19zYW5pdGl6ZXI6OkRlbnNlTWFwPHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGludCwgX19zYW5pdGl6ZXI6OkRlbnNlTWFwSW5mbzx1bnNpZ25lZCBsb25nPiwgX19zYW5pdGl6ZXI6OmRldGFpbDo6RGVuc2VNYXBQYWlyPHVuc2lnbmVkIGxvbmcsIHVuc2lnbmVkIGludD4+Ojpncm93KHVuc2lnbmVkIGludCn9DA5fYXNhbl9jX2xvYWRfMf4MD19hc2FuX2NfbG9hZF8xdf8MDl9hc2FuX2NfbG9hZF8ygA0PX2FzYW5fY19sb2FkXzJ1gQ0OX2FzYW5fY19sb2FkXzSCDQ5fYXNhbl9jX2xvYWRfZoMNDl9hc2FuX2NfbG9hZF9khA0PX2FzYW5fY19zdG9yZV8xhQ0PX2FzYW5fY19zdG9yZV8yhg0PX2FzYW5fY19zdG9yZV80hw0PX2FzYW5fY19zdG9yZV9miA0PX2FzYW5fY19zdG9yZV9kiQ0Jc3RhY2tTYXZlig0Mc3RhY2tSZXN0b3Jliw0Kc3RhY2tBbGxvY4wNEl9fc2V0X3N0YWNrX2xpbWl0c40NFmxlZ2Fsc3R1YiRkeW5DYWxsX2ppammODRhsZWdhbHN0dWIkZHluQ2FsbF92aWlqaWmPDRhsZWdhbHN0dWIkZHluQ2FsbF9paWlpaWqQDRlsZWdhbHN0dWIkZHluQ2FsbF9paWlpaWpqkQ0abGVnYWxzdHViJGR5bkNhbGxfaWlpaWlpamqSDRVsZWdhbHN0dWIkZHluQ2FsbF9qaWmTDSFsZWdhbGZ1bmMkX2VtYmluZF9yZWdpc3Rlcl9iaWdpbnSUDSNieW4kbWdmbi1zaGFyZWQkX19hc2FuX3JlcG9ydF9sb2FkMZUNS2J5biRtZ2ZuLXNoYXJlZCRfX3Nhbml0aXplcjo6RmxhZ0hhbmRsZXI8aW50Pjo6Rm9ybWF0KGNoYXIqLCB1bnNpZ25lZCBsb25nKZYNQWJ5biRtZ2ZuLXNoYXJlZCRfX3Nhbml0aXplcjo6RmxhZ0hhbmRsZXI8aW50Pjo6UGFyc2UoY2hhciBjb25zdCoplw1kYnluJG1nZm4tc2hhcmVkJF9fc2FuaXRpemVyOjpJbnRlcm5hbE1tYXBWZWN0b3JOb0N0b3I8X19hc2FuOjpTdGFja1ZhckRlc2NyPjo6UmVhbGxvYyh1bnNpZ25lZCBsb25nKZgNb2J5biRtZ2ZuLXNoYXJlZCRfX3Nhbml0aXplcjo6SW50ZXJuYWxNbWFwVmVjdG9yTm9DdG9yPF9fbHNhbjo6Um9vdFJlZ2lvbj46OnB1c2hfYmFjayhfX2xzYW46OlJvb3RSZWdpb24gY29uc3QmKZkNNWJ5biRtZ2ZuLXNoYXJlZCRfX3Nhbml0aXplcjo6UHJpbnRmKGNoYXIgY29uc3QqLCAuLi4pmg0dYnluJG1nZm4tc2hhcmVkJGFyTWF0cml4QWxsb2ObDZcIYnluJG1nZm4tc2hhcmVkJGVtc2NyaXB0ZW46OmludGVybmFsOjpGdW5jdGlvbkludm9rZXI8ZW1zY3JpcHRlbjo6dmFsICgqKShzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiBjb25zdCYsIHVuc2lnbmVkIGxvbmcpLCBlbXNjcmlwdGVuOjp2YWwsIHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZz46Omludm9rZShlbXNjcmlwdGVuOjp2YWwgKCoqKShzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiBjb25zdCYsIHVuc2lnbmVkIGxvbmcpLCBzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4+PiosIHVuc2lnbmVkIGxvbmcpnA0wYnluJG1nZm4tc2hhcmVkJGVtc2NyaXB0ZW46OnZhbDo6dmFsPGludCY+KGludCYpnQ0bYnluJG1nZm4tc2hhcmVkJGZwX2JhcnJpZXJmng19YnluJG1nZm4tc2hhcmVkJHN0ZDo6X18yOjpfX3NwbGl0X2J1ZmZlcjx2aXNpb246OkZlYXR1cmVQb2ludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjx2aXNpb246OkZlYXR1cmVQb2ludD4mPjo6fl9fc3BsaXRfYnVmZmVyKCmfDV9ieW4kbWdmbi1zaGFyZWQkc3RkOjpfXzI6OmJhc2ljX3N0cmVhbWJ1ZjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+OjpiYXNpY19zdHJlYW1idWYoKaANS2J5biRtZ2ZuLXNoYXJlZCRzdGQ6Ol9fMjo6Y3R5cGU8Y2hhcj46OmRvX3RvdXBwZXIoY2hhciosIGNoYXIgY29uc3QqKSBjb25zdKENVGJ5biRtZ2ZuLXNoYXJlZCRzdGQ6Ol9fMjo6Y3R5cGU8d2NoYXJfdD46OmRvX3RvdXBwZXIod2NoYXJfdCosIHdjaGFyX3QgY29uc3QqKSBjb25zdKIN3wFieW4kbWdmbi1zaGFyZWQkc3RkOjpfXzI6Om51bV9wdXQ8Y2hhciwgc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+Pj46OmRvX3B1dChzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+LCBzdGQ6Ol9fMjo6aW9zX2Jhc2UmLCBjaGFyLCBsb25nIGxvbmcpIGNvbnN0ow3aAWJ5biRtZ2ZuLXNoYXJlZCRzdGQ6Ol9fMjo6bnVtX3B1dDxjaGFyLCBzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4+Pjo6ZG9fcHV0KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIGNoYXIsIGxvbmcpIGNvbnN0pA3xAWJ5biRtZ2ZuLXNoYXJlZCRzdGQ6Ol9fMjo6bnVtX3B1dDx3Y2hhcl90LCBzdGQ6Ol9fMjo6b3N0cmVhbWJ1Zl9pdGVyYXRvcjx3Y2hhcl90LCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8d2NoYXJfdD4+Pjo6ZG9fcHV0KHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4sIHN0ZDo6X18yOjppb3NfYmFzZSYsIHdjaGFyX3QsIGxvbmcgbG9uZykgY29uc3SlDewBYnluJG1nZm4tc2hhcmVkJHN0ZDo6X18yOjpudW1fcHV0PHdjaGFyX3QsIHN0ZDo6X18yOjpvc3RyZWFtYnVmX2l0ZXJhdG9yPHdjaGFyX3QsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czx3Y2hhcl90Pj4+Ojpkb19wdXQoc3RkOjpfXzI6Om9zdHJlYW1idWZfaXRlcmF0b3I8d2NoYXJfdCwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPHdjaGFyX3Q+Piwgc3RkOjpfXzI6Omlvc19iYXNlJiwgd2NoYXJfdCwgbG9uZykgY29uc3SmDVlieW4kbWdmbi1zaGFyZWQkc3RkOjpfXzI6OnZlY3RvcjxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj46OnNpemVbYWJpOnYxNTAwN10oKSBjb25zdKcNogZieW4kbWdmbi1zaGFyZWQkdm9pZCBlbXNjcmlwdGVuOjppbnRlcm5hbDo6UmVnaXN0ZXJDbGFzc01ldGhvZDxlbXNjcmlwdGVuOjp2YWwgKCopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZyk+OjppbnZva2U8c3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6YmFzaWNfc3RyaW5nPGNoYXIsIHN0ZDo6X18yOjpjaGFyX3RyYWl0czxjaGFyPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxjaGFyPj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+Pj4+KGNoYXIgY29uc3QqLCBlbXNjcmlwdGVuOjp2YWwgKCopKHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+Pj4+IGNvbnN0JiwgdW5zaWduZWQgbG9uZykpqA2TAWJ5biRtZ2ZuLXNoYXJlZCR2b2lkIGVtc2NyaXB0ZW46OmludGVybmFsOjpSZWdpc3RlckNsYXNzTWV0aG9kPGludCAoQVJUb29sS2l0TkZUOjoqKSgpPjo6aW52b2tlPEFSVG9vbEtpdE5GVD4oY2hhciBjb25zdCosIGludCAoQVJUb29sS2l0TkZUOjoqKSgpKakNWGJ5biRtZ2ZuLXNoYXJlZCR2b2lkIGVtc2NyaXB0ZW46OnZhbDo6c2V0PGNoYXIgWzNdLCBpbnQ+KGNoYXIgY29uc3QgKCYpIFszXSwgaW50IGNvbnN0JimqDXlieW4kbWdmbi1zaGFyZWQkd2ViYXJraXRMT0dpKHN0ZDo6X18yOjpiYXNpY19zdHJpbmc8Y2hhciwgc3RkOjpfXzI6OmNoYXJfdHJhaXRzPGNoYXI+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGNoYXI+PiBjb25zdCYpqw2GAWJ5biRtZ2ZuLXNoYXJlZCR3ZWJhcmtpdExPR2koc3RkOjpfXzI6OmJhc2ljX3N0cmluZzxjaGFyLCBzdGQ6Ol9fMjo6Y2hhcl90cmFpdHM8Y2hhcj4sIHN0ZDo6X18yOjphbGxvY2F0b3I8Y2hhcj4+IGNvbnN0JiwgY2hhciBjb25zdCopBzcEAA9fX3N0YWNrX3BvaW50ZXIBCHRlbXBSZXQwAgtfX3N0YWNrX2VuZAMMX19zdGFja19iYXNlCfIblgIABy5yb2RhdGEBCS5yb2RhdGEuMQIJLnJvZGF0YS4yAwkucm9kYXRhLjMECS5yb2RhdGEuNAUJLnJvZGF0YS41Bgkucm9kYXRhLjYHCS5yb2RhdGEuNwgJLnJvZGF0YS44CQkucm9kYXRhLjkKCi5yb2RhdGEuMTALCi5yb2RhdGEuMTEMCi5yb2RhdGEuMTINCi5yb2RhdGEuMTMOCi5yb2RhdGEuMTQPCi5yb2RhdGEuMTUQCi5yb2RhdGEuMTYRCi5yb2RhdGEuMTcSCi5yb2RhdGEuMTgTCi5yb2RhdGEuMTkUCi5yb2RhdGEuMjAVCi5yb2RhdGEuMjEWCi5yb2RhdGEuMjIXCi5yb2RhdGEuMjMYCi5yb2RhdGEuMjQZCi5yb2RhdGEuMjUaCi5yb2RhdGEuMjYbCi5yb2RhdGEuMjccCi5yb2RhdGEuMjgdCi5yb2RhdGEuMjkeCi5yb2RhdGEuMzAfCi5yb2RhdGEuMzEgCi5yb2RhdGEuMzIhCi5yb2RhdGEuMzMiCi5yb2RhdGEuMzQjCi5yb2RhdGEuMzUkCi5yb2RhdGEuMzYlCi5yb2RhdGEuMzcmCi5yb2RhdGEuMzgnCi5yb2RhdGEuMzkoCi5yb2RhdGEuNDApCi5yb2RhdGEuNDEqCi5yb2RhdGEuNDIrCi5yb2RhdGEuNDMsCi5yb2RhdGEuNDQtCi5yb2RhdGEuNDUuCi5yb2RhdGEuNDYvCi5yb2RhdGEuNDcwCi5yb2RhdGEuNDgxCi5yb2RhdGEuNDkyCi5yb2RhdGEuNTAzCi5yb2RhdGEuNTE0Ci5yb2RhdGEuNTI1Ci5yb2RhdGEuNTM2Ci5yb2RhdGEuNTQ3Ci5yb2RhdGEuNTU4Ci5yb2RhdGEuNTY5Ci5yb2RhdGEuNTc6Ci5yb2RhdGEuNTg7Ci5yb2RhdGEuNTk8Ci5yb2RhdGEuNjA9Ci5yb2RhdGEuNjE+Ci5yb2RhdGEuNjI/Ci5yb2RhdGEuNjNACi5yb2RhdGEuNjRBCi5yb2RhdGEuNjVCCi5yb2RhdGEuNjZDCi5yb2RhdGEuNjdECi5yb2RhdGEuNjhFCi5yb2RhdGEuNjlGCi5yb2RhdGEuNzBHCi5yb2RhdGEuNzFICi5yb2RhdGEuNzJJCi5yb2RhdGEuNzNKCi5yb2RhdGEuNzRLCi5yb2RhdGEuNzVMCi5yb2RhdGEuNzZNCi5yb2RhdGEuNzdOCi5yb2RhdGEuNzhPCi5yb2RhdGEuNzlQCi5yb2RhdGEuODBRCi5yb2RhdGEuODFSCi5yb2RhdGEuODJTCi5yb2RhdGEuODNUCi5yb2RhdGEuODRVCi5yb2RhdGEuODVWCi5yb2RhdGEuODZXCi5yb2RhdGEuODdYCi5yb2RhdGEuODhZCi5yb2RhdGEuODlaCi5yb2RhdGEuOTBbCi5yb2RhdGEuOTFcCi5yb2RhdGEuOTJdCi5yb2RhdGEuOTNeCi5yb2RhdGEuOTRfCi5yb2RhdGEuOTVgCi5yb2RhdGEuOTZhCi5yb2RhdGEuOTdiCi5yb2RhdGEuOThjCi5yb2RhdGEuOTlkCy5yb2RhdGEuMTAwZQsucm9kYXRhLjEwMWYLLnJvZGF0YS4xMDJnCy5yb2RhdGEuMTAzaAsucm9kYXRhLjEwNGkLLnJvZGF0YS4xMDVqCy5yb2RhdGEuMTA2awsucm9kYXRhLjEwN2wLLnJvZGF0YS4xMDhtCy5yb2RhdGEuMTA5bgsucm9kYXRhLjExMG8LLnJvZGF0YS4xMTFwCy5yb2RhdGEuMTEycQsucm9kYXRhLjExM3ILLnJvZGF0YS4xMTRzCy5yb2RhdGEuMTE1dAsucm9kYXRhLjExNnULLnJvZGF0YS4xMTd2Cy5yb2RhdGEuMTE4dwsucm9kYXRhLjExOXgLLnJvZGF0YS4xMjB5Cy5yb2RhdGEuMTIxegsucm9kYXRhLjEyMnsLLnJvZGF0YS4xMjN8Cy5yb2RhdGEuMTI0fQsucm9kYXRhLjEyNX4LLnJvZGF0YS4xMjZ/Cy5yb2RhdGEuMTI3gAELLnJvZGF0YS4xMjiBAQsucm9kYXRhLjEyOYIBCy5yb2RhdGEuMTMwgwELLnJvZGF0YS4xMzGEAQsucm9kYXRhLjEzMoUBCy5yb2RhdGEuMTMzhgELLnJvZGF0YS4xMzSHAQsucm9kYXRhLjEzNYgBCy5yb2RhdGEuMTM2iQELLnJvZGF0YS4xMzeKAQsucm9kYXRhLjEzOIsBCy5yb2RhdGEuMTM5jAELLnJvZGF0YS4xNDCNAQsucm9kYXRhLjE0MY4BCy5yb2RhdGEuMTQyjwELLnJvZGF0YS4xNDOQAQsucm9kYXRhLjE0NJEBCy5yb2RhdGEuMTQ1kgELLnJvZGF0YS4xNDaTAQsucm9kYXRhLjE0N5QBCy5yb2RhdGEuMTQ4lQELLnJvZGF0YS4xNDmWAQsucm9kYXRhLjE1MJcBCy5yb2RhdGEuMTUxmAELLnJvZGF0YS4xNTKZAQsucm9kYXRhLjE1M5oBCy5yb2RhdGEuMTU0mwELLnJvZGF0YS4xNTWcAQsucm9kYXRhLjE1Np0BCy5yb2RhdGEuMTU3ngELLnJvZGF0YS4xNTifAQsucm9kYXRhLjE1OaABCy5yb2RhdGEuMTYwoQELLnJvZGF0YS4xNjGiAQsucm9kYXRhLjE2MqMBCy5yb2RhdGEuMTYzpAELLnJvZGF0YS4xNjSlAQsucm9kYXRhLjE2NaYBCy5yb2RhdGEuMTY2pwELLnJvZGF0YS4xNjeoAQsucm9kYXRhLjE2OKkBCy5yb2RhdGEuMTY5qgELLnJvZGF0YS4xNzCrAQsucm9kYXRhLjE3MawBCy5yb2RhdGEuMTcyrQELLnJvZGF0YS4xNzOuAQsucm9kYXRhLjE3NK8BCy5yb2RhdGEuMTc1sAELLnJvZGF0YS4xNzaxAQsucm9kYXRhLjE3N7IBCy5yb2RhdGEuMTc4swELLnJvZGF0YS4xNzm0AQsucm9kYXRhLjE4MLUBCy5yb2RhdGEuMTgxtgELLnJvZGF0YS4xODK3AQsucm9kYXRhLjE4M7gBCy5yb2RhdGEuMTg0uQELLnJvZGF0YS4xODW6AQsucm9kYXRhLjE4NrsBCy5yb2RhdGEuMTg3vAELLnJvZGF0YS4xODi9AQsucm9kYXRhLjE4Ob4BCy5yb2RhdGEuMTkwvwELLnJvZGF0YS4xOTHAAQsucm9kYXRhLjE5MsEBCy5yb2RhdGEuMTkzwgELLnJvZGF0YS4xOTTDAQsucm9kYXRhLjE5NcQBCy5yb2RhdGEuMTk2xQELLnJvZGF0YS4xOTfGAQsucm9kYXRhLjE5OMcBCy5yb2RhdGEuMTk5yAELLnJvZGF0YS4yMDDJAQsucm9kYXRhLjIwMcoBCy5yb2RhdGEuMjAyywELLnJvZGF0YS4yMDPMAQsucm9kYXRhLjIwNM0BCy5yb2RhdGEuMjA1zgELLnJvZGF0YS4yMDbPAQsucm9kYXRhLjIwN9ABCy5yb2RhdGEuMjA40QELLnJvZGF0YS4yMDnSAQsucm9kYXRhLjIxMNMBCy5yb2RhdGEuMjEx1AELLnJvZGF0YS4yMTLVAQsucm9kYXRhLjIxM9YBCy5yb2RhdGEuMjE01wELLnJvZGF0YS4yMTXYAQsucm9kYXRhLjIxNtkBCy5yb2RhdGEuMjE32gELLnJvZGF0YS4yMTjbAQsucm9kYXRhLjIxOdwBCy5yb2RhdGEuMjIw3QELLnJvZGF0YS4yMjHeAQsucm9kYXRhLjIyMt8BCy5yb2RhdGEuMjIz4AELLnJvZGF0YS4yMjThAQsucm9kYXRhLjIyNeIBCy5yb2RhdGEuMjI24wELLnJvZGF0YS4yMjfkAQsucm9kYXRhLjIyOOUBCy5yb2RhdGEuMjI55gELLnJvZGF0YS4yMzDnAQsucm9kYXRhLjIzMegBCy5yb2RhdGEuMjMy6QELLnJvZGF0YS4yMzPqAQsucm9kYXRhLjIzNOsBCy5yb2RhdGEuMjM17AELLnJvZGF0YS4yMzbtAQsucm9kYXRhLjIzN+4BCy5yb2RhdGEuMjM47wELLnJvZGF0YS4yMznwAQsucm9kYXRhLjI0MPEBCy5yb2RhdGEuMjQx8gELLnJvZGF0YS4yNDLzAQsucm9kYXRhLjI0M/QBCy5yb2RhdGEuMjQ09QELLnJvZGF0YS4yNDX2AQsucm9kYXRhLjI0NvcBCy5yb2RhdGEuMjQ3+AELLnJvZGF0YS4yNDj5AQsucm9kYXRhLjI0OfoBCy5yb2RhdGEuMjUw+wELLnJvZGF0YS4yNTH8AQsucm9kYXRhLjI1Mv0BCy5yb2RhdGEuMjUz/gEFLmRhdGH/AQcuZGF0YS4xgAIHLmRhdGEuMoECBy5kYXRhLjOCAgcuZGF0YS40gwIHLmRhdGEuNYQCBy5kYXRhLjaFAgcuZGF0YS43hgIHLmRhdGEuOIcCBy5kYXRhLjmIAgguZGF0YS4xMIkCCC5kYXRhLjExigIILmRhdGEuMTKLAgguZGF0YS4xM4wCCC5kYXRhLjE0jQIILmRhdGEuMTWOAgguZGF0YS4xNo8CCC5kYXRhLjE3kAIILmRhdGEuMTiRAgguZGF0YS4xOZICCC5kYXRhLjIwkwIILmRhdGEuMjGUAgguZGF0YS4yMpUCCC5kYXRhLjIz";

if (!isDataURI(wasmBinaryFile)) {
 wasmBinaryFile = locateFile(wasmBinaryFile);
}

function getBinary(file) {
 try {
  if (file == wasmBinaryFile && wasmBinary) {
   return new Uint8Array(wasmBinary);
  }
  var binary = tryParseAsDataURI(file);
  if (binary) {
   return binary;
  }
  if (readBinary) {
   return readBinary(file);
  }
  throw "both async and sync fetching of the wasm failed";
 } catch (err) {
  abort(err);
 }
}

function getBinaryPromise(binaryFile) {
 if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {
  if (typeof fetch == "function") {
   return fetch(binaryFile, {
    credentials: "same-origin"
   }).then(function(response) {
    if (!response["ok"]) {
     throw "failed to load wasm binary file at '" + binaryFile + "'";
    }
    return response["arrayBuffer"]();
   }).catch(function() {
    return getBinary(binaryFile);
   });
  }
 }
 return Promise.resolve().then(function() {
  return getBinary(binaryFile);
 });
}

var wasmOffsetConverter;

function WasmOffsetConverter(wasmBytes, wasmModule) {
 var offset = 8;
 var funcidx = 0;
 this.offset_map = {};
 this.func_starts = [];
 this.name_map = {};
 this.import_functions = 0;
 var buffer = wasmBytes;
 function unsignedLEB128() {
  var result = 0;
  var shift = 0;
  do {
   var byte = buffer[offset++];
   result += (byte & 127) << shift;
   shift += 7;
  } while (byte & 128);
  return result;
 }
 function skipLimits() {
  var flags = unsignedLEB128();
  unsignedLEB128();
  var hasMax = (flags & 1) != 0;
  if (hasMax) {
   unsignedLEB128();
  }
 }
 binary_parse: while (offset < buffer.length) {
  var start = offset;
  var type = buffer[offset++];
  var end = unsignedLEB128() + offset;
  switch (type) {
  case 2:
   var count = unsignedLEB128();
   while (count-- > 0) {
    offset = unsignedLEB128() + offset;
    offset = unsignedLEB128() + offset;
    var kind = buffer[offset++];
    switch (kind) {
    case 0:
     ++funcidx;
     unsignedLEB128();
     break;

    case 1:
     unsignedLEB128();
     skipLimits();
     break;

    case 2:
     skipLimits();
     break;

    case 3:
     offset += 2;
     break;

    case 4:
     ++offset;
     unsignedLEB128();
     break;

    default:
     throw "bad import kind: " + kind;
    }
   }
   this.import_functions = funcidx;
   break;

  case 10:
   var count = unsignedLEB128();
   while (count-- > 0) {
    var size = unsignedLEB128();
    this.offset_map[funcidx++] = offset;
    this.func_starts.push(offset);
    offset += size;
   }
   break binary_parse;
  }
  offset = end;
 }
 var sections = WebAssembly.Module.customSections(wasmModule, "name");
 for (var i = 0; i < sections.length; ++i) {
  buffer = new Uint8Array(sections[i]);
  if (buffer[0] != 1) continue;
  offset = 1;
  unsignedLEB128();
  var count = unsignedLEB128();
  while (count-- > 0) {
   var index = unsignedLEB128();
   var length = unsignedLEB128();
   this.name_map[index] = UTF8ArrayToString(buffer, offset, length);
   offset += length;
  }
 }
}

WasmOffsetConverter.prototype.convert = function(funcidx, offset) {
 return this.offset_map[funcidx] + offset;
};

WasmOffsetConverter.prototype.getIndex = function(offset) {
 var lo = 0;
 var hi = this.func_starts.length;
 var mid;
 while (lo < hi) {
  mid = Math.floor((lo + hi) / 2);
  if (this.func_starts[mid] > offset) {
   hi = mid;
  } else {
   lo = mid + 1;
  }
 }
 return lo + this.import_functions - 1;
};

WasmOffsetConverter.prototype.isSameFunc = function(offset1, offset2) {
 return this.getIndex(offset1) == this.getIndex(offset2);
};

WasmOffsetConverter.prototype.getName = function(offset) {
 var index = this.getIndex(offset);
 return this.name_map[index] || "wasm-function[" + index + "]";
};

function resetPrototype(constructor, attrs) {
 var object = Object.create(constructor.prototype);
 return Object.assign(object, attrs);
}

function instantiateArrayBuffer(binaryFile, imports, receiver) {
 var savedBinary;
 return getBinaryPromise(binaryFile).then(function(binary) {
  savedBinary = binary;
  return WebAssembly.instantiate(binary, imports);
 }).then(function(instance) {
  wasmOffsetConverter = new WasmOffsetConverter(savedBinary, instance.module);
  return instance;
 }).then(receiver, function(reason) {
  err("failed to asynchronously prepare wasm: " + reason);
  if (isFileURI(wasmBinaryFile)) {
   err("warning: Loading from a file URI (" + wasmBinaryFile + ") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing");
  }
  abort(reason);
 });
}

function instantiateAsync(binary, binaryFile, imports, callback) {
 if (!binary && typeof WebAssembly.instantiateStreaming == "function" && !isDataURI(binaryFile) && typeof fetch == "function") {
  return fetch(binaryFile, {
   credentials: "same-origin"
  }).then(function(response) {
   var result = WebAssembly.instantiateStreaming(response, imports);
   var clonedResponsePromise = response.clone().arrayBuffer();
   return result.then(function(instantiationResult) {
    clonedResponsePromise.then(function(arrayBufferResult) {
     wasmOffsetConverter = new WasmOffsetConverter(new Uint8Array(arrayBufferResult), instantiationResult.module);
     callback(instantiationResult);
    }, function(reason) {
     err("failed to initialize offset-converter: " + reason);
    });
   }, function(reason) {
    err("wasm streaming compile failed: " + reason);
    err("falling back to ArrayBuffer instantiation");
    return instantiateArrayBuffer(binaryFile, imports, callback);
   });
  });
 } else {
  return instantiateArrayBuffer(binaryFile, imports, callback);
 }
}

function createWasm() {
 var info = {
  "env": wasmImports,
  "wasi_snapshot_preview1": wasmImports
 };
 function receiveInstance(instance, module) {
  var exports = instance.exports;
  Module["asm"] = exports;
  wasmMemory = Module["asm"]["memory"];
  assert(wasmMemory, "memory not found in wasm exports");
  updateMemoryViews();
  wasmTable = Module["asm"]["__indirect_function_table"];
  assert(wasmTable, "table not found in wasm exports");
  addOnInit(Module["asm"]["__wasm_call_ctors"]);
  removeRunDependency("wasm-instantiate");
  return exports;
 }
 addRunDependency("wasm-instantiate");
 var trueModule = Module;
 function receiveInstantiationResult(result) {
  assert(Module === trueModule, "the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");
  trueModule = null;
  receiveInstance(result["instance"]);
 }
 if (Module["instantiateWasm"]) {
  wasmOffsetConverter = resetPrototype(WasmOffsetConverter, Module["wasmOffsetData"]);
  try {
   return Module["instantiateWasm"](info, receiveInstance);
  } catch (e) {
   err("Module.instantiateWasm callback failed with error: " + e);
   readyPromiseReject(e);
  }
 }
 instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);
 return {};
}

var tempDouble;

var tempI64;

function legacyModuleProp(prop, newName) {
 if (!Object.getOwnPropertyDescriptor(Module, prop)) {
  Object.defineProperty(Module, prop, {
   configurable: true,
   get: function() {
    abort("Module." + prop + " has been replaced with plain " + newName + " (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)");
   }
  });
 }
}

function ignoredModuleProp(prop) {
 if (Object.getOwnPropertyDescriptor(Module, prop)) {
  abort("`Module." + prop + "` was supplied but `" + prop + "` not included in INCOMING_MODULE_JS_API");
 }
}

function isExportedByForceFilesystem(name) {
 return name === "FS_createPath" || name === "FS_createDataFile" || name === "FS_createPreloadedFile" || name === "FS_unlink" || name === "addRunDependency" || name === "FS_createLazyFile" || name === "FS_createDevice" || name === "removeRunDependency";
}

function missingGlobal(sym, msg) {
 if (typeof globalThis !== "undefined") {
  Object.defineProperty(globalThis, sym, {
   configurable: true,
   get: function() {
    warnOnce("`" + sym + "` is not longer defined by emscripten. " + msg);
    return undefined;
   }
  });
 }
}

missingGlobal("buffer", "Please use HEAP8.buffer or wasmMemory.buffer");

function missingLibrarySymbol(sym) {
 if (typeof globalThis !== "undefined" && !Object.getOwnPropertyDescriptor(globalThis, sym)) {
  Object.defineProperty(globalThis, sym, {
   configurable: true,
   get: function() {
    var msg = "`" + sym + "` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line";
    var librarySymbol = sym;
    if (!librarySymbol.startsWith("_")) {
     librarySymbol = "$" + sym;
    }
    msg += " (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=" + librarySymbol + ")";
    if (isExportedByForceFilesystem(sym)) {
     msg += ". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you";
    }
    warnOnce(msg);
    return undefined;
   }
  });
 }
 unexportedRuntimeSymbol(sym);
}

function unexportedRuntimeSymbol(sym) {
 if (!Object.getOwnPropertyDescriptor(Module, sym)) {
  Object.defineProperty(Module, sym, {
   configurable: true,
   get: function() {
    var msg = "'" + sym + "' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)";
    if (isExportedByForceFilesystem(sym)) {
     msg += ". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you";
    }
    abort(msg);
   }
  });
 }
}

function dbg(text) {
 console.error(text);
}

var ASM_CONSTS = {
 306930013: ($0, $1, $2) => {
  var message = UTF8ToString($0);
  var infoHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  console.log(infoHead + message, style);
 },
 306930152: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var infoHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.log(infoHead + message, style, format);
 },
 306930330: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var infoHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.log(infoHead + message, style, format);
 },
 306930508: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var infoHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.log(infoHead + message, style, format);
 },
 306930686: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var infoHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.log(infoHead + message, style, format);
 },
 306930864: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var infoHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  console.log(infoHead + message, style, $3);
 },
 306931007: ($0, $1, $2) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  console.error(errorHead + message, style);
 },
 306931150: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.error(errorHead + message, style, format);
 },
 306931332: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.error(errorHead + message, style, format);
 },
 306931514: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.error(errorHead + message, style, format);
 },
 306931696: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.error(errorHead + message, style, format);
 },
 306931878: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  console.error(errorHead + message, style, $3);
 },
 306932025: ($0, $1, $2) => {
  var message = UTF8ToString($0);
  var infoHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  console.warn(infoHead + message, style);
 },
 306932165: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.warn(errorHead + message, style, format);
 },
 306932346: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.warn(errorHead + message, style, format);
 },
 306932527: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.warn(errorHead + message, style, format);
 },
 306932708: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  var format = UTF8ToString($3);
  console.warn(errorHead + message, style, format);
 },
 306932889: ($0, $1, $2, $3) => {
  var message = UTF8ToString($0);
  var errorHead = UTF8ToString($1);
  var style = UTF8ToString($2);
  console.warn(errorHead + message, style, $3);
 },
 306933035: () => {
  return withBuiltinMalloc(function() {
   return allocateUTF8(Module["ASAN_OPTIONS"] || 0);
  });
 },
 306933132: () => {
  return withBuiltinMalloc(function() {
   return allocateUTF8(Module["LSAN_OPTIONS"] || 0);
  });
 },
 306933229: () => {
  return withBuiltinMalloc(function() {
   return allocateUTF8(Module["UBSAN_OPTIONS"] || 0);
  });
 },
 306933327: () => {
  var setting = Module["printWithColors"];
  if (setting != null) {
   return setting;
  } else {
   return ENVIRONMENT_IS_NODE && process.stderr.isTTY;
  }
 }
};

function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}

function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  callbacks.shift()(Module);
 }
}

function getValue(ptr, type = "i8") {
 if (type.endsWith("*")) type = "*";
 switch (type) {
 case "i1":
  return _asan_js_load_1(ptr >> 0);

 case "i8":
  return _asan_js_load_1(ptr >> 0);

 case "i16":
  return _asan_js_load_2(ptr >> 1);

 case "i32":
  return _asan_js_load_4(ptr >> 2);

 case "i64":
  return _asan_js_load_4(ptr >> 2);

 case "float":
  return _asan_js_load_f(ptr >> 2);

 case "double":
  return _asan_js_load_d(ptr >> 3);

 case "*":
  return _asan_js_load_4u(ptr >> 2);

 default:
  abort("invalid type for getValue: " + type);
 }
}

function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   assert(false, "Character code " + chr + " (" + String.fromCharCode(chr) + ")  at offset " + i + " not in 0x00-0xFF.");
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}

function ptrToString(ptr) {
 assert(typeof ptr === "number");
 return "0x" + ptr.toString(16).padStart(8, "0");
}

function setValue(ptr, value, type = "i8") {
 if (type.endsWith("*")) type = "*";
 switch (type) {
 case "i1":
  _asan_js_store_1(ptr >> 0, value);
  break;

 case "i8":
  _asan_js_store_1(ptr >> 0, value);
  break;

 case "i16":
  _asan_js_store_2(ptr >> 1, value);
  break;

 case "i32":
  _asan_js_store_4(ptr >> 2, value);
  break;

 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  _asan_js_store_4(ptr >> 2, tempI64[0]), _asan_js_store_4(ptr + 4 >> 2, tempI64[1]);
  break;

 case "float":
  _asan_js_store_f(ptr >> 2, value);
  break;

 case "double":
  _asan_js_store_d(ptr >> 3, value);
  break;

 case "*":
  _asan_js_store_4u(ptr >> 2, value);
  break;

 default:
  abort("invalid type for setValue: " + type);
 }
}

function warnOnce(text) {
 if (!warnOnce.shown) warnOnce.shown = {};
 if (!warnOnce.shown[text]) {
  warnOnce.shown[text] = 1;
  err(text);
 }
}

function ___assert_fail(condition, filename, line, func) {
 abort("Assertion failed: " + UTF8ToString(condition) + ", at: " + [ filename ? UTF8ToString(filename) : "unknown filename", line, func ? UTF8ToString(func) : "unknown function" ]);
}

function ExceptionInfo(excPtr) {
 this.excPtr = excPtr;
 this.ptr = excPtr - 24;
 this.set_type = function(type) {
  _asan_js_store_4u(this.ptr + 4 >> 2, type);
 };
 this.get_type = function() {
  return _asan_js_load_4u(this.ptr + 4 >> 2);
 };
 this.set_destructor = function(destructor) {
  _asan_js_store_4u(this.ptr + 8 >> 2, destructor);
 };
 this.get_destructor = function() {
  return _asan_js_load_4u(this.ptr + 8 >> 2);
 };
 this.set_refcount = function(refcount) {
  _asan_js_store_4(this.ptr >> 2, refcount);
 };
 this.set_caught = function(caught) {
  caught = caught ? 1 : 0;
  _asan_js_store_1(this.ptr + 12 >> 0, caught);
 };
 this.get_caught = function() {
  return _asan_js_load_1(this.ptr + 12 >> 0) != 0;
 };
 this.set_rethrown = function(rethrown) {
  rethrown = rethrown ? 1 : 0;
  _asan_js_store_1(this.ptr + 13 >> 0, rethrown);
 };
 this.get_rethrown = function() {
  return _asan_js_load_1(this.ptr + 13 >> 0) != 0;
 };
 this.init = function(type, destructor) {
  this.set_adjusted_ptr(0);
  this.set_type(type);
  this.set_destructor(destructor);
  this.set_refcount(0);
  this.set_caught(false);
  this.set_rethrown(false);
 };
 this.add_ref = function() {
  var value = _asan_js_load_4(this.ptr >> 2);
  _asan_js_store_4(this.ptr >> 2, value + 1);
 };
 this.release_ref = function() {
  var prev = _asan_js_load_4(this.ptr >> 2);
  _asan_js_store_4(this.ptr >> 2, prev - 1);
  assert(prev > 0);
  return prev === 1;
 };
 this.set_adjusted_ptr = function(adjustedPtr) {
  _asan_js_store_4u(this.ptr + 16 >> 2, adjustedPtr);
 };
 this.get_adjusted_ptr = function() {
  return _asan_js_load_4u(this.ptr + 16 >> 2);
 };
 this.get_exception_ptr = function() {
  var isPointer = ___cxa_is_pointer_type(this.get_type());
  if (isPointer) {
   return _asan_js_load_4u(this.excPtr >> 2);
  }
  var adjusted = this.get_adjusted_ptr();
  if (adjusted !== 0) return adjusted;
  return this.excPtr;
 };
}

var exceptionLast = 0;

var uncaughtExceptionCount = 0;

function ___cxa_throw(ptr, type, destructor) {
 var info = new ExceptionInfo(ptr);
 info.init(type, destructor);
 exceptionLast = ptr;
 uncaughtExceptionCount++;
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.";
}

function ___handle_stack_overflow(requested) {
 requested = requested >>> 0;
 var base = _emscripten_stack_get_base();
 var end = _emscripten_stack_get_end();
 abort("stack overflow (Attempt to set SP to " + ptrToString(requested) + ", with stack limits [" + ptrToString(end) + " - " + ptrToString(base) + "]). If you require more stack space build with -sSTACK_SIZE=<bytes>");
}

var PATH = {
 isAbs: path => path.charAt(0) === "/",
 splitPath: filename => {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 },
 normalizeArray: (parts, allowAboveRoot) => {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (;up; up--) {
    parts.unshift("..");
   }
  }
  return parts;
 },
 normalize: path => {
  var isAbsolute = PATH.isAbs(path), trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter(p => !!p), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 },
 dirname: path => {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 },
 basename: path => {
  if (path === "/") return "/";
  path = PATH.normalize(path);
  path = path.replace(/\/$/, "");
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 },
 join: function() {
  var paths = Array.prototype.slice.call(arguments);
  return PATH.normalize(paths.join("/"));
 },
 join2: (l, r) => {
  return PATH.normalize(l + "/" + r);
 }
};

function getRandomDevice() {
 if (typeof crypto == "object" && typeof crypto["getRandomValues"] == "function") {
  var randomBuffer = new Uint8Array(1);
  return () => {
   crypto.getRandomValues(randomBuffer);
   return randomBuffer[0];
  };
 } else return () => abort("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };");
}

var PATH_FS = {
 resolve: function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path != "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = PATH.isAbs(path);
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(p => !!p), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 },
 relative: (from, to) => {
  from = PATH_FS.resolve(from).substr(1);
  to = PATH_FS.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (;start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (;end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 }
};

function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}

var TTY = {
 ttys: [],
 init: function() {},
 shutdown: function() {},
 register: function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 },
 stream_ops: {
  open: function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(43);
   }
   stream.tty = tty;
   stream.seekable = false;
  },
  close: function(stream) {
   stream.tty.ops.fsync(stream.tty);
  },
  fsync: function(stream) {
   stream.tty.ops.fsync(stream.tty);
  },
  read: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(60);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(29);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(6);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  },
  write: function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(60);
   }
   try {
    for (var i = 0; i < length; i++) {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    }
   } catch (e) {
    throw new FS.ErrnoError(29);
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  }
 },
 default_tty_ops: {
  get_char: function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  },
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  fsync: function(tty) {
   if (tty.output && tty.output.length > 0) {
    out(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 },
 default_tty1_ops: {
  put_char: function(tty, val) {
   if (val === null || val === 10) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  },
  fsync: function(tty) {
   if (tty.output && tty.output.length > 0) {
    err(UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  }
 }
};

function zeroMemory(address, size) {
 HEAPU8.fill(0, address, address + size);
 return address;
}

function alignMemory(size, alignment) {
 assert(alignment, "alignment argument is required");
 return Math.ceil(size / alignment) * alignment;
}

function mmapAlloc(size) {
 size = alignMemory(size, 65536);
 var ptr = _emscripten_builtin_memalign(65536, size);
 if (!ptr) return 0;
 return zeroMemory(ptr, size);
}

var MEMFS = {
 ops_table: null,
 mount: function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 },
 createNode: function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(63);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
   parent.timestamp = node.timestamp;
  }
  return node;
 },
 getFileDataAsTypedArray: function(node) {
  if (!node.contents) return new Uint8Array(0);
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 },
 expandFileStorage: function(node, newCapacity) {
  var prevCapacity = node.contents ? node.contents.length : 0;
  if (prevCapacity >= newCapacity) return;
  var CAPACITY_DOUBLING_MAX = 1024 * 1024;
  newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);
  if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
  var oldContents = node.contents;
  node.contents = new Uint8Array(newCapacity);
  if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
 },
 resizeFileStorage: function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
  } else {
   var oldContents = node.contents;
   node.contents = new Uint8Array(newSize);
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
  }
 },
 node_ops: {
  getattr: function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  },
  setattr: function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  },
  lookup: function(parent, name) {
   throw FS.genericErrors[44];
  },
  mknod: function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  },
  rename: function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(55);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.parent.timestamp = Date.now();
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   new_dir.timestamp = old_node.parent.timestamp;
   old_node.parent = new_dir;
  },
  unlink: function(parent, name) {
   delete parent.contents[name];
   parent.timestamp = Date.now();
  },
  rmdir: function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(55);
   }
   delete parent.contents[name];
   parent.timestamp = Date.now();
  },
  readdir: function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  },
  symlink: function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  },
  readlink: function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(28);
   }
   return node.link;
  }
 },
 stream_ops: {
  read: function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  },
  write: function(stream, buffer, offset, length, position, canOwn) {
   assert(!(buffer instanceof ArrayBuffer));
   if (buffer.buffer === HEAP8.buffer) {
    canOwn = false;
   }
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     assert(position === 0, "canOwn must imply no weird position inside the file");
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = buffer.slice(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) {
    node.contents.set(buffer.subarray(offset, offset + length), position);
   } else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  },
  llseek: function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(28);
   }
   return position;
  },
  allocate: function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  },
  mmap: function(stream, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(43);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && contents.buffer === HEAP8.buffer) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < contents.length) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = mmapAlloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(48);
    }
    HEAP8.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  },
  msync: function(stream, buffer, offset, length, mmapFlags) {
   MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  }
 }
};

function asyncLoad(url, onload, onerror, noRunDep) {
 var dep = !noRunDep ? getUniqueRunDependency("al " + url) : "";
 readAsync(url, arrayBuffer => {
  assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
  onload(new Uint8Array(arrayBuffer));
  if (dep) removeRunDependency(dep);
 }, event => {
  if (onerror) {
   onerror();
  } else {
   throw 'Loading data file "' + url + '" failed.';
  }
 });
 if (dep) addRunDependency(dep);
}

var ERRNO_MESSAGES = {
 0: "Success",
 1: "Arg list too long",
 2: "Permission denied",
 3: "Address already in use",
 4: "Address not available",
 5: "Address family not supported by protocol family",
 6: "No more processes",
 7: "Socket already connected",
 8: "Bad file number",
 9: "Trying to read unreadable message",
 10: "Mount device busy",
 11: "Operation canceled",
 12: "No children",
 13: "Connection aborted",
 14: "Connection refused",
 15: "Connection reset by peer",
 16: "File locking deadlock error",
 17: "Destination address required",
 18: "Math arg out of domain of func",
 19: "Quota exceeded",
 20: "File exists",
 21: "Bad address",
 22: "File too large",
 23: "Host is unreachable",
 24: "Identifier removed",
 25: "Illegal byte sequence",
 26: "Connection already in progress",
 27: "Interrupted system call",
 28: "Invalid argument",
 29: "I/O error",
 30: "Socket is already connected",
 31: "Is a directory",
 32: "Too many symbolic links",
 33: "Too many open files",
 34: "Too many links",
 35: "Message too long",
 36: "Multihop attempted",
 37: "File or path name too long",
 38: "Network interface is not configured",
 39: "Connection reset by network",
 40: "Network is unreachable",
 41: "Too many open files in system",
 42: "No buffer space available",
 43: "No such device",
 44: "No such file or directory",
 45: "Exec format error",
 46: "No record locks available",
 47: "The link has been severed",
 48: "Not enough core",
 49: "No message of desired type",
 50: "Protocol not available",
 51: "No space left on device",
 52: "Function not implemented",
 53: "Socket is not connected",
 54: "Not a directory",
 55: "Directory not empty",
 56: "State not recoverable",
 57: "Socket operation on non-socket",
 59: "Not a typewriter",
 60: "No such device or address",
 61: "Value too large for defined data type",
 62: "Previous owner died",
 63: "Not super-user",
 64: "Broken pipe",
 65: "Protocol error",
 66: "Unknown protocol",
 67: "Protocol wrong type for socket",
 68: "Math result not representable",
 69: "Read only file system",
 70: "Illegal seek",
 71: "No such process",
 72: "Stale file handle",
 73: "Connection timed out",
 74: "Text file busy",
 75: "Cross-device link",
 100: "Device not a stream",
 101: "Bad font file fmt",
 102: "Invalid slot",
 103: "Invalid request code",
 104: "No anode",
 105: "Block device required",
 106: "Channel number out of range",
 107: "Level 3 halted",
 108: "Level 3 reset",
 109: "Link number out of range",
 110: "Protocol driver not attached",
 111: "No CSI structure available",
 112: "Level 2 halted",
 113: "Invalid exchange",
 114: "Invalid request descriptor",
 115: "Exchange full",
 116: "No data (for no delay io)",
 117: "Timer expired",
 118: "Out of streams resources",
 119: "Machine is not on the network",
 120: "Package not installed",
 121: "The object is remote",
 122: "Advertise error",
 123: "Srmount error",
 124: "Communication error on send",
 125: "Cross mount point (not really error)",
 126: "Given log. name not unique",
 127: "f.d. invalid for this operation",
 128: "Remote address changed",
 129: "Can   access a needed shared lib",
 130: "Accessing a corrupted shared lib",
 131: ".lib section in a.out corrupted",
 132: "Attempting to link in too many libs",
 133: "Attempting to exec a shared library",
 135: "Streams pipe error",
 136: "Too many users",
 137: "Socket type not supported",
 138: "Not supported",
 139: "Protocol family not supported",
 140: "Can't send after socket shutdown",
 141: "Too many references",
 142: "Host is down",
 148: "No medium (in tape drive)",
 156: "Level 2 not synchronized"
};

var ERRNO_CODES = {};

function demangle(func) {
 warnOnce("warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling");
 return func;
}

function demangleAll(text) {
 var regex = /\b_Z[\w\d_]+/g;
 return text.replace(regex, function(x) {
  var y = demangle(x);
  return x === y ? x : y + " [" + x + "]";
 });
}

var FS = {
 root: null,
 mounts: [],
 devices: {},
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 lookupPath: (path, opts = {}) => {
  path = PATH_FS.resolve(path);
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  opts = Object.assign(defaults, opts);
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(32);
  }
  var parts = path.split("/").filter(p => !!p);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count + 1
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(32);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 },
 getPath: node => {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 },
 hashName: (parentid, name) => {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 },
 hashAddNode: node => {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 },
 hashRemoveNode: node => {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 },
 lookupNode: (parent, name) => {
  var errCode = FS.mayLookup(parent);
  if (errCode) {
   throw new FS.ErrnoError(errCode, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 },
 createNode: (parent, name, mode, rdev) => {
  assert(typeof parent == "object");
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 },
 destroyNode: node => {
  FS.hashRemoveNode(node);
 },
 isRoot: node => {
  return node === node.parent;
 },
 isMountpoint: node => {
  return !!node.mounted;
 },
 isFile: mode => {
  return (mode & 61440) === 32768;
 },
 isDir: mode => {
  return (mode & 61440) === 16384;
 },
 isLink: mode => {
  return (mode & 61440) === 40960;
 },
 isChrdev: mode => {
  return (mode & 61440) === 8192;
 },
 isBlkdev: mode => {
  return (mode & 61440) === 24576;
 },
 isFIFO: mode => {
  return (mode & 61440) === 4096;
 },
 isSocket: mode => {
  return (mode & 49152) === 49152;
 },
 flagModes: {
  "r": 0,
  "r+": 2,
  "w": 577,
  "w+": 578,
  "a": 1089,
  "a+": 1090
 },
 modeStringToFlags: str => {
  var flags = FS.flagModes[str];
  if (typeof flags == "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 },
 flagsToPermissionString: flag => {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 },
 nodePermissions: (node, perms) => {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.includes("r") && !(node.mode & 292)) {
   return 2;
  } else if (perms.includes("w") && !(node.mode & 146)) {
   return 2;
  } else if (perms.includes("x") && !(node.mode & 73)) {
   return 2;
  }
  return 0;
 },
 mayLookup: dir => {
  var errCode = FS.nodePermissions(dir, "x");
  if (errCode) return errCode;
  if (!dir.node_ops.lookup) return 2;
  return 0;
 },
 mayCreate: (dir, name) => {
  try {
   var node = FS.lookupNode(dir, name);
   return 20;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 },
 mayDelete: (dir, name, isdir) => {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var errCode = FS.nodePermissions(dir, "wx");
  if (errCode) {
   return errCode;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return 54;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return 10;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return 31;
   }
  }
  return 0;
 },
 mayOpen: (node, flags) => {
  if (!node) {
   return 44;
  }
  if (FS.isLink(node.mode)) {
   return 32;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return 31;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 },
 MAX_OPEN_FDS: 4096,
 nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(33);
 },
 getStream: fd => FS.streams[fd],
 createStream: (stream, fd_start, fd_end) => {
  if (!FS.FSStream) {
   FS.FSStream = function() {
    this.shared = {};
   };
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: function() {
      return this.node;
     },
     set: function(val) {
      this.node = val;
     }
    },
    isRead: {
     get: function() {
      return (this.flags & 2097155) !== 1;
     }
    },
    isWrite: {
     get: function() {
      return (this.flags & 2097155) !== 0;
     }
    },
    isAppend: {
     get: function() {
      return this.flags & 1024;
     }
    },
    flags: {
     get: function() {
      return this.shared.flags;
     },
     set: function(val) {
      this.shared.flags = val;
     }
    },
    position: {
     get: function() {
      return this.shared.position;
     },
     set: function(val) {
      this.shared.position = val;
     }
    }
   });
  }
  stream = Object.assign(new FS.FSStream(), stream);
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 },
 closeStream: fd => {
  FS.streams[fd] = null;
 },
 chrdev_stream_ops: {
  open: stream => {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  },
  llseek: () => {
   throw new FS.ErrnoError(70);
  }
 },
 major: dev => dev >> 8,
 minor: dev => dev & 255,
 makedev: (ma, mi) => ma << 8 | mi,
 registerDevice: (dev, ops) => {
  FS.devices[dev] = {
   stream_ops: ops
  };
 },
 getDevice: dev => FS.devices[dev],
 getMounts: mount => {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 },
 syncfs: (populate, callback) => {
  if (typeof populate == "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   err("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(errCode) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(errCode);
  }
  function done(errCode) {
   if (errCode) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(errCode);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach(mount => {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  });
 },
 mount: (type, opts, mountpoint) => {
  if (typeof type == "string") {
   throw type;
  }
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(10);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(10);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(54);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 },
 unmount: mountpoint => {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(28);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach(hash => {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.includes(current.mount)) {
     FS.destroyNode(current);
    }
    current = next;
   }
  });
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 },
 lookup: (parent, name) => {
  return parent.node_ops.lookup(parent, name);
 },
 mknod: (path, mode, dev) => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(28);
  }
  var errCode = FS.mayCreate(parent, name);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(63);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 },
 create: (path, mode) => {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 },
 mkdir: (path, mode) => {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 },
 mkdirTree: (path, mode) => {
  var dirs = path.split("/");
  var d = "";
  for (var i = 0; i < dirs.length; ++i) {
   if (!dirs[i]) continue;
   d += "/" + dirs[i];
   try {
    FS.mkdir(d, mode);
   } catch (e) {
    if (e.errno != 20) throw e;
   }
  }
 },
 mkdev: (path, mode, dev) => {
  if (typeof dev == "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 },
 symlink: (oldpath, newpath) => {
  if (!PATH_FS.resolve(oldpath)) {
   throw new FS.ErrnoError(44);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(44);
  }
  var newname = PATH.basename(newpath);
  var errCode = FS.mayCreate(parent, newname);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(63);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 },
 rename: (old_path, new_path) => {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  lookup = FS.lookupPath(old_path, {
   parent: true
  });
  old_dir = lookup.node;
  lookup = FS.lookupPath(new_path, {
   parent: true
  });
  new_dir = lookup.node;
  if (!old_dir || !new_dir) throw new FS.ErrnoError(44);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(75);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH_FS.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(28);
  }
  relative = PATH_FS.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(55);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var errCode = FS.mayDelete(old_dir, old_name, isdir);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(10);
  }
  if (new_dir !== old_dir) {
   errCode = FS.nodePermissions(old_dir, "w");
   if (errCode) {
    throw new FS.ErrnoError(errCode);
   }
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
 },
 rmdir: path => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var errCode = FS.mayDelete(parent, name, true);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(10);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
 },
 readdir: path => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(54);
  }
  return node.node_ops.readdir(node);
 },
 unlink: path => {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(44);
  }
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var errCode = FS.mayDelete(parent, name, false);
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(10);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
 },
 readlink: path => {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(44);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(28);
  }
  return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 },
 stat: (path, dontFollow) => {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(44);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(63);
  }
  return node.node_ops.getattr(node);
 },
 lstat: path => {
  return FS.stat(path, true);
 },
 chmod: (path, mode, dontFollow) => {
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 },
 lchmod: (path, mode) => {
  FS.chmod(path, mode, true);
 },
 fchmod: (fd, mode) => {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  FS.chmod(stream.node, mode);
 },
 chown: (path, uid, gid, dontFollow) => {
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 },
 lchown: (path, uid, gid) => {
  FS.chown(path, uid, gid, true);
 },
 fchown: (fd, uid, gid) => {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  FS.chown(stream.node, uid, gid);
 },
 truncate: (path, len) => {
  if (len < 0) {
   throw new FS.ErrnoError(28);
  }
  var node;
  if (typeof path == "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(63);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(28);
  }
  var errCode = FS.nodePermissions(node, "w");
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 },
 ftruncate: (fd, len) => {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(28);
  }
  FS.truncate(stream.node, len);
 },
 utime: (path, atime, mtime) => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 },
 open: (path, flags, mode) => {
  if (path === "") {
   throw new FS.ErrnoError(44);
  }
  flags = typeof flags == "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode == "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path == "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(20);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(44);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(54);
  }
  if (!created) {
   var errCode = FS.mayOpen(node, flags);
   if (errCode) {
    throw new FS.ErrnoError(errCode);
   }
  }
  if (flags & 512 && !created) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512 | 131072);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  });
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
   }
  }
  return stream;
 },
 close: stream => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
  stream.fd = null;
 },
 isClosed: stream => {
  return stream.fd === null;
 },
 llseek: (stream, offset, whence) => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(70);
  }
  if (whence != 0 && whence != 1 && whence != 2) {
   throw new FS.ErrnoError(28);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 },
 read: (stream, buffer, offset, length, position) => {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(28);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(8);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(28);
  }
  var seeking = typeof position != "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(70);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 },
 write: (stream, buffer, offset, length, position, canOwn) => {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(28);
  }
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(8);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(31);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(28);
  }
  if (stream.seekable && stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = typeof position != "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(70);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  return bytesWritten;
 },
 allocate: (stream, offset, length) => {
  if (FS.isClosed(stream)) {
   throw new FS.ErrnoError(8);
  }
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(28);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(8);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(43);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(138);
  }
  stream.stream_ops.allocate(stream, offset, length);
 },
 mmap: (stream, length, position, prot, flags) => {
  if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {
   throw new FS.ErrnoError(2);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(2);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(43);
  }
  return stream.stream_ops.mmap(stream, length, position, prot, flags);
 },
 msync: (stream, buffer, offset, length, mmapFlags) => {
  if (!stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 },
 munmap: stream => 0,
 ioctl: (stream, cmd, arg) => {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(59);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 },
 readFile: (path, opts = {}) => {
  opts.flags = opts.flags || 0;
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 },
 writeFile: (path, data, opts = {}) => {
  opts.flags = opts.flags || 577;
  var stream = FS.open(path, opts.flags, opts.mode);
  if (typeof data == "string") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
  } else if (ArrayBuffer.isView(data)) {
   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
  } else {
   throw new Error("Unsupported data type");
  }
  FS.close(stream);
 },
 cwd: () => FS.currentPath,
 chdir: path => {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (lookup.node === null) {
   throw new FS.ErrnoError(44);
  }
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(54);
  }
  var errCode = FS.nodePermissions(lookup.node, "x");
  if (errCode) {
   throw new FS.ErrnoError(errCode);
  }
  FS.currentPath = lookup.path;
 },
 createDefaultDirectories: () => {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 },
 createDefaultDevices: () => {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: () => 0,
   write: (stream, buffer, offset, length, pos) => length
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device = getRandomDevice();
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 },
 createSpecialDirectories: () => {
  FS.mkdir("/proc");
  var proc_self = FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: () => {
    var node = FS.createNode(proc_self, "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (parent, name) => {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(8);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: () => stream.path
       }
      };
      ret.parent = ret;
      return ret;
     }
    };
    return node;
   }
  }, {}, "/proc/self/fd");
 },
 createStandardStreams: () => {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", 0);
  var stdout = FS.open("/dev/stdout", 1);
  var stderr = FS.open("/dev/stderr", 1);
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 },
 ensureErrnoError: () => {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.name = "ErrnoError";
   this.node = node;
   this.setErrno = function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   };
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
   if (this.stack) {
    Object.defineProperty(this, "stack", {
     value: new Error().stack,
     writable: true
    });
    this.stack = demangleAll(this.stack);
   }
  };
  FS.ErrnoError.prototype = new Error();
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ 44 ].forEach(code => {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  });
 },
 staticInit: () => {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS
  };
 },
 init: (input, output, error) => {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 },
 quit: () => {
  FS.init.initialized = false;
  _fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 },
 getMode: (canRead, canWrite) => {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 },
 findObject: (path, dontResolveLastLink) => {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (!ret.exists) {
   return null;
  }
  return ret.object;
 },
 analyzePath: (path, dontResolveLastLink) => {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 },
 createPath: (parent, path, canRead, canWrite) => {
  parent = typeof parent == "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 },
 createFile: (parent, name, properties, canRead, canWrite) => {
  var path = PATH.join2(typeof parent == "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 },
 createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {
  var path = name;
  if (parent) {
   parent = typeof parent == "string" ? parent : FS.getPath(parent);
   path = name ? PATH.join2(parent, name) : parent;
  }
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data == "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, 577);
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 },
 createDevice: (parent, name, input, output) => {
  var path = PATH.join2(typeof parent == "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: stream => {
    stream.seekable = false;
   },
   close: stream => {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   },
   read: (stream, buffer, offset, length, pos) => {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(29);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(6);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   },
   write: (stream, buffer, offset, length, pos) => {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(29);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   }
  });
  return FS.mkdev(path, mode, dev);
 },
 forceLoadFile: obj => {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  if (typeof XMLHttpRequest != "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (read_) {
   try {
    obj.contents = intArrayFromString(read_(obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    throw new FS.ErrnoError(29);
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
 },
 createLazyFile: (parent, name, url, canRead, canWrite) => {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest();
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (from, to) => {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest();
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    }
    return intArrayFromString(xhr.responseText || "", true);
   };
   var lazyArray = this;
   lazyArray.setDataGetter(chunkNum => {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] == "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] == "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   });
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    out("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest != "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array();
   Object.defineProperties(lazyArray, {
    length: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     }
    },
    chunkSize: {
     get: function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     }
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: function() {
     return this.contents.length;
    }
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach(key => {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    FS.forceLoadFile(node);
    return fn.apply(null, arguments);
   };
  });
  function writeChunks(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  }
  stream_ops.read = (stream, buffer, offset, length, position) => {
   FS.forceLoadFile(node);
   return writeChunks(stream, buffer, offset, length, position);
  };
  stream_ops.mmap = (stream, length, position, prot, flags) => {
   FS.forceLoadFile(node);
   var ptr = mmapAlloc(length);
   if (!ptr) {
    throw new FS.ErrnoError(48);
   }
   writeChunks(stream, HEAP8, ptr, length, position);
   return {
    ptr: ptr,
    allocated: true
   };
  };
  node.stream_ops = stream_ops;
  return node;
 },
 createPreloadedFile: (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {
  var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   if (Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {
    if (onerror) onerror();
    removeRunDependency(dep);
   })) {
    return;
   }
   finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   asyncLoad(url, byteArray => processData(byteArray), onerror);
  } else {
   processData(url);
  }
 },
 indexedDB: () => {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 },
 DB_NAME: () => {
  return "EM_FS_" + window.location.pathname;
 },
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: (paths, onload = (() => {}), onerror = (() => {})) => {
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = () => {
   out("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = () => {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(path => {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = () => {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = () => {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 },
 loadFilesFromDB: (paths, onload = (() => {}), onerror = (() => {})) => {
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = () => {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach(path => {
    var getRequest = files.get(path);
    getRequest.onsuccess = () => {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = () => {
     fail++;
     if (ok + fail == total) finish();
    };
   });
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 },
 absolutePath: () => {
  abort("FS.absolutePath has been removed; use PATH_FS.resolve instead");
 },
 createFolder: () => {
  abort("FS.createFolder has been removed; use FS.mkdir instead");
 },
 createLink: () => {
  abort("FS.createLink has been removed; use FS.symlink instead");
 },
 joinPath: () => {
  abort("FS.joinPath has been removed; use PATH.join instead");
 },
 mmapAlloc: () => {
  abort("FS.mmapAlloc has been replaced by the top level function mmapAlloc");
 },
 standardizePath: () => {
  abort("FS.standardizePath has been removed; use PATH.normalize instead");
 }
};

var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 calculateAt: function(dirfd, path, allowEmpty) {
  if (PATH.isAbs(path)) {
   return path;
  }
  var dir;
  if (dirfd === -100) {
   dir = FS.cwd();
  } else {
   var dirstream = SYSCALLS.getStreamFromFD(dirfd);
   dir = dirstream.path;
  }
  if (path.length == 0) {
   if (!allowEmpty) {
    throw new FS.ErrnoError(44);
   }
   return dir;
  }
  return PATH.join2(dir, path);
 },
 doStat: function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -54;
   }
   throw e;
  }
  _asan_js_store_4(buf >> 2, stat.dev);
  _asan_js_store_4(buf + 8 >> 2, stat.ino);
  _asan_js_store_4(buf + 12 >> 2, stat.mode);
  _asan_js_store_4u(buf + 16 >> 2, stat.nlink);
  _asan_js_store_4(buf + 20 >> 2, stat.uid);
  _asan_js_store_4(buf + 24 >> 2, stat.gid);
  _asan_js_store_4(buf + 28 >> 2, stat.rdev);
  tempI64 = [ stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  _asan_js_store_4(buf + 40 >> 2, tempI64[0]), _asan_js_store_4(buf + 44 >> 2, tempI64[1]);
  _asan_js_store_4(buf + 48 >> 2, 4096);
  _asan_js_store_4(buf + 52 >> 2, stat.blocks);
  var atime = stat.atime.getTime();
  var mtime = stat.mtime.getTime();
  var ctime = stat.ctime.getTime();
  tempI64 = [ Math.floor(atime / 1e3) >>> 0, (tempDouble = Math.floor(atime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  _asan_js_store_4(buf + 56 >> 2, tempI64[0]), _asan_js_store_4(buf + 60 >> 2, tempI64[1]);
  _asan_js_store_4u(buf + 64 >> 2, atime % 1e3 * 1e3);
  tempI64 = [ Math.floor(mtime / 1e3) >>> 0, (tempDouble = Math.floor(mtime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  _asan_js_store_4(buf + 72 >> 2, tempI64[0]), _asan_js_store_4(buf + 76 >> 2, tempI64[1]);
  _asan_js_store_4u(buf + 80 >> 2, mtime % 1e3 * 1e3);
  tempI64 = [ Math.floor(ctime / 1e3) >>> 0, (tempDouble = Math.floor(ctime / 1e3), 
  +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  _asan_js_store_4(buf + 88 >> 2, tempI64[0]), _asan_js_store_4(buf + 92 >> 2, tempI64[1]);
  _asan_js_store_4u(buf + 96 >> 2, ctime % 1e3 * 1e3);
  tempI64 = [ stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  _asan_js_store_4(buf + 104 >> 2, tempI64[0]), _asan_js_store_4(buf + 108 >> 2, tempI64[1]);
  return 0;
 },
 doMsync: function(addr, stream, len, flags, offset) {
  if (!FS.isFile(stream.node.mode)) {
   throw new FS.ErrnoError(43);
  }
  if (flags & 2) {
   return 0;
  }
  var buffer = HEAPU8.slice(addr, addr + len);
  FS.msync(stream, buffer, offset, len, flags);
 },
 varargs: undefined,
 get: function() {
  assert(SYSCALLS.varargs != undefined);
  SYSCALLS.varargs += 4;
  var ret = _asan_js_load_4(SYSCALLS.varargs - 4 >> 2);
  return ret;
 },
 getStr: function(ptr) {
  var ret = UTF8ToString(ptr);
  return ret;
 },
 getStreamFromFD: function(fd) {
  var stream = FS.getStream(fd);
  if (!stream) throw new FS.ErrnoError(8);
  return stream;
 }
};

function ___syscall_dup(fd) {
 try {
  var old = SYSCALLS.getStreamFromFD(fd);
  return FS.createStream(old, 0).fd;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function setErrNo(value) {
 _asan_js_store_4(___errno_location() >> 2, value);
 return value;
}

function ___syscall_fcntl64(fd, cmd, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  switch (cmd) {
  case 0:
   {
    var arg = SYSCALLS.get();
    if (arg < 0) {
     return -28;
    }
    var newStream;
    newStream = FS.createStream(stream, arg);
    return newStream.fd;
   }

  case 1:
  case 2:
   return 0;

  case 3:
   return stream.flags;

  case 4:
   {
    var arg = SYSCALLS.get();
    stream.flags |= arg;
    return 0;
   }

  case 5:
   {
    var arg = SYSCALLS.get();
    var offset = 0;
    _asan_js_store_2(arg + offset >> 1, 2);
    return 0;
   }

  case 6:
  case 7:
   return 0;

  case 16:
  case 8:
   return -28;

  case 9:
   setErrNo(28);
   return -1;

  default:
   {
    return -28;
   }
  }
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_ioctl(fd, op, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  switch (op) {
  case 21509:
  case 21505:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21510:
  case 21511:
  case 21512:
  case 21506:
  case 21507:
  case 21508:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21519:
   {
    if (!stream.tty) return -59;
    var argp = SYSCALLS.get();
    _asan_js_store_4(argp >> 2, 0);
    return 0;
   }

  case 21520:
   {
    if (!stream.tty) return -59;
    return -28;
   }

  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }

  case 21523:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  case 21524:
   {
    if (!stream.tty) return -59;
    return 0;
   }

  default:
   return -28;
  }
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_mkdirat(dirfd, path, mode) {
 try {
  path = SYSCALLS.getStr(path);
  path = SYSCALLS.calculateAt(dirfd, path);
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_openat(dirfd, path, flags, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  path = SYSCALLS.getStr(path);
  path = SYSCALLS.calculateAt(dirfd, path);
  var mode = varargs ? SYSCALLS.get() : 0;
  return FS.open(path, flags, mode).fd;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function ___syscall_stat64(path, buf) {
 try {
  path = SYSCALLS.getStr(path);
  return SYSCALLS.doStat(FS.stat, path, buf);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

var structRegistrations = {};

function runDestructors(destructors) {
 while (destructors.length) {
  var ptr = destructors.pop();
  var del = destructors.pop();
  del(ptr);
 }
}

function simpleReadValueFromPointer(pointer) {
 return this["fromWireType"](_asan_js_load_4(pointer >> 2));
}

var awaitingDependencies = {};

var registeredTypes = {};

var typeDependencies = {};

var char_0 = 48;

var char_9 = 57;

function makeLegalFunctionName(name) {
 if (undefined === name) {
  return "_unknown";
 }
 name = name.replace(/[^a-zA-Z0-9_]/g, "$");
 var f = name.charCodeAt(0);
 if (f >= char_0 && f <= char_9) {
  return "_" + name;
 }
 return name;
}

function createNamedFunction(name, body) {
 name = makeLegalFunctionName(name);
 return {
  [name]: function() {
   return body.apply(this, arguments);
  }
 }[name];
}

function extendError(baseErrorType, errorName) {
 var errorClass = createNamedFunction(errorName, function(message) {
  this.name = errorName;
  this.message = message;
  var stack = new Error(message).stack;
  if (stack !== undefined) {
   this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
  }
 });
 errorClass.prototype = Object.create(baseErrorType.prototype);
 errorClass.prototype.constructor = errorClass;
 errorClass.prototype.toString = function() {
  if (this.message === undefined) {
   return this.name;
  } else {
   return this.name + ": " + this.message;
  }
 };
 return errorClass;
}

var InternalError = undefined;

function throwInternalError(message) {
 throw new InternalError(message);
}

function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
 myTypes.forEach(function(type) {
  typeDependencies[type] = dependentTypes;
 });
 function onComplete(typeConverters) {
  var myTypeConverters = getTypeConverters(typeConverters);
  if (myTypeConverters.length !== myTypes.length) {
   throwInternalError("Mismatched type converter count");
  }
  for (var i = 0; i < myTypes.length; ++i) {
   registerType(myTypes[i], myTypeConverters[i]);
  }
 }
 var typeConverters = new Array(dependentTypes.length);
 var unregisteredTypes = [];
 var registered = 0;
 dependentTypes.forEach((dt, i) => {
  if (registeredTypes.hasOwnProperty(dt)) {
   typeConverters[i] = registeredTypes[dt];
  } else {
   unregisteredTypes.push(dt);
   if (!awaitingDependencies.hasOwnProperty(dt)) {
    awaitingDependencies[dt] = [];
   }
   awaitingDependencies[dt].push(() => {
    typeConverters[i] = registeredTypes[dt];
    ++registered;
    if (registered === unregisteredTypes.length) {
     onComplete(typeConverters);
    }
   });
  }
 });
 if (0 === unregisteredTypes.length) {
  onComplete(typeConverters);
 }
}

function __embind_finalize_value_object(structType) {
 var reg = structRegistrations[structType];
 delete structRegistrations[structType];
 var rawConstructor = reg.rawConstructor;
 var rawDestructor = reg.rawDestructor;
 var fieldRecords = reg.fields;
 var fieldTypes = fieldRecords.map(field => field.getterReturnType).concat(fieldRecords.map(field => field.setterArgumentType));
 whenDependentTypesAreResolved([ structType ], fieldTypes, fieldTypes => {
  var fields = {};
  fieldRecords.forEach((field, i) => {
   var fieldName = field.fieldName;
   var getterReturnType = fieldTypes[i];
   var getter = field.getter;
   var getterContext = field.getterContext;
   var setterArgumentType = fieldTypes[i + fieldRecords.length];
   var setter = field.setter;
   var setterContext = field.setterContext;
   fields[fieldName] = {
    read: ptr => {
     return getterReturnType["fromWireType"](getter(getterContext, ptr));
    },
    write: (ptr, o) => {
     var destructors = [];
     setter(setterContext, ptr, setterArgumentType["toWireType"](destructors, o));
     runDestructors(destructors);
    }
   };
  });
  return [ {
   name: reg.name,
   "fromWireType": function(ptr) {
    var rv = {};
    for (var i in fields) {
     rv[i] = fields[i].read(ptr);
    }
    rawDestructor(ptr);
    return rv;
   },
   "toWireType": function(destructors, o) {
    for (var fieldName in fields) {
     if (!(fieldName in o)) {
      throw new TypeError('Missing field:  "' + fieldName + '"');
     }
    }
    var ptr = rawConstructor();
    for (fieldName in fields) {
     fields[fieldName].write(ptr, o[fieldName]);
    }
    if (destructors !== null) {
     destructors.push(rawDestructor, ptr);
    }
    return ptr;
   },
   "argPackAdvance": 8,
   "readValueFromPointer": simpleReadValueFromPointer,
   destructorFunction: rawDestructor
  } ];
 });
}

function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}

function getShiftFromSize(size) {
 switch (size) {
 case 1:
  return 0;

 case 2:
  return 1;

 case 4:
  return 2;

 case 8:
  return 3;

 default:
  throw new TypeError("Unknown type size: " + size);
 }
}

function embind_init_charCodes() {
 var codes = new Array(256);
 for (var i = 0; i < 256; ++i) {
  codes[i] = String.fromCharCode(i);
 }
 embind_charCodes = codes;
}

var embind_charCodes = undefined;

function readLatin1String(ptr) {
 var ret = "";
 var c = ptr;
 while (_asan_js_load_1u(c)) {
  ret += embind_charCodes[_asan_js_load_1u(c++)];
 }
 return ret;
}

var BindingError = undefined;

function throwBindingError(message) {
 throw new BindingError(message);
}

function registerType(rawType, registeredInstance, options = {}) {
 if (!("argPackAdvance" in registeredInstance)) {
  throw new TypeError("registerType registeredInstance requires argPackAdvance");
 }
 var name = registeredInstance.name;
 if (!rawType) {
  throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
 }
 if (registeredTypes.hasOwnProperty(rawType)) {
  if (options.ignoreDuplicateRegistrations) {
   return;
  } else {
   throwBindingError("Cannot register type '" + name + "' twice");
  }
 }
 registeredTypes[rawType] = registeredInstance;
 delete typeDependencies[rawType];
 if (awaitingDependencies.hasOwnProperty(rawType)) {
  var callbacks = awaitingDependencies[rawType];
  delete awaitingDependencies[rawType];
  callbacks.forEach(cb => cb());
 }
}

function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(wt) {
   return !!wt;
  },
  "toWireType": function(destructors, o) {
   return o ? trueValue : falseValue;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": function(pointer) {
   var heap;
   if (size === 1) {
    heap = HEAP8;
   } else if (size === 2) {
    heap = HEAP16;
   } else if (size === 4) {
    heap = HEAP32;
   } else {
    throw new TypeError("Unknown boolean type size: " + name);
   }
   return this["fromWireType"](heap[pointer >> shift]);
  },
  destructorFunction: null
 });
}

function ClassHandle_isAliasOf(other) {
 if (!(this instanceof ClassHandle)) {
  return false;
 }
 if (!(other instanceof ClassHandle)) {
  return false;
 }
 var leftClass = this.$$.ptrType.registeredClass;
 var left = this.$$.ptr;
 var rightClass = other.$$.ptrType.registeredClass;
 var right = other.$$.ptr;
 while (leftClass.baseClass) {
  left = leftClass.upcast(left);
  leftClass = leftClass.baseClass;
 }
 while (rightClass.baseClass) {
  right = rightClass.upcast(right);
  rightClass = rightClass.baseClass;
 }
 return leftClass === rightClass && left === right;
}

function shallowCopyInternalPointer(o) {
 return {
  count: o.count,
  deleteScheduled: o.deleteScheduled,
  preservePointerOnDelete: o.preservePointerOnDelete,
  ptr: o.ptr,
  ptrType: o.ptrType,
  smartPtr: o.smartPtr,
  smartPtrType: o.smartPtrType
 };
}

function throwInstanceAlreadyDeleted(obj) {
 function getInstanceTypeName(handle) {
  return handle.$$.ptrType.registeredClass.name;
 }
 throwBindingError(getInstanceTypeName(obj) + " instance already deleted");
}

var finalizationRegistry = false;

function detachFinalizer(handle) {}

function runDestructor($$) {
 if ($$.smartPtr) {
  $$.smartPtrType.rawDestructor($$.smartPtr);
 } else {
  $$.ptrType.registeredClass.rawDestructor($$.ptr);
 }
}

function releaseClassHandle($$) {
 $$.count.value -= 1;
 var toDelete = 0 === $$.count.value;
 if (toDelete) {
  runDestructor($$);
 }
}

function downcastPointer(ptr, ptrClass, desiredClass) {
 if (ptrClass === desiredClass) {
  return ptr;
 }
 if (undefined === desiredClass.baseClass) {
  return null;
 }
 var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
 if (rv === null) {
  return null;
 }
 return desiredClass.downcast(rv);
}

var registeredPointers = {};

function getInheritedInstanceCount() {
 return Object.keys(registeredInstances).length;
}

function getLiveInheritedInstances() {
 var rv = [];
 for (var k in registeredInstances) {
  if (registeredInstances.hasOwnProperty(k)) {
   rv.push(registeredInstances[k]);
  }
 }
 return rv;
}

var deletionQueue = [];

function flushPendingDeletes() {
 while (deletionQueue.length) {
  var obj = deletionQueue.pop();
  obj.$$.deleteScheduled = false;
  obj["delete"]();
 }
}

var delayFunction = undefined;

function setDelayFunction(fn) {
 delayFunction = fn;
 if (deletionQueue.length && delayFunction) {
  delayFunction(flushPendingDeletes);
 }
}

function init_embind() {
 Module["getInheritedInstanceCount"] = getInheritedInstanceCount;
 Module["getLiveInheritedInstances"] = getLiveInheritedInstances;
 Module["flushPendingDeletes"] = flushPendingDeletes;
 Module["setDelayFunction"] = setDelayFunction;
}

var registeredInstances = {};

function getBasestPointer(class_, ptr) {
 if (ptr === undefined) {
  throwBindingError("ptr should not be undefined");
 }
 while (class_.baseClass) {
  ptr = class_.upcast(ptr);
  class_ = class_.baseClass;
 }
 return ptr;
}

function getInheritedInstance(class_, ptr) {
 ptr = getBasestPointer(class_, ptr);
 return registeredInstances[ptr];
}

function makeClassHandle(prototype, record) {
 if (!record.ptrType || !record.ptr) {
  throwInternalError("makeClassHandle requires ptr and ptrType");
 }
 var hasSmartPtrType = !!record.smartPtrType;
 var hasSmartPtr = !!record.smartPtr;
 if (hasSmartPtrType !== hasSmartPtr) {
  throwInternalError("Both smartPtrType and smartPtr must be specified");
 }
 record.count = {
  value: 1
 };
 return attachFinalizer(Object.create(prototype, {
  $$: {
   value: record
  }
 }));
}

function RegisteredPointer_fromWireType(ptr) {
 var rawPointer = this.getPointee(ptr);
 if (!rawPointer) {
  this.destructor(ptr);
  return null;
 }
 var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);
 if (undefined !== registeredInstance) {
  if (0 === registeredInstance.$$.count.value) {
   registeredInstance.$$.ptr = rawPointer;
   registeredInstance.$$.smartPtr = ptr;
   return registeredInstance["clone"]();
  } else {
   var rv = registeredInstance["clone"]();
   this.destructor(ptr);
   return rv;
  }
 }
 function makeDefaultHandle() {
  if (this.isSmartPointer) {
   return makeClassHandle(this.registeredClass.instancePrototype, {
    ptrType: this.pointeeType,
    ptr: rawPointer,
    smartPtrType: this,
    smartPtr: ptr
   });
  } else {
   return makeClassHandle(this.registeredClass.instancePrototype, {
    ptrType: this,
    ptr: ptr
   });
  }
 }
 var actualType = this.registeredClass.getActualType(rawPointer);
 var registeredPointerRecord = registeredPointers[actualType];
 if (!registeredPointerRecord) {
  return makeDefaultHandle.call(this);
 }
 var toType;
 if (this.isConst) {
  toType = registeredPointerRecord.constPointerType;
 } else {
  toType = registeredPointerRecord.pointerType;
 }
 var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);
 if (dp === null) {
  return makeDefaultHandle.call(this);
 }
 if (this.isSmartPointer) {
  return makeClassHandle(toType.registeredClass.instancePrototype, {
   ptrType: toType,
   ptr: dp,
   smartPtrType: this,
   smartPtr: ptr
  });
 } else {
  return makeClassHandle(toType.registeredClass.instancePrototype, {
   ptrType: toType,
   ptr: dp
  });
 }
}

function attachFinalizer(handle) {
 if ("undefined" === typeof FinalizationRegistry) {
  attachFinalizer = handle => handle;
  return handle;
 }
 finalizationRegistry = new FinalizationRegistry(info => {
  console.warn(info.leakWarning.stack.replace(/^Error: /, ""));
  releaseClassHandle(info.$$);
 });
 attachFinalizer = handle => {
  var $$ = handle.$$;
  var hasSmartPtr = !!$$.smartPtr;
  if (hasSmartPtr) {
   var info = {
    $$: $$
   };
   var cls = $$.ptrType.registeredClass;
   info.leakWarning = new Error("Embind found a leaked C++ instance " + cls.name + " <" + ptrToString($$.ptr) + ">.\n" + "We'll free it automatically in this case, but this functionality is not reliable across various environments.\n" + "Make sure to invoke .delete() manually once you're done with the instance instead.\n" + "Originally allocated");
   if ("captureStackTrace" in Error) {
    Error.captureStackTrace(info.leakWarning, RegisteredPointer_fromWireType);
   }
   finalizationRegistry.register(handle, info, handle);
  }
  return handle;
 };
 detachFinalizer = handle => finalizationRegistry.unregister(handle);
 return attachFinalizer(handle);
}

function ClassHandle_clone() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.preservePointerOnDelete) {
  this.$$.count.value += 1;
  return this;
 } else {
  var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {
   $$: {
    value: shallowCopyInternalPointer(this.$$)
   }
  }));
  clone.$$.count.value += 1;
  clone.$$.deleteScheduled = false;
  return clone;
 }
}

function ClassHandle_delete() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
  throwBindingError("Object already scheduled for deletion");
 }
 detachFinalizer(this);
 releaseClassHandle(this.$$);
 if (!this.$$.preservePointerOnDelete) {
  this.$$.smartPtr = undefined;
  this.$$.ptr = undefined;
 }
}

function ClassHandle_isDeleted() {
 return !this.$$.ptr;
}

function ClassHandle_deleteLater() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
  throwBindingError("Object already scheduled for deletion");
 }
 deletionQueue.push(this);
 if (deletionQueue.length === 1 && delayFunction) {
  delayFunction(flushPendingDeletes);
 }
 this.$$.deleteScheduled = true;
 return this;
}

function init_ClassHandle() {
 ClassHandle.prototype["isAliasOf"] = ClassHandle_isAliasOf;
 ClassHandle.prototype["clone"] = ClassHandle_clone;
 ClassHandle.prototype["delete"] = ClassHandle_delete;
 ClassHandle.prototype["isDeleted"] = ClassHandle_isDeleted;
 ClassHandle.prototype["deleteLater"] = ClassHandle_deleteLater;
}

function ClassHandle() {}

function ensureOverloadTable(proto, methodName, humanName) {
 if (undefined === proto[methodName].overloadTable) {
  var prevFunc = proto[methodName];
  proto[methodName] = function() {
   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
    throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
   }
   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
  };
  proto[methodName].overloadTable = [];
  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
 }
}

function exposePublicSymbol(name, value, numArguments) {
 if (Module.hasOwnProperty(name)) {
  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
   throwBindingError("Cannot register public name '" + name + "' twice");
  }
  ensureOverloadTable(Module, name, name);
  if (Module.hasOwnProperty(numArguments)) {
   throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
  }
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  if (undefined !== numArguments) {
   Module[name].numArguments = numArguments;
  }
 }
}

function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {
 this.name = name;
 this.constructor = constructor;
 this.instancePrototype = instancePrototype;
 this.rawDestructor = rawDestructor;
 this.baseClass = baseClass;
 this.getActualType = getActualType;
 this.upcast = upcast;
 this.downcast = downcast;
 this.pureVirtualFunctions = [];
}

function upcastPointer(ptr, ptrClass, desiredClass) {
 while (ptrClass !== desiredClass) {
  if (!ptrClass.upcast) {
   throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
  }
  ptr = ptrClass.upcast(ptr);
  ptrClass = ptrClass.baseClass;
 }
 return ptr;
}

function constNoSmartPtrRawPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  return 0;
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + embindRepr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 return ptr;
}

function genericPointerToWireType(destructors, handle) {
 var ptr;
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  if (this.isSmartPointer) {
   ptr = this.rawConstructor();
   if (destructors !== null) {
    destructors.push(this.rawDestructor, ptr);
   }
   return ptr;
  } else {
   return 0;
  }
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + embindRepr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 if (!this.isConst && handle.$$.ptrType.isConst) {
  throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 if (this.isSmartPointer) {
  if (undefined === handle.$$.smartPtr) {
   throwBindingError("Passing raw pointer to smart pointer is illegal");
  }
  switch (this.sharingPolicy) {
  case 0:
   if (handle.$$.smartPtrType === this) {
    ptr = handle.$$.smartPtr;
   } else {
    throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
   }
   break;

  case 1:
   ptr = handle.$$.smartPtr;
   break;

  case 2:
   if (handle.$$.smartPtrType === this) {
    ptr = handle.$$.smartPtr;
   } else {
    var clonedHandle = handle["clone"]();
    ptr = this.rawShare(ptr, Emval.toHandle(function() {
     clonedHandle["delete"]();
    }));
    if (destructors !== null) {
     destructors.push(this.rawDestructor, ptr);
    }
   }
   break;

  default:
   throwBindingError("Unsupporting sharing policy");
  }
 }
 return ptr;
}

function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  return 0;
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + embindRepr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 if (handle.$$.ptrType.isConst) {
  throwBindingError("Cannot convert argument of type " + handle.$$.ptrType.name + " to parameter type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 return ptr;
}

function RegisteredPointer_getPointee(ptr) {
 if (this.rawGetPointee) {
  ptr = this.rawGetPointee(ptr);
 }
 return ptr;
}

function RegisteredPointer_destructor(ptr) {
 if (this.rawDestructor) {
  this.rawDestructor(ptr);
 }
}

function RegisteredPointer_deleteObject(handle) {
 if (handle !== null) {
  handle["delete"]();
 }
}

function init_RegisteredPointer() {
 RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
 RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
 RegisteredPointer.prototype["argPackAdvance"] = 8;
 RegisteredPointer.prototype["readValueFromPointer"] = simpleReadValueFromPointer;
 RegisteredPointer.prototype["deleteObject"] = RegisteredPointer_deleteObject;
 RegisteredPointer.prototype["fromWireType"] = RegisteredPointer_fromWireType;
}

function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {
 this.name = name;
 this.registeredClass = registeredClass;
 this.isReference = isReference;
 this.isConst = isConst;
 this.isSmartPointer = isSmartPointer;
 this.pointeeType = pointeeType;
 this.sharingPolicy = sharingPolicy;
 this.rawGetPointee = rawGetPointee;
 this.rawConstructor = rawConstructor;
 this.rawShare = rawShare;
 this.rawDestructor = rawDestructor;
 if (!isSmartPointer && registeredClass.baseClass === undefined) {
  if (isConst) {
   this["toWireType"] = constNoSmartPtrRawPointerToWireType;
   this.destructorFunction = null;
  } else {
   this["toWireType"] = nonConstNoSmartPtrRawPointerToWireType;
   this.destructorFunction = null;
  }
 } else {
  this["toWireType"] = genericPointerToWireType;
 }
}

function replacePublicSymbol(name, value, numArguments) {
 if (!Module.hasOwnProperty(name)) {
  throwInternalError("Replacing nonexistant public symbol");
 }
 if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  Module[name].argCount = numArguments;
 }
}

function dynCallLegacy(sig, ptr, args) {
 assert("dynCall_" + sig in Module, "bad function pointer type - dynCall function not found for sig '" + sig + "'");
 if (args && args.length) {
  assert(args.length === sig.substring(1).replace(/j/g, "--").length);
 } else {
  assert(sig.length == 1);
 }
 var f = Module["dynCall_" + sig];
 return args && args.length ? f.apply(null, [ ptr ].concat(args)) : f.call(null, ptr);
}

function getWasmTableEntry(funcPtr) {
 return wasmTable.get(funcPtr);
}

function dynCall(sig, ptr, args) {
 if (sig.includes("j")) {
  return dynCallLegacy(sig, ptr, args);
 }
 assert(getWasmTableEntry(ptr), "missing table entry in dynCall: " + ptr);
 var rtn = getWasmTableEntry(ptr).apply(null, args);
 return rtn;
}

function getDynCaller(sig, ptr) {
 assert(sig.includes("j") || sig.includes("p"), "getDynCaller should only be called with i64 sigs");
 var argCache = [];
 return function() {
  argCache.length = 0;
  Object.assign(argCache, arguments);
  return dynCall(sig, ptr, argCache);
 };
}

function embind__requireFunction(signature, rawFunction) {
 signature = readLatin1String(signature);
 function makeDynCaller() {
  if (signature.includes("j")) {
   return getDynCaller(signature, rawFunction);
  }
  return getWasmTableEntry(rawFunction);
 }
 var fp = makeDynCaller();
 if (typeof fp != "function") {
  throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
 }
 return fp;
}

var UnboundTypeError = undefined;

function getTypeName(type) {
 var ptr = ___getTypeName(type);
 var rv = readLatin1String(ptr);
 _free(ptr);
 return rv;
}

function throwUnboundTypeError(message, types) {
 var unboundTypes = [];
 var seen = {};
 function visit(type) {
  if (seen[type]) {
   return;
  }
  if (registeredTypes[type]) {
   return;
  }
  if (typeDependencies[type]) {
   typeDependencies[type].forEach(visit);
   return;
  }
  unboundTypes.push(type);
  seen[type] = true;
 }
 types.forEach(visit);
 throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([ ", " ]));
}

function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {
 name = readLatin1String(name);
 getActualType = embind__requireFunction(getActualTypeSignature, getActualType);
 if (upcast) {
  upcast = embind__requireFunction(upcastSignature, upcast);
 }
 if (downcast) {
  downcast = embind__requireFunction(downcastSignature, downcast);
 }
 rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);
 var legalFunctionName = makeLegalFunctionName(name);
 exposePublicSymbol(legalFunctionName, function() {
  throwUnboundTypeError("Cannot construct " + name + " due to unbound types", [ baseClassRawType ]);
 });
 whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], function(base) {
  base = base[0];
  var baseClass;
  var basePrototype;
  if (baseClassRawType) {
   baseClass = base.registeredClass;
   basePrototype = baseClass.instancePrototype;
  } else {
   basePrototype = ClassHandle.prototype;
  }
  var constructor = createNamedFunction(legalFunctionName, function() {
   if (Object.getPrototypeOf(this) !== instancePrototype) {
    throw new BindingError("Use 'new' to construct " + name);
   }
   if (undefined === registeredClass.constructor_body) {
    throw new BindingError(name + " has no accessible constructor");
   }
   var body = registeredClass.constructor_body[arguments.length];
   if (undefined === body) {
    throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
   }
   return body.apply(this, arguments);
  });
  var instancePrototype = Object.create(basePrototype, {
   constructor: {
    value: constructor
   }
  });
  constructor.prototype = instancePrototype;
  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);
  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);
  var pointerConverter = new RegisteredPointer(name + "*", registeredClass, false, false, false);
  var constPointerConverter = new RegisteredPointer(name + " const*", registeredClass, false, true, false);
  registeredPointers[rawType] = {
   pointerType: pointerConverter,
   constPointerType: constPointerConverter
  };
  replacePublicSymbol(legalFunctionName, constructor);
  return [ referenceConverter, pointerConverter, constPointerConverter ];
 });
}

function heap32VectorToArray(count, firstElement) {
 var array = [];
 for (var i = 0; i < count; i++) {
  array.push(_asan_js_load_4u(firstElement + i * 4 >> 2));
 }
 return array;
}

function new_(constructor, argumentList) {
 if (!(constructor instanceof Function)) {
  throw new TypeError("new_ called with constructor type " + typeof constructor + " which is not a function");
 }
 var dummy = createNamedFunction(constructor.name || "unknownFunctionName", function() {});
 dummy.prototype = constructor.prototype;
 var obj = new dummy();
 var r = constructor.apply(obj, argumentList);
 return r instanceof Object ? r : obj;
}

function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
 var argCount = argTypes.length;
 if (argCount < 2) {
  throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
 }
 var isClassMethodFunc = argTypes[1] !== null && classType !== null;
 var needsDestructorStack = false;
 for (var i = 1; i < argTypes.length; ++i) {
  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
   needsDestructorStack = true;
   break;
  }
 }
 var returns = argTypes[0].name !== "void";
 var argsList = "";
 var argsListWired = "";
 for (var i = 0; i < argCount - 2; ++i) {
  argsList += (i !== 0 ? ", " : "") + "arg" + i;
  argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
 }
 var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";
 if (needsDestructorStack) {
  invokerFnBody += "var destructors = [];\n";
 }
 var dtorStack = needsDestructorStack ? "destructors" : "null";
 var args1 = [ "throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam" ];
 var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];
 if (isClassMethodFunc) {
  invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
 }
 for (var i = 0; i < argCount - 2; ++i) {
  invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
  args1.push("argType" + i);
  args2.push(argTypes[i + 2]);
 }
 if (isClassMethodFunc) {
  argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
 }
 invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";
 if (needsDestructorStack) {
  invokerFnBody += "runDestructors(destructors);\n";
 } else {
  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
   var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";
   if (argTypes[i].destructorFunction !== null) {
    invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
    args1.push(paramName + "_dtor");
    args2.push(argTypes[i].destructorFunction);
   }
  }
 }
 if (returns) {
  invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
 } else {}
 invokerFnBody += "}\n";
 args1.push(invokerFnBody);
 var invokerFunction = new_(Function, args1).apply(null, args2);
 return invokerFunction;
}

function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {
 assert(argCount > 0);
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 invoker = embind__requireFunction(invokerSignature, invoker);
 var args = [ rawConstructor ];
 var destructors = [];
 whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {
  classType = classType[0];
  var humanName = "constructor " + classType.name;
  if (undefined === classType.registeredClass.constructor_body) {
   classType.registeredClass.constructor_body = [];
  }
  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
   throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount - 1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
  }
  classType.registeredClass.constructor_body[argCount - 1] = () => {
   throwUnboundTypeError("Cannot construct " + classType.name + " due to unbound types", rawArgTypes);
  };
  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
   argTypes.splice(1, 0, null);
   classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);
   return [];
  });
  return [];
 });
}

function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 methodName = readLatin1String(methodName);
 rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);
 whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {
  classType = classType[0];
  var humanName = classType.name + "." + methodName;
  if (methodName.startsWith("@@")) {
   methodName = Symbol[methodName.substring(2)];
  }
  if (isPureVirtual) {
   classType.registeredClass.pureVirtualFunctions.push(methodName);
  }
  function unboundTypesHandler() {
   throwUnboundTypeError("Cannot call " + humanName + " due to unbound types", rawArgTypes);
  }
  var proto = classType.registeredClass.instancePrototype;
  var method = proto[methodName];
  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {
   unboundTypesHandler.argCount = argCount - 2;
   unboundTypesHandler.className = classType.name;
   proto[methodName] = unboundTypesHandler;
  } else {
   ensureOverloadTable(proto, methodName, humanName);
   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
  }
  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);
   if (undefined === proto[methodName].overloadTable) {
    memberFunction.argCount = argCount - 2;
    proto[methodName] = memberFunction;
   } else {
    proto[methodName].overloadTable[argCount - 2] = memberFunction;
   }
   return [];
  });
  return [];
 });
}

function __embind_register_constant(name, type, value) {
 name = readLatin1String(name);
 whenDependentTypesAreResolved([], [ type ], function(type) {
  type = type[0];
  Module[name] = type["fromWireType"](value);
  return [];
 });
}

var emval_free_list = [];

var emval_handle_array = [ {}, {
 value: undefined
}, {
 value: null
}, {
 value: true
}, {
 value: false
} ];

function __emval_decref(handle) {
 if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
  emval_handle_array[handle] = undefined;
  emval_free_list.push(handle);
 }
}

function count_emval_handles() {
 var count = 0;
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   ++count;
  }
 }
 return count;
}

function get_first_emval() {
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   return emval_handle_array[i];
  }
 }
 return null;
}

function init_emval() {
 Module["count_emval_handles"] = count_emval_handles;
 Module["get_first_emval"] = get_first_emval;
}

var Emval = {
 toValue: handle => {
  if (!handle) {
   throwBindingError("Cannot use deleted val. handle = " + handle);
  }
  return emval_handle_array[handle].value;
 },
 toHandle: value => {
  switch (value) {
  case undefined:
   return 1;

  case null:
   return 2;

  case true:
   return 3;

  case false:
   return 4;

  default:
   {
    var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
    emval_handle_array[handle] = {
     refcount: 1,
     value: value
    };
    return handle;
   }
  }
 }
};

function __embind_register_emval(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(handle) {
   var rv = Emval.toValue(handle);
   __emval_decref(handle);
   return rv;
  },
  "toWireType": function(destructors, value) {
   return Emval.toHandle(value);
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: null
 });
}

function embindRepr(v) {
 if (v === null) {
  return "null";
 }
 var t = typeof v;
 if (t === "object" || t === "array" || t === "function") {
  return v.toString();
 } else {
  return "" + v;
 }
}

function floatReadValueFromPointer(name, shift) {
 switch (shift) {
 case 2:
  return function(pointer) {
   return this["fromWireType"](_asan_js_load_f(pointer >> 2));
  };

 case 3:
  return function(pointer) {
   return this["fromWireType"](_asan_js_load_d(pointer >> 3));
  };

 default:
  throw new TypeError("Unknown float type: " + name);
 }
}

function __embind_register_float(rawType, name, size) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   return value;
  },
  "toWireType": function(destructors, value) {
   if (typeof value != "number" && typeof value != "boolean") {
    throw new TypeError('Cannot convert "' + embindRepr(value) + '" to ' + this.name);
   }
   return value;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": floatReadValueFromPointer(name, shift),
  destructorFunction: null
 });
}

function integerReadValueFromPointer(name, shift, signed) {
 switch (shift) {
 case 0:
  return signed ? function readS8FromPointer(pointer) {
   return _asan_js_load_1(pointer);
  } : function readU8FromPointer(pointer) {
   return _asan_js_load_1u(pointer);
  };

 case 1:
  return signed ? function readS16FromPointer(pointer) {
   return _asan_js_load_2(pointer >> 1);
  } : function readU16FromPointer(pointer) {
   return _asan_js_load_2u(pointer >> 1);
  };

 case 2:
  return signed ? function readS32FromPointer(pointer) {
   return _asan_js_load_4(pointer >> 2);
  } : function readU32FromPointer(pointer) {
   return _asan_js_load_4u(pointer >> 2);
  };

 default:
  throw new TypeError("Unknown integer type: " + name);
 }
}

function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
 name = readLatin1String(name);
 if (maxRange === -1) {
  maxRange = 4294967295;
 }
 var shift = getShiftFromSize(size);
 var fromWireType = value => value;
 if (minRange === 0) {
  var bitshift = 32 - 8 * size;
  fromWireType = value => value << bitshift >>> bitshift;
 }
 var isUnsignedType = name.includes("unsigned");
 var checkAssertions = (value, toTypeName) => {
  if (typeof value != "number" && typeof value != "boolean") {
   throw new TypeError('Cannot convert "' + embindRepr(value) + '" to ' + toTypeName);
  }
  if (value < minRange || value > maxRange) {
   throw new TypeError('Passing a number "' + embindRepr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
  }
 };
 var toWireType;
 if (isUnsignedType) {
  toWireType = function(destructors, value) {
   checkAssertions(value, this.name);
   return value >>> 0;
  };
 } else {
  toWireType = function(destructors, value) {
   checkAssertions(value, this.name);
   return value;
  };
 }
 registerType(primitiveType, {
  name: name,
  "fromWireType": fromWireType,
  "toWireType": toWireType,
  "argPackAdvance": 8,
  "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
  destructorFunction: null
 });
}

function __embind_register_memory_view(rawType, dataTypeIndex, name) {
 var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];
 var TA = typeMapping[dataTypeIndex];
 function decodeMemoryView(handle) {
  handle = handle >> 2;
  var heap = HEAPU32;
  var size = heap[handle];
  var data = heap[handle + 1];
  return new TA(heap.buffer, data, size);
 }
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": decodeMemoryView,
  "argPackAdvance": 8,
  "readValueFromPointer": decodeMemoryView
 }, {
  ignoreDuplicateRegistrations: true
 });
}

function __embind_register_std_string(rawType, name) {
 name = readLatin1String(name);
 var stdStringIsUTF8 = name === "std::string";
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var length = _asan_js_load_4u(value >> 2);
   var payload = value + 4;
   var str;
   if (stdStringIsUTF8) {
    var decodeStartPtr = payload;
    for (var i = 0; i <= length; ++i) {
     var currentBytePtr = payload + i;
     if (i == length || _asan_js_load_1u(currentBytePtr) == 0) {
      var maxRead = currentBytePtr - decodeStartPtr;
      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);
      if (str === undefined) {
       str = stringSegment;
      } else {
       str += String.fromCharCode(0);
       str += stringSegment;
      }
      decodeStartPtr = currentBytePtr + 1;
     }
    }
   } else {
    var a = new Array(length);
    for (var i = 0; i < length; ++i) {
     a[i] = String.fromCharCode(_asan_js_load_1u(payload + i));
    }
    str = a.join("");
   }
   _free(value);
   return str;
  },
  "toWireType": function(destructors, value) {
   if (value instanceof ArrayBuffer) {
    value = new Uint8Array(value);
   }
   var length;
   var valueIsOfTypeString = typeof value == "string";
   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
    throwBindingError("Cannot pass non-string to std::string");
   }
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    length = lengthBytesUTF8(value);
   } else {
    length = value.length;
   }
   var base = _malloc(4 + length + 1);
   var ptr = base + 4;
   _asan_js_store_4u(base >> 2, length);
   if (stdStringIsUTF8 && valueIsOfTypeString) {
    stringToUTF8(value, ptr, length + 1);
   } else {
    if (valueIsOfTypeString) {
     for (var i = 0; i < length; ++i) {
      var charCode = value.charCodeAt(i);
      if (charCode > 255) {
       _free(ptr);
       throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
      }
      _asan_js_store_1u(ptr + i, charCode);
     }
    } else {
     for (var i = 0; i < length; ++i) {
      _asan_js_store_1u(ptr + i, value[i]);
     }
    }
   }
   if (destructors !== null) {
    destructors.push(_free, base);
   }
   return base;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

var UTF16Decoder = typeof TextDecoder != "undefined" ? new TextDecoder("utf-16le") : undefined;

function UTF16ToString(ptr, maxBytesToRead) {
 assert(ptr % 2 == 0, "Pointer passed to UTF16ToString must be aligned to two bytes!");
 var endPtr = ptr;
 var idx = endPtr >> 1;
 var maxIdx = idx + maxBytesToRead / 2;
 while (!(idx >= maxIdx) && _asan_js_load_2u(idx)) ++idx;
 endPtr = idx << 1;
 if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
 var str = "";
 for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {
  var codeUnit = _asan_js_load_2(ptr + i * 2 >> 1);
  if (codeUnit == 0) break;
  str += String.fromCharCode(codeUnit);
 }
 return str;
}

function stringToUTF16(str, outPtr, maxBytesToWrite) {
 assert(outPtr % 2 == 0, "Pointer passed to stringToUTF16 must be aligned to two bytes!");
 assert(typeof maxBytesToWrite == "number", "stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 if (maxBytesToWrite === undefined) {
  maxBytesToWrite = 2147483647;
 }
 if (maxBytesToWrite < 2) return 0;
 maxBytesToWrite -= 2;
 var startPtr = outPtr;
 var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;
 for (var i = 0; i < numCharsToWrite; ++i) {
  var codeUnit = str.charCodeAt(i);
  _asan_js_store_2(outPtr >> 1, codeUnit);
  outPtr += 2;
 }
 _asan_js_store_2(outPtr >> 1, 0);
 return outPtr - startPtr;
}

function lengthBytesUTF16(str) {
 return str.length * 2;
}

function UTF32ToString(ptr, maxBytesToRead) {
 assert(ptr % 4 == 0, "Pointer passed to UTF32ToString must be aligned to four bytes!");
 var i = 0;
 var str = "";
 while (!(i >= maxBytesToRead / 4)) {
  var utf32 = _asan_js_load_4(ptr + i * 4 >> 2);
  if (utf32 == 0) break;
  ++i;
  if (utf32 >= 65536) {
   var ch = utf32 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  } else {
   str += String.fromCharCode(utf32);
  }
 }
 return str;
}

function stringToUTF32(str, outPtr, maxBytesToWrite) {
 assert(outPtr % 4 == 0, "Pointer passed to stringToUTF32 must be aligned to four bytes!");
 assert(typeof maxBytesToWrite == "number", "stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 if (maxBytesToWrite === undefined) {
  maxBytesToWrite = 2147483647;
 }
 if (maxBytesToWrite < 4) return 0;
 var startPtr = outPtr;
 var endPtr = startPtr + maxBytesToWrite - 4;
 for (var i = 0; i < str.length; ++i) {
  var codeUnit = str.charCodeAt(i);
  if (codeUnit >= 55296 && codeUnit <= 57343) {
   var trailSurrogate = str.charCodeAt(++i);
   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;
  }
  _asan_js_store_4(outPtr >> 2, codeUnit);
  outPtr += 4;
  if (outPtr + 4 > endPtr) break;
 }
 _asan_js_store_4(outPtr >> 2, 0);
 return outPtr - startPtr;
}

function lengthBytesUTF32(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var codeUnit = str.charCodeAt(i);
  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;
  len += 4;
 }
 return len;
}

function __embind_register_std_wstring(rawType, charSize, name) {
 name = readLatin1String(name);
 var decodeString, encodeString, getHeap, lengthBytesUTF, shift;
 if (charSize === 2) {
  decodeString = UTF16ToString;
  encodeString = stringToUTF16;
  lengthBytesUTF = lengthBytesUTF16;
  getHeap = () => HEAPU16;
  shift = 1;
 } else if (charSize === 4) {
  decodeString = UTF32ToString;
  encodeString = stringToUTF32;
  lengthBytesUTF = lengthBytesUTF32;
  getHeap = () => HEAPU32;
  shift = 2;
 }
 registerType(rawType, {
  name: name,
  "fromWireType": function(value) {
   var length = _asan_js_load_4u(value >> 2);
   var HEAP = getHeap();
   var str;
   var decodeStartPtr = value + 4;
   for (var i = 0; i <= length; ++i) {
    var currentBytePtr = value + 4 + i * charSize;
    if (i == length || HEAP[currentBytePtr >> shift] == 0) {
     var maxReadBytes = currentBytePtr - decodeStartPtr;
     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);
     if (str === undefined) {
      str = stringSegment;
     } else {
      str += String.fromCharCode(0);
      str += stringSegment;
     }
     decodeStartPtr = currentBytePtr + charSize;
    }
   }
   _free(value);
   return str;
  },
  "toWireType": function(destructors, value) {
   if (!(typeof value == "string")) {
    throwBindingError("Cannot pass non-string to C++ string type " + name);
   }
   var length = lengthBytesUTF(value);
   var ptr = _malloc(4 + length + charSize);
   _asan_js_store_4u(ptr >> 2, length >> shift);
   encodeString(value, ptr + 4, length + charSize);
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  },
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: function(ptr) {
   _free(ptr);
  }
 });
}

function __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {
 structRegistrations[rawType] = {
  name: readLatin1String(name),
  rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),
  rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),
  fields: []
 };
}

function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {
 structRegistrations[structType].fields.push({
  fieldName: readLatin1String(fieldName),
  getterReturnType: getterReturnType,
  getter: embind__requireFunction(getterSignature, getter),
  getterContext: getterContext,
  setterArgumentType: setterArgumentType,
  setter: embind__requireFunction(setterSignature, setter),
  setterContext: setterContext
 });
}

function __embind_register_void(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  isVoid: true,
  name: name,
  "argPackAdvance": 0,
  "fromWireType": function() {
   return undefined;
  },
  "toWireType": function(destructors, o) {
   return undefined;
  }
 });
}

var nowIsMonotonic = true;

function __emscripten_get_now_is_monotonic() {
 return nowIsMonotonic;
}

function __emscripten_throw_longjmp() {
 throw Infinity;
}

function requireRegisteredType(rawType, humanName) {
 var impl = registeredTypes[rawType];
 if (undefined === impl) {
  throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
 }
 return impl;
}

function __emval_as(handle, returnType, destructorsRef) {
 handle = Emval.toValue(handle);
 returnType = requireRegisteredType(returnType, "emval::as");
 var destructors = [];
 var rd = Emval.toHandle(destructors);
 _asan_js_store_4u(destructorsRef >> 2, rd);
 return returnType["toWireType"](destructors, handle);
}

function emval_allocateDestructors(destructorsRef) {
 var destructors = [];
 _asan_js_store_4u(destructorsRef >> 2, Emval.toHandle(destructors));
 return destructors;
}

var emval_symbols = {};

function getStringOrSymbol(address) {
 var symbol = emval_symbols[address];
 if (symbol === undefined) {
  return readLatin1String(address);
 }
 return symbol;
}

var emval_methodCallers = [];

function __emval_call_void_method(caller, handle, methodName, args) {
 caller = emval_methodCallers[caller];
 handle = Emval.toValue(handle);
 methodName = getStringOrSymbol(methodName);
 caller(handle, methodName, null, args);
}

function emval_addMethodCaller(caller) {
 var id = emval_methodCallers.length;
 emval_methodCallers.push(caller);
 return id;
}

function emval_lookupTypes(argCount, argTypes) {
 var a = new Array(argCount);
 for (var i = 0; i < argCount; ++i) {
  a[i] = requireRegisteredType(_asan_js_load_4u(argTypes + i * 4 >> 2), "parameter " + i);
 }
 return a;
}

var emval_registeredMethods = [];

function __emval_get_method_caller(argCount, argTypes) {
 var types = emval_lookupTypes(argCount, argTypes);
 var retType = types[0];
 var signatureName = retType.name + "_$" + types.slice(1).map(function(t) {
  return t.name;
 }).join("_") + "$";
 var returnId = emval_registeredMethods[signatureName];
 if (returnId !== undefined) {
  return returnId;
 }
 var params = [ "retType" ];
 var args = [ retType ];
 var argsList = "";
 for (var i = 0; i < argCount - 1; ++i) {
  argsList += (i !== 0 ? ", " : "") + "arg" + i;
  params.push("argType" + i);
  args.push(types[1 + i]);
 }
 var functionName = makeLegalFunctionName("methodCaller_" + signatureName);
 var functionBody = "return function " + functionName + "(handle, name, destructors, args) {\n";
 var offset = 0;
 for (var i = 0; i < argCount - 1; ++i) {
  functionBody += "    var arg" + i + " = argType" + i + ".readValueFromPointer(args" + (offset ? "+" + offset : "") + ");\n";
  offset += types[i + 1]["argPackAdvance"];
 }
 functionBody += "    var rv = handle[name](" + argsList + ");\n";
 for (var i = 0; i < argCount - 1; ++i) {
  if (types[i + 1]["deleteObject"]) {
   functionBody += "    argType" + i + ".deleteObject(arg" + i + ");\n";
  }
 }
 if (!retType.isVoid) {
  functionBody += "    return retType.toWireType(destructors, rv);\n";
 }
 functionBody += "};\n";
 params.push(functionBody);
 var invokerFunction = new_(Function, params).apply(null, args);
 returnId = emval_addMethodCaller(invokerFunction);
 emval_registeredMethods[signatureName] = returnId;
 return returnId;
}

function __emval_get_property(handle, key) {
 handle = Emval.toValue(handle);
 key = Emval.toValue(key);
 return Emval.toHandle(handle[key]);
}

function __emval_incref(handle) {
 if (handle > 4) {
  emval_handle_array[handle].refcount += 1;
 }
}

function __emval_new_array() {
 return Emval.toHandle([]);
}

function __emval_new_cstring(v) {
 return Emval.toHandle(getStringOrSymbol(v));
}

function __emval_new_object() {
 return Emval.toHandle({});
}

function __emval_run_destructors(handle) {
 var destructors = Emval.toValue(handle);
 runDestructors(destructors);
 __emval_decref(handle);
}

function __emval_set_property(handle, key, value) {
 handle = Emval.toValue(handle);
 key = Emval.toValue(key);
 value = Emval.toValue(value);
 handle[key] = value;
}

function __emval_take_value(type, arg) {
 type = requireRegisteredType(type, "_emval_take_value");
 var v = type["readValueFromPointer"](arg);
 return Emval.toHandle(v);
}

function readI53FromI64(ptr) {
 return _asan_js_load_4u(ptr >> 2) + _asan_js_load_4(ptr + 4 >> 2) * 4294967296;
}

function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}

var __MONTH_DAYS_LEAP_CUMULATIVE = [ 0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335 ];

var __MONTH_DAYS_REGULAR_CUMULATIVE = [ 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334 ];

function __yday_from_date(date) {
 var isLeapYear = __isLeapYear(date.getFullYear());
 var monthDaysCumulative = isLeapYear ? __MONTH_DAYS_LEAP_CUMULATIVE : __MONTH_DAYS_REGULAR_CUMULATIVE;
 var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;
 return yday;
}

function __localtime_js(time, tmPtr) {
 var date = new Date(readI53FromI64(time) * 1e3);
 _asan_js_store_4(tmPtr >> 2, date.getSeconds());
 _asan_js_store_4(tmPtr + 4 >> 2, date.getMinutes());
 _asan_js_store_4(tmPtr + 8 >> 2, date.getHours());
 _asan_js_store_4(tmPtr + 12 >> 2, date.getDate());
 _asan_js_store_4(tmPtr + 16 >> 2, date.getMonth());
 _asan_js_store_4(tmPtr + 20 >> 2, date.getFullYear() - 1900);
 _asan_js_store_4(tmPtr + 24 >> 2, date.getDay());
 var yday = __yday_from_date(date) | 0;
 _asan_js_store_4(tmPtr + 28 >> 2, yday);
 _asan_js_store_4(tmPtr + 36 >> 2, -(date.getTimezoneOffset() * 60));
 var start = new Date(date.getFullYear(), 0, 1);
 var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();
 var winterOffset = start.getTimezoneOffset();
 var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;
 _asan_js_store_4(tmPtr + 32 >> 2, dst);
}

function __mmap_js(len, prot, flags, fd, off, allocated, addr) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var res = FS.mmap(stream, len, off, prot, flags);
  var ptr = res.ptr;
  _asan_js_store_4(allocated >> 2, res.allocated);
  _asan_js_store_4u(addr >> 2, ptr);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function __munmap_js(addr, len, prot, flags, fd, offset) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  if (prot & 2) {
   SYSCALLS.doMsync(addr, stream, len, flags, offset);
  }
  FS.munmap(stream);
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return -e.errno;
 }
}

function allocateUTF8(str) {
 var size = lengthBytesUTF8(str) + 1;
 var ret = _malloc(size);
 if (ret) stringToUTF8Array(str, HEAP8, ret, size);
 return ret;
}

function __tzset_js(timezone, daylight, tzname) {
 var currentYear = new Date().getFullYear();
 var winter = new Date(currentYear, 0, 1);
 var summer = new Date(currentYear, 6, 1);
 var winterOffset = winter.getTimezoneOffset();
 var summerOffset = summer.getTimezoneOffset();
 var stdTimezoneOffset = Math.max(winterOffset, summerOffset);
 _asan_js_store_4u(timezone >> 2, stdTimezoneOffset * 60);
 _asan_js_store_4(daylight >> 2, Number(winterOffset != summerOffset));
 function extractZone(date) {
  var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
  return match ? match[1] : "GMT";
 }
 var winterName = extractZone(winter);
 var summerName = extractZone(summer);
 var winterNamePtr = allocateUTF8(winterName);
 var summerNamePtr = allocateUTF8(summerName);
 if (summerOffset < winterOffset) {
  _asan_js_store_4u(tzname >> 2, winterNamePtr);
  _asan_js_store_4u(tzname + 4 >> 2, summerNamePtr);
 } else {
  _asan_js_store_4u(tzname >> 2, summerNamePtr);
  _asan_js_store_4u(tzname + 4 >> 2, winterNamePtr);
 }
}

function _abort() {
 abort("native code called abort()");
}

var readEmAsmArgsArray = [];

function readEmAsmArgs(sigPtr, buf) {
 assert(Array.isArray(readEmAsmArgsArray));
 assert(buf % 16 == 0);
 readEmAsmArgsArray.length = 0;
 var ch;
 buf >>= 2;
 while (ch = _asan_js_load_1u(sigPtr++)) {
  var chr = String.fromCharCode(ch);
  var validChars = [ "d", "f", "i" ];
  assert(validChars.includes(chr), "Invalid character " + ch + '("' + chr + '") in readEmAsmArgs! Use only [' + validChars + '], and do not specify "v" for void return argument.');
  buf += ch != 105 & buf;
  readEmAsmArgsArray.push(ch == 105 ? _asan_js_load_4(buf) : _asan_js_load_d(buf++ >> 1));
  ++buf;
 }
 return readEmAsmArgsArray;
}

function runEmAsmFunction(code, sigPtr, argbuf) {
 var args = readEmAsmArgs(sigPtr, argbuf);
 if (!ASM_CONSTS.hasOwnProperty(code)) abort("No EM_ASM constant found at address " + code);
 return ASM_CONSTS[code].apply(null, args);
}

function _emscripten_asm_const_double(code, sigPtr, argbuf) {
 return runEmAsmFunction(code, sigPtr, argbuf);
}

function _emscripten_asm_const_int(code, sigPtr, argbuf) {
 return runEmAsmFunction(code, sigPtr, argbuf);
}

function _emscripten_console_error(str) {
 assert(typeof str == "number");
 console.error(UTF8ToString(str));
}

function _emscripten_date_now() {
 return Date.now();
}

function getHeapMax() {
 return 2147483648;
}

function _emscripten_get_heap_max() {
 return getHeapMax();
}

function _emscripten_get_module_name(buf, length) {
 return stringToUTF8(wasmBinaryFile, buf, length);
}

var _emscripten_get_now;

_emscripten_get_now = () => performance.now();

var UNWIND_CACHE = {};

function convertFrameToPC(frame) {
 assert(wasmOffsetConverter);
 var match;
 if (match = /\bwasm-function\[\d+\]:(0x[0-9a-f]+)/.exec(frame)) {
  return +match[1];
 } else if (match = /\bwasm-function\[(\d+)\]:(\d+)/.exec(frame)) {
  return wasmOffsetConverter.convert(+match[1], +match[2]);
 } else if (match = /:(\d+):\d+(?:\)|$)/.exec(frame)) {
  return 2147483648 | +match[1];
 }
 return 0;
}

function convertPCtoSourceLocation(pc) {
 if (UNWIND_CACHE.last_get_source_pc == pc) return UNWIND_CACHE.last_source;
 var match;
 var source;
 if (!source) {
  var frame = UNWIND_CACHE[pc];
  if (!frame) return null;
  if (match = /\((.*):(\d+):(\d+)\)$/.exec(frame)) {
   source = {
    file: match[1],
    line: match[2],
    column: match[3]
   };
  } else if (match = /@(.*):(\d+):(\d+)/.exec(frame)) {
   source = {
    file: match[1],
    line: match[2],
    column: match[3]
   };
  }
 }
 UNWIND_CACHE.last_get_source_pc = pc;
 UNWIND_CACHE.last_source = source;
 return source;
}

function _emscripten_pc_get_column(pc) {
 var result = convertPCtoSourceLocation(pc);
 return result ? result.column || 0 : 0;
}

function withBuiltinMalloc(func) {
 var prev_malloc = typeof _malloc != "undefined" ? _malloc : undefined;
 var prev_memalign = typeof _memalign != "undefined" ? _memalign : undefined;
 var prev_free = typeof _free != "undefined" ? _free : undefined;
 _malloc = _emscripten_builtin_malloc;
 _memalign = _emscripten_builtin_memalign;
 _free = _emscripten_builtin_free;
 try {
  return func();
 } finally {
  _malloc = prev_malloc;
  _memalign = prev_memalign;
  _free = prev_free;
 }
}

function _emscripten_pc_get_file(pc) {
 return withBuiltinMalloc(function() {
  var result = convertPCtoSourceLocation(pc);
  if (!result) return 0;
  if (_emscripten_pc_get_file.ret) _free(_emscripten_pc_get_file.ret);
  _emscripten_pc_get_file.ret = allocateUTF8(result.file);
  return _emscripten_pc_get_file.ret;
 });
}

function _emscripten_pc_get_function(pc) {
 return withBuiltinMalloc(function() {
  var name;
  if (pc & 2147483648) {
   var frame = UNWIND_CACHE[pc];
   if (!frame) return 0;
   var match;
   if (match = /^\s+at (.*) \(.*\)$/.exec(frame)) {
    name = match[1];
   } else if (match = /^(.+?)@/.exec(frame)) {
    name = match[1];
   } else {
    return 0;
   }
  } else {
   name = wasmOffsetConverter.getName(pc);
  }
  if (_emscripten_pc_get_function.ret) _free(_emscripten_pc_get_function.ret);
  _emscripten_pc_get_function.ret = allocateUTF8(name);
  return _emscripten_pc_get_function.ret;
 });
}

function _emscripten_pc_get_line(pc) {
 var result = convertPCtoSourceLocation(pc);
 return result ? result.line : 0;
}

function emscripten_realloc_buffer(size) {
 var b = wasmMemory.buffer;
 try {
  wasmMemory.grow(size - b.byteLength + 65535 >>> 16);
  updateMemoryViews();
  return 1;
 } catch (e) {
  err("emscripten_realloc_buffer: Attempted to grow heap from " + b.byteLength + " bytes to " + size + " bytes, but got error: " + e);
 }
}

function _emscripten_resize_heap(requestedSize) {
 var oldSize = HEAPU8.length;
 requestedSize = requestedSize >>> 0;
 assert(requestedSize > oldSize);
 var maxHeapSize = getHeapMax();
 if (requestedSize > maxHeapSize) {
  err("Cannot enlarge memory, asked to go up to " + requestedSize + " bytes, but the limit is " + maxHeapSize + " bytes!");
  return false;
 }
 let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;
 for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);
  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));
  var t0 = _emscripten_get_now();
  var replacement = emscripten_realloc_buffer(newSize);
  var t1 = _emscripten_get_now();
  out("Heap resize call from " + oldSize + " to " + newSize + " took " + (t1 - t0) + " msecs. Success: " + !!replacement);
  if (replacement) {
   return true;
  }
 }
 err("Failed to grow the heap from " + oldSize + " bytes to " + newSize + " bytes, not enough memory!");
 return false;
}

function jsStackTrace() {
 var error = new Error();
 if (!error.stack) {
  try {
   throw new Error();
  } catch (e) {
   error = e;
  }
  if (!error.stack) {
   return "(no stack trace available)";
  }
 }
 return error.stack.toString();
}

function _emscripten_return_address(level) {
 var callstack = jsStackTrace().split("\n");
 if (callstack[0] == "Error") {
  callstack.shift();
 }
 var caller = callstack[level + 3];
 return convertFrameToPC(caller);
}

function saveInUnwindCache(callstack) {
 callstack.forEach(frame => {
  var pc = convertFrameToPC(frame);
  if (pc) {
   UNWIND_CACHE[pc] = frame;
  }
 });
}

function _emscripten_stack_snapshot() {
 var callstack = jsStackTrace().split("\n");
 if (callstack[0] == "Error") {
  callstack.shift();
 }
 saveInUnwindCache(callstack);
 UNWIND_CACHE.last_addr = convertFrameToPC(callstack[3]);
 UNWIND_CACHE.last_stack = callstack;
 return UNWIND_CACHE.last_addr;
}

function _emscripten_stack_unwind_buffer(addr, buffer, count) {
 var stack;
 if (UNWIND_CACHE.last_addr == addr) {
  stack = UNWIND_CACHE.last_stack;
 } else {
  stack = jsStackTrace().split("\n");
  if (stack[0] == "Error") {
   stack.shift();
  }
  saveInUnwindCache(stack);
 }
 var offset = 3;
 while (stack[offset] && convertFrameToPC(stack[offset]) != addr) {
  ++offset;
 }
 for (var i = 0; i < count && stack[i + offset]; ++i) {
  _asan_js_store_4(buffer + i * 4 >> 2, convertFrameToPC(stack[i + offset]));
 }
 return i;
}

var ENV = {};

function getExecutableName() {
 return thisProgram || "./this.program";
}

function getEnvStrings() {
 if (!getEnvStrings.strings) {
  var lang = (typeof navigator == "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8";
  var env = {
   "USER": "web_user",
   "LOGNAME": "web_user",
   "PATH": "/",
   "PWD": "/",
   "HOME": "/home/web_user",
   "LANG": lang,
   "_": getExecutableName()
  };
  for (var x in ENV) {
   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];
  }
  var strings = [];
  for (var x in env) {
   strings.push(x + "=" + env[x]);
  }
  getEnvStrings.strings = strings;
 }
 return getEnvStrings.strings;
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  assert(str.charCodeAt(i) === (str.charCodeAt(i) & 255));
  _asan_js_store_1(buffer++ >> 0, str.charCodeAt(i));
 }
 if (!dontAddNull) _asan_js_store_1(buffer >> 0, 0);
}

function _environ_get(__environ, environ_buf) {
 var bufSize = 0;
 getEnvStrings().forEach(function(string, i) {
  var ptr = environ_buf + bufSize;
  _asan_js_store_4u(__environ + i * 4 >> 2, ptr);
  writeAsciiToMemory(string, ptr);
  bufSize += string.length + 1;
 });
 return 0;
}

function _environ_sizes_get(penviron_count, penviron_buf_size) {
 var strings = getEnvStrings();
 _asan_js_store_4u(penviron_count >> 2, strings.length);
 var bufSize = 0;
 strings.forEach(function(string) {
  bufSize += string.length + 1;
 });
 _asan_js_store_4u(penviron_buf_size >> 2, bufSize);
 return 0;
}

function _proc_exit(code) {
 EXITSTATUS = code;
 if (!keepRuntimeAlive()) {
  if (Module["onExit"]) Module["onExit"](code);
  ABORT = true;
 }
 quit_(code, new ExitStatus(code));
}

function exitJS(status, implicit) {
 EXITSTATUS = status;
 if (!keepRuntimeAlive()) {
  exitRuntime();
 }
 if (keepRuntimeAlive() && !implicit) {
  var msg = "program exited (with status: " + status + "), but keepRuntimeAlive() is set (counter=" + runtimeKeepaliveCounter + ") due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)";
  readyPromiseReject(msg);
  err(msg);
 }
 _proc_exit(status);
}

var _exit = exitJS;

function _fd_close(fd) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function doReadv(stream, iov, iovcnt, offset) {
 var ret = 0;
 for (var i = 0; i < iovcnt; i++) {
  var ptr = _asan_js_load_4u(iov >> 2);
  var len = _asan_js_load_4u(iov + 4 >> 2);
  iov += 8;
  var curr = FS.read(stream, HEAP8, ptr, len, offset);
  if (curr < 0) return -1;
  ret += curr;
  if (curr < len) break;
  if (typeof offset !== "undefined") {
   offset += curr;
  }
 }
 return ret;
}

function _fd_read(fd, iov, iovcnt, pnum) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var num = doReadv(stream, iov, iovcnt);
  _asan_js_store_4u(pnum >> 2, num);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function convertI32PairToI53Checked(lo, hi) {
 assert(lo == lo >>> 0 || lo == (lo | 0));
 assert(hi === (hi | 0));
 return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;
}

function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
 try {
  var offset = convertI32PairToI53Checked(offset_low, offset_high);
  if (isNaN(offset)) return 61;
  var stream = SYSCALLS.getStreamFromFD(fd);
  FS.llseek(stream, offset, whence);
  tempI64 = [ stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], 
  _asan_js_store_4(newOffset >> 2, tempI64[0]), _asan_js_store_4(newOffset + 4 >> 2, tempI64[1]);
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function doWritev(stream, iov, iovcnt, offset) {
 var ret = 0;
 for (var i = 0; i < iovcnt; i++) {
  var ptr = _asan_js_load_4u(iov >> 2);
  var len = _asan_js_load_4u(iov + 4 >> 2);
  iov += 8;
  var curr = FS.write(stream, HEAP8, ptr, len, offset);
  if (curr < 0) return -1;
  ret += curr;
  if (typeof offset !== "undefined") {
   offset += curr;
  }
 }
 return ret;
}

function _fd_write(fd, iov, iovcnt, pnum) {
 try {
  var stream = SYSCALLS.getStreamFromFD(fd);
  var num = doWritev(stream, iov, iovcnt);
  _asan_js_store_4u(pnum >> 2, num);
  return 0;
 } catch (e) {
  if (typeof FS == "undefined" || !(e.name === "ErrnoError")) throw e;
  return e.errno;
 }
}

function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) {}
 return sum;
}

var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];

function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}

function writeArrayToMemory(array, buffer) {
 assert(array.length >= 0, "writeArrayToMemory array must have a length (should be an array or typed array)");
 HEAP8.set(array, buffer);
}

function _strftime(s, maxsize, format, tm) {
 var tm_zone = _asan_js_load_4(tm + 40 >> 2);
 var date = {
  tm_sec: _asan_js_load_4(tm >> 2),
  tm_min: _asan_js_load_4(tm + 4 >> 2),
  tm_hour: _asan_js_load_4(tm + 8 >> 2),
  tm_mday: _asan_js_load_4(tm + 12 >> 2),
  tm_mon: _asan_js_load_4(tm + 16 >> 2),
  tm_year: _asan_js_load_4(tm + 20 >> 2),
  tm_wday: _asan_js_load_4(tm + 24 >> 2),
  tm_yday: _asan_js_load_4(tm + 28 >> 2),
  tm_isdst: _asan_js_load_4(tm + 32 >> 2),
  tm_gmtoff: _asan_js_load_4(tm + 36 >> 2),
  tm_zone: tm_zone ? UTF8ToString(tm_zone) : ""
 };
 var pattern = UTF8ToString(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S",
  "%Ec": "%c",
  "%EC": "%C",
  "%Ex": "%m/%d/%y",
  "%EX": "%H:%M:%S",
  "%Ey": "%y",
  "%EY": "%Y",
  "%Od": "%d",
  "%Oe": "%e",
  "%OH": "%H",
  "%OI": "%I",
  "%Om": "%m",
  "%OM": "%M",
  "%OS": "%S",
  "%Ou": "%u",
  "%OU": "%U",
  "%OV": "%V",
  "%Ow": "%w",
  "%OW": "%W",
  "%Oy": "%y"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value == "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);

  case 1:
   return janFourth;

  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);

  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);

  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);

  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);

  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   }
   return thisDate.getFullYear();
  }
  return thisDate.getFullYear() - 1;
 }
 var EXPANSION_RULES_2 = {
  "%a": function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  },
  "%A": function(date) {
   return WEEKDAYS[date.tm_wday];
  },
  "%b": function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  },
  "%B": function(date) {
   return MONTHS[date.tm_mon];
  },
  "%C": function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  },
  "%d": function(date) {
   return leadingNulls(date.tm_mday, 2);
  },
  "%e": function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  },
  "%g": function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  },
  "%G": function(date) {
   return getWeekBasedYear(date);
  },
  "%H": function(date) {
   return leadingNulls(date.tm_hour, 2);
  },
  "%I": function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  },
  "%j": function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  },
  "%m": function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  },
  "%M": function(date) {
   return leadingNulls(date.tm_min, 2);
  },
  "%n": function() {
   return "\n";
  },
  "%p": function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   }
   return "PM";
  },
  "%S": function(date) {
   return leadingNulls(date.tm_sec, 2);
  },
  "%t": function() {
   return "\t";
  },
  "%u": function(date) {
   return date.tm_wday || 7;
  },
  "%U": function(date) {
   var days = date.tm_yday + 7 - date.tm_wday;
   return leadingNulls(Math.floor(days / 7), 2);
  },
  "%V": function(date) {
   var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);
   if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {
    val++;
   }
   if (!val) {
    val = 52;
    var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;
    if (dec31 == 4 || dec31 == 5 && __isLeapYear(date.tm_year % 400 - 1)) {
     val++;
    }
   } else if (val == 53) {
    var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;
    if (jan1 != 4 && (jan1 != 3 || !__isLeapYear(date.tm_year))) val = 1;
   }
   return leadingNulls(val, 2);
  },
  "%w": function(date) {
   return date.tm_wday;
  },
  "%W": function(date) {
   var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;
   return leadingNulls(Math.floor(days / 7), 2);
  },
  "%y": function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  },
  "%Y": function(date) {
   return date.tm_year + 1900;
  },
  "%z": function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  },
  "%Z": function(date) {
   return date.tm_zone;
  },
  "%%": function() {
   return "%";
  }
 };
 pattern = pattern.replace(/%%/g, "\0\0");
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.includes(rule)) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 pattern = pattern.replace(/\0\0/g, "%");
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}

function _strftime_l(s, maxsize, format, tm, loc) {
 return _strftime(s, maxsize, format, tm);
}

var FSNode = function(parent, name, mode, rdev) {
 if (!parent) {
  parent = this;
 }
 this.parent = parent;
 this.mount = parent.mount;
 this.mounted = null;
 this.id = FS.nextInode++;
 this.name = name;
 this.mode = mode;
 this.node_ops = {};
 this.stream_ops = {};
 this.rdev = rdev;
};

var readMode = 292 | 73;

var writeMode = 146;

Object.defineProperties(FSNode.prototype, {
 read: {
  get: function() {
   return (this.mode & readMode) === readMode;
  },
  set: function(val) {
   val ? this.mode |= readMode : this.mode &= ~readMode;
  }
 },
 write: {
  get: function() {
   return (this.mode & writeMode) === writeMode;
  },
  set: function(val) {
   val ? this.mode |= writeMode : this.mode &= ~writeMode;
  }
 },
 isFolder: {
  get: function() {
   return FS.isDir(this.mode);
  }
 },
 isDevice: {
  get: function() {
   return FS.isChrdev(this.mode);
  }
 }
});

FS.FSNode = FSNode;

FS.staticInit();

ERRNO_CODES = {
 "EPERM": 63,
 "ENOENT": 44,
 "ESRCH": 71,
 "EINTR": 27,
 "EIO": 29,
 "ENXIO": 60,
 "E2BIG": 1,
 "ENOEXEC": 45,
 "EBADF": 8,
 "ECHILD": 12,
 "EAGAIN": 6,
 "EWOULDBLOCK": 6,
 "ENOMEM": 48,
 "EACCES": 2,
 "EFAULT": 21,
 "ENOTBLK": 105,
 "EBUSY": 10,
 "EEXIST": 20,
 "EXDEV": 75,
 "ENODEV": 43,
 "ENOTDIR": 54,
 "EISDIR": 31,
 "EINVAL": 28,
 "ENFILE": 41,
 "EMFILE": 33,
 "ENOTTY": 59,
 "ETXTBSY": 74,
 "EFBIG": 22,
 "ENOSPC": 51,
 "ESPIPE": 70,
 "EROFS": 69,
 "EMLINK": 34,
 "EPIPE": 64,
 "EDOM": 18,
 "ERANGE": 68,
 "ENOMSG": 49,
 "EIDRM": 24,
 "ECHRNG": 106,
 "EL2NSYNC": 156,
 "EL3HLT": 107,
 "EL3RST": 108,
 "ELNRNG": 109,
 "EUNATCH": 110,
 "ENOCSI": 111,
 "EL2HLT": 112,
 "EDEADLK": 16,
 "ENOLCK": 46,
 "EBADE": 113,
 "EBADR": 114,
 "EXFULL": 115,
 "ENOANO": 104,
 "EBADRQC": 103,
 "EBADSLT": 102,
 "EDEADLOCK": 16,
 "EBFONT": 101,
 "ENOSTR": 100,
 "ENODATA": 116,
 "ETIME": 117,
 "ENOSR": 118,
 "ENONET": 119,
 "ENOPKG": 120,
 "EREMOTE": 121,
 "ENOLINK": 47,
 "EADV": 122,
 "ESRMNT": 123,
 "ECOMM": 124,
 "EPROTO": 65,
 "EMULTIHOP": 36,
 "EDOTDOT": 125,
 "EBADMSG": 9,
 "ENOTUNIQ": 126,
 "EBADFD": 127,
 "EREMCHG": 128,
 "ELIBACC": 129,
 "ELIBBAD": 130,
 "ELIBSCN": 131,
 "ELIBMAX": 132,
 "ELIBEXEC": 133,
 "ENOSYS": 52,
 "ENOTEMPTY": 55,
 "ENAMETOOLONG": 37,
 "ELOOP": 32,
 "EOPNOTSUPP": 138,
 "EPFNOSUPPORT": 139,
 "ECONNRESET": 15,
 "ENOBUFS": 42,
 "EAFNOSUPPORT": 5,
 "EPROTOTYPE": 67,
 "ENOTSOCK": 57,
 "ENOPROTOOPT": 50,
 "ESHUTDOWN": 140,
 "ECONNREFUSED": 14,
 "EADDRINUSE": 3,
 "ECONNABORTED": 13,
 "ENETUNREACH": 40,
 "ENETDOWN": 38,
 "ETIMEDOUT": 73,
 "EHOSTDOWN": 142,
 "EHOSTUNREACH": 23,
 "EINPROGRESS": 26,
 "EALREADY": 7,
 "EDESTADDRREQ": 17,
 "EMSGSIZE": 35,
 "EPROTONOSUPPORT": 66,
 "ESOCKTNOSUPPORT": 137,
 "EADDRNOTAVAIL": 4,
 "ENETRESET": 39,
 "EISCONN": 30,
 "ENOTCONN": 53,
 "ETOOMANYREFS": 141,
 "EUSERS": 136,
 "EDQUOT": 19,
 "ESTALE": 72,
 "ENOTSUP": 138,
 "ENOMEDIUM": 148,
 "EILSEQ": 25,
 "EOVERFLOW": 61,
 "ECANCELED": 11,
 "ENOTRECOVERABLE": 56,
 "EOWNERDEAD": 62,
 "ESTRPIPE": 135
};

InternalError = Module["InternalError"] = extendError(Error, "InternalError");

embind_init_charCodes();

BindingError = Module["BindingError"] = extendError(Error, "BindingError");

init_ClassHandle();

init_embind();

init_RegisteredPointer();

UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");

init_emval();

var decodeBase64 = typeof atob == "function" ? atob : function(input) {
 var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
 var output = "";
 var chr1, chr2, chr3;
 var enc1, enc2, enc3, enc4;
 var i = 0;
 input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
 do {
  enc1 = keyStr.indexOf(input.charAt(i++));
  enc2 = keyStr.indexOf(input.charAt(i++));
  enc3 = keyStr.indexOf(input.charAt(i++));
  enc4 = keyStr.indexOf(input.charAt(i++));
  chr1 = enc1 << 2 | enc2 >> 4;
  chr2 = (enc2 & 15) << 4 | enc3 >> 2;
  chr3 = (enc3 & 3) << 6 | enc4;
  output = output + String.fromCharCode(chr1);
  if (enc3 !== 64) {
   output = output + String.fromCharCode(chr2);
  }
  if (enc4 !== 64) {
   output = output + String.fromCharCode(chr3);
  }
 } while (i < input.length);
 return output;
};

function intArrayFromBase64(s) {
 try {
  var decoded = decodeBase64(s);
  var bytes = new Uint8Array(decoded.length);
  for (var i = 0; i < decoded.length; ++i) {
   bytes[i] = decoded.charCodeAt(i);
  }
  return bytes;
 } catch (_) {
  throw new Error("Converting base64 string to bytes failed.");
 }
}

function tryParseAsDataURI(filename) {
 if (!isDataURI(filename)) {
  return;
 }
 return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}

function checkIncomingModuleAPI() {
 ignoredModuleProp("fetchSettings");
}

var wasmImports = {
 "__assert_fail": ___assert_fail,
 "__cxa_throw": ___cxa_throw,
 "__handle_stack_overflow": ___handle_stack_overflow,
 "__syscall_dup": ___syscall_dup,
 "__syscall_fcntl64": ___syscall_fcntl64,
 "__syscall_ioctl": ___syscall_ioctl,
 "__syscall_mkdirat": ___syscall_mkdirat,
 "__syscall_openat": ___syscall_openat,
 "__syscall_stat64": ___syscall_stat64,
 "_embind_finalize_value_object": __embind_finalize_value_object,
 "_embind_register_bigint": __embind_register_bigint,
 "_embind_register_bool": __embind_register_bool,
 "_embind_register_class": __embind_register_class,
 "_embind_register_class_constructor": __embind_register_class_constructor,
 "_embind_register_class_function": __embind_register_class_function,
 "_embind_register_constant": __embind_register_constant,
 "_embind_register_emval": __embind_register_emval,
 "_embind_register_float": __embind_register_float,
 "_embind_register_integer": __embind_register_integer,
 "_embind_register_memory_view": __embind_register_memory_view,
 "_embind_register_std_string": __embind_register_std_string,
 "_embind_register_std_wstring": __embind_register_std_wstring,
 "_embind_register_value_object": __embind_register_value_object,
 "_embind_register_value_object_field": __embind_register_value_object_field,
 "_embind_register_void": __embind_register_void,
 "_emscripten_get_now_is_monotonic": __emscripten_get_now_is_monotonic,
 "_emscripten_throw_longjmp": __emscripten_throw_longjmp,
 "_emval_as": __emval_as,
 "_emval_call_void_method": __emval_call_void_method,
 "_emval_decref": __emval_decref,
 "_emval_get_method_caller": __emval_get_method_caller,
 "_emval_get_property": __emval_get_property,
 "_emval_incref": __emval_incref,
 "_emval_new_array": __emval_new_array,
 "_emval_new_cstring": __emval_new_cstring,
 "_emval_new_object": __emval_new_object,
 "_emval_run_destructors": __emval_run_destructors,
 "_emval_set_property": __emval_set_property,
 "_emval_take_value": __emval_take_value,
 "_localtime_js": __localtime_js,
 "_mmap_js": __mmap_js,
 "_munmap_js": __munmap_js,
 "_tzset_js": __tzset_js,
 "abort": _abort,
 "emscripten_asm_const_double": _emscripten_asm_const_double,
 "emscripten_asm_const_int": _emscripten_asm_const_int,
 "emscripten_console_error": _emscripten_console_error,
 "emscripten_date_now": _emscripten_date_now,
 "emscripten_get_heap_max": _emscripten_get_heap_max,
 "emscripten_get_module_name": _emscripten_get_module_name,
 "emscripten_get_now": _emscripten_get_now,
 "emscripten_pc_get_column": _emscripten_pc_get_column,
 "emscripten_pc_get_file": _emscripten_pc_get_file,
 "emscripten_pc_get_function": _emscripten_pc_get_function,
 "emscripten_pc_get_line": _emscripten_pc_get_line,
 "emscripten_resize_heap": _emscripten_resize_heap,
 "emscripten_return_address": _emscripten_return_address,
 "emscripten_stack_snapshot": _emscripten_stack_snapshot,
 "emscripten_stack_unwind_buffer": _emscripten_stack_unwind_buffer,
 "environ_get": _environ_get,
 "environ_sizes_get": _environ_sizes_get,
 "exit": _exit,
 "fd_close": _fd_close,
 "fd_read": _fd_read,
 "fd_seek": _fd_seek,
 "fd_write": _fd_write,
 "invoke_ii": invoke_ii,
 "invoke_iii": invoke_iii,
 "invoke_iiii": invoke_iiii,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_viii": invoke_viii,
 "invoke_viiii": invoke_viiii,
 "proc_exit": _proc_exit,
 "strftime": _strftime,
 "strftime_l": _strftime_l
};

var asm = createWasm();

var ___wasm_call_ctors = createExportWrapper("__wasm_call_ctors");

var _malloc = createExportWrapper("malloc");

var _free = createExportWrapper("free");

var ___errno_location = createExportWrapper("__errno_location");

var _saveSetjmp = createExportWrapper("saveSetjmp");

var _fflush = Module["_fflush"] = createExportWrapper("fflush");

var ___getTypeName = Module["___getTypeName"] = createExportWrapper("__getTypeName");

var __embind_initialize_bindings = Module["__embind_initialize_bindings"] = createExportWrapper("_embind_initialize_bindings");

var ___funcs_on_exit = createExportWrapper("__funcs_on_exit");

var _emscripten_builtin_malloc = createExportWrapper("emscripten_builtin_malloc");

var _memalign = createExportWrapper("memalign");

var _emscripten_builtin_free = createExportWrapper("emscripten_builtin_free");

var _emscripten_builtin_memalign = createExportWrapper("emscripten_builtin_memalign");

var _setThrew = createExportWrapper("setThrew");

var _emscripten_stack_init = function() {
 return (_emscripten_stack_init = Module["asm"]["emscripten_stack_init"]).apply(null, arguments);
};

var _emscripten_stack_get_free = function() {
 return (_emscripten_stack_get_free = Module["asm"]["emscripten_stack_get_free"]).apply(null, arguments);
};

var _emscripten_stack_get_base = function() {
 return (_emscripten_stack_get_base = Module["asm"]["emscripten_stack_get_base"]).apply(null, arguments);
};

var _emscripten_stack_get_end = function() {
 return (_emscripten_stack_get_end = Module["asm"]["emscripten_stack_get_end"]).apply(null, arguments);
};

var stackSave = createExportWrapper("stackSave");

var stackRestore = createExportWrapper("stackRestore");

var stackAlloc = createExportWrapper("stackAlloc");

var _emscripten_stack_get_current = function() {
 return (_emscripten_stack_get_current = Module["asm"]["emscripten_stack_get_current"]).apply(null, arguments);
};

var ___cxa_is_pointer_type = createExportWrapper("__cxa_is_pointer_type");

var __ZN6__asan9FakeStack17AddrIsInFakeStackEm = Module["__ZN6__asan9FakeStack17AddrIsInFakeStackEm"] = createExportWrapper("_ZN6__asan9FakeStack17AddrIsInFakeStackEm");

var __ZN6__asan9FakeStack8AllocateEmmm = Module["__ZN6__asan9FakeStack8AllocateEmmm"] = createExportWrapper("_ZN6__asan9FakeStack8AllocateEmmm");

var __asan_c_load_1 = createExportWrapper("_asan_c_load_1");

var __asan_c_load_1u = createExportWrapper("_asan_c_load_1u");

var __asan_c_load_2 = createExportWrapper("_asan_c_load_2");

var __asan_c_load_2u = createExportWrapper("_asan_c_load_2u");

var __asan_c_load_4 = createExportWrapper("_asan_c_load_4");

var __asan_c_load_4u = createExportWrapper("_asan_c_load_4u");

var __asan_c_load_f = createExportWrapper("_asan_c_load_f");

var __asan_c_load_d = createExportWrapper("_asan_c_load_d");

var __asan_c_store_1 = createExportWrapper("_asan_c_store_1");

var __asan_c_store_1u = createExportWrapper("_asan_c_store_1u");

var __asan_c_store_2 = createExportWrapper("_asan_c_store_2");

var __asan_c_store_2u = createExportWrapper("_asan_c_store_2u");

var __asan_c_store_4 = createExportWrapper("_asan_c_store_4");

var __asan_c_store_4u = createExportWrapper("_asan_c_store_4u");

var __asan_c_store_f = createExportWrapper("_asan_c_store_f");

var __asan_c_store_d = createExportWrapper("_asan_c_store_d");

var ___set_stack_limits = Module["___set_stack_limits"] = createExportWrapper("__set_stack_limits");

var dynCall_jiji = Module["dynCall_jiji"] = createExportWrapper("dynCall_jiji");

var dynCall_viijii = Module["dynCall_viijii"] = createExportWrapper("dynCall_viijii");

var dynCall_iiiiij = Module["dynCall_iiiiij"] = createExportWrapper("dynCall_iiiiij");

var dynCall_iiiiijj = Module["dynCall_iiiiijj"] = createExportWrapper("dynCall_iiiiijj");

var dynCall_iiiiiijj = Module["dynCall_iiiiiijj"] = createExportWrapper("dynCall_iiiiiijj");

var dynCall_jii = Module["dynCall_jii"] = createExportWrapper("dynCall_jii");

function invoke_ii(index, a1) {
 var sp = stackSave();
 try {
  return getWasmTableEntry(index)(a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_vi(index, a1) {
 var sp = stackSave();
 try {
  getWasmTableEntry(index)(a1);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_viiii(index, a1, a2, a3, a4) {
 var sp = stackSave();
 try {
  getWasmTableEntry(index)(a1, a2, a3, a4);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_viii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  getWasmTableEntry(index)(a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_vii(index, a1, a2) {
 var sp = stackSave();
 try {
  getWasmTableEntry(index)(a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_iii(index, a1, a2) {
 var sp = stackSave();
 try {
  return getWasmTableEntry(index)(a1, a2);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

function invoke_iiii(index, a1, a2, a3) {
 var sp = stackSave();
 try {
  return getWasmTableEntry(index)(a1, a2, a3);
 } catch (e) {
  stackRestore(sp);
  if (e !== e + 0) throw e;
  _setThrew(1, 0);
 }
}

Module["FS"] = FS;

var missingLibrarySymbols = [ "stringToNewUTF8", "inetPton4", "inetNtop4", "inetPton6", "inetNtop6", "readSockaddr", "writeSockaddr", "getHostByName", "traverseStack", "runMainThreadEmAsm", "jstoi_q", "jstoi_s", "listenOnce", "autoResumeAudioContext", "setWasmTableEntry", "handleException", "runtimeKeepalivePush", "runtimeKeepalivePop", "callUserCallback", "maybeExit", "safeSetTimeout", "asmjsMangle", "HandleAllocator", "getNativeTypeSize", "STACK_SIZE", "STACK_ALIGN", "POINTER_SIZE", "ASSERTIONS", "writeI53ToI64", "writeI53ToI64Clamped", "writeI53ToI64Signaling", "writeI53ToU64Clamped", "writeI53ToU64Signaling", "readI53FromU64", "convertI32PairToI53", "convertU32PairToI53", "getCFunc", "ccall", "cwrap", "uleb128Encode", "sigToWasmTypes", "generateFuncType", "convertJsFunctionToWasm", "getEmptyTableSlot", "updateTableMap", "getFunctionAddress", "addFunction", "removeFunction", "reallyNegative", "unSign", "strLen", "reSign", "formatString", "AsciiToString", "stringToAscii", "allocateUTF8OnStack", "writeStringToMemory", "getSocketFromFD", "getSocketAddress", "registerKeyEventCallback", "maybeCStringToJsString", "findEventTarget", "findCanvasEventTarget", "getBoundingClientRect", "fillMouseEventData", "registerMouseEventCallback", "registerWheelEventCallback", "registerUiEventCallback", "registerFocusEventCallback", "fillDeviceOrientationEventData", "registerDeviceOrientationEventCallback", "fillDeviceMotionEventData", "registerDeviceMotionEventCallback", "screenOrientation", "fillOrientationChangeEventData", "registerOrientationChangeEventCallback", "fillFullscreenChangeEventData", "registerFullscreenChangeEventCallback", "JSEvents_requestFullscreen", "JSEvents_resizeCanvasForFullscreen", "registerRestoreOldStyle", "hideEverythingExceptGivenElement", "restoreHiddenElements", "setLetterbox", "softFullscreenResizeWebGLRenderTarget", "doRequestFullscreen", "fillPointerlockChangeEventData", "registerPointerlockChangeEventCallback", "registerPointerlockErrorEventCallback", "requestPointerLock", "fillVisibilityChangeEventData", "registerVisibilityChangeEventCallback", "registerTouchEventCallback", "fillGamepadEventData", "registerGamepadEventCallback", "registerBeforeUnloadEventCallback", "fillBatteryEventData", "battery", "registerBatteryEventCallback", "setCanvasElementSize", "getCanvasElementSize", "stackTrace", "checkWasiClock", "createDyncallWrapper", "setImmediateWrapped", "clearImmediateWrapped", "polyfillSetImmediate", "getPromise", "makePromise", "makePromiseCallback", "exception_addRef", "exception_decRef", "setMainLoop", "_setNetworkCallback", "heapObjectForWebGLType", "heapAccessShiftForWebGLHeap", "emscriptenWebGLGet", "computeUnpackAlignedImageSize", "emscriptenWebGLGetTexPixelData", "emscriptenWebGLGetUniform", "webglGetUniformLocation", "webglPrepareUniformLocationsBeforeFirstUse", "webglGetLeftBracePos", "emscriptenWebGLGetVertexAttrib", "writeGLArray", "SDL_unicode", "SDL_ttfContext", "SDL_audio", "GLFW_Window", "runAndAbortIfError", "ALLOC_NORMAL", "ALLOC_STACK", "allocate", "registerInheritedInstance", "unregisterInheritedInstance", "enumReadValueFromPointer", "validateThis", "craftEmvalAllocator", "emval_get_global" ];

missingLibrarySymbols.forEach(missingLibrarySymbol);

var unexportedSymbols = [ "run", "UTF8ArrayToString", "UTF8ToString", "stringToUTF8Array", "stringToUTF8", "lengthBytesUTF8", "addOnPreRun", "addOnInit", "addOnPreMain", "addOnExit", "addOnPostRun", "addRunDependency", "removeRunDependency", "FS_createFolder", "FS_createPath", "FS_createDataFile", "FS_createPreloadedFile", "FS_createLazyFile", "FS_createLink", "FS_createDevice", "FS_unlink", "out", "err", "callMain", "abort", "keepRuntimeAlive", "wasmMemory", "stackAlloc", "stackSave", "stackRestore", "getTempRet0", "setTempRet0", "WasmOffsetConverter", "writeStackCookie", "checkStackCookie", "intArrayFromBase64", "tryParseAsDataURI", "ptrToString", "zeroMemory", "exitJS", "getHeapMax", "emscripten_realloc_buffer", "ENV", "ERRNO_CODES", "ERRNO_MESSAGES", "setErrNo", "DNS", "Protocols", "Sockets", "getRandomDevice", "timers", "warnOnce", "UNWIND_CACHE", "convertPCtoSourceLocation", "withBuiltinMalloc", "readEmAsmArgsArray", "readEmAsmArgs", "runEmAsmFunction", "getExecutableName", "dynCallLegacy", "getDynCaller", "dynCall", "getWasmTableEntry", "asyncLoad", "alignMemory", "mmapAlloc", "readI53FromI64", "convertI32PairToI53Checked", "freeTableIndexes", "functionsInTableMap", "setValue", "getValue", "PATH", "PATH_FS", "intArrayFromString", "intArrayToString", "UTF16Decoder", "UTF16ToString", "stringToUTF16", "lengthBytesUTF16", "UTF32ToString", "stringToUTF32", "lengthBytesUTF32", "allocateUTF8", "writeArrayToMemory", "writeAsciiToMemory", "SYSCALLS", "JSEvents", "specialHTMLTargets", "currentFullscreenStrategy", "restoreOldWindowedStyle", "demangle", "demangleAll", "jsStackTrace", "ExitStatus", "getEnvStrings", "doReadv", "doWritev", "dlopenMissingError", "promiseMap", "uncaughtExceptionCount", "exceptionLast", "exceptionCaught", "ExceptionInfo", "Browser", "wget", "MEMFS", "TTY", "PIPEFS", "SOCKFS", "tempFixedLengthArray", "miniTempWebGLFloatBuffers", "GL", "AL", "SDL", "SDL_gfx", "GLUT", "EGL", "GLFW", "GLEW", "IDBStore", "InternalError", "BindingError", "UnboundTypeError", "PureVirtualError", "init_embind", "throwInternalError", "throwBindingError", "throwUnboundTypeError", "ensureOverloadTable", "exposePublicSymbol", "replacePublicSymbol", "extendError", "createNamedFunction", "embindRepr", "registeredInstances", "getBasestPointer", "getInheritedInstance", "getInheritedInstanceCount", "getLiveInheritedInstances", "registeredTypes", "awaitingDependencies", "typeDependencies", "registeredPointers", "registerType", "whenDependentTypesAreResolved", "embind_charCodes", "embind_init_charCodes", "readLatin1String", "getTypeName", "heap32VectorToArray", "requireRegisteredType", "getShiftFromSize", "integerReadValueFromPointer", "floatReadValueFromPointer", "simpleReadValueFromPointer", "runDestructors", "new_", "craftInvokerFunction", "embind__requireFunction", "tupleRegistrations", "structRegistrations", "genericPointerToWireType", "constNoSmartPtrRawPointerToWireType", "nonConstNoSmartPtrRawPointerToWireType", "init_RegisteredPointer", "RegisteredPointer", "RegisteredPointer_getPointee", "RegisteredPointer_destructor", "RegisteredPointer_deleteObject", "RegisteredPointer_fromWireType", "runDestructor", "releaseClassHandle", "finalizationRegistry", "detachFinalizer_deps", "detachFinalizer", "attachFinalizer", "makeClassHandle", "init_ClassHandle", "ClassHandle", "ClassHandle_isAliasOf", "throwInstanceAlreadyDeleted", "ClassHandle_clone", "ClassHandle_delete", "deletionQueue", "ClassHandle_isDeleted", "ClassHandle_deleteLater", "flushPendingDeletes", "delayFunction", "setDelayFunction", "RegisteredClass", "shallowCopyInternalPointer", "downcastPointer", "upcastPointer", "char_0", "char_9", "makeLegalFunctionName", "emval_handle_array", "emval_free_list", "emval_symbols", "init_emval", "count_emval_handles", "get_first_emval", "getStringOrSymbol", "Emval", "emval_newers", "emval_lookupTypes", "emval_allocateDestructors", "emval_methodCallers", "emval_addMethodCaller", "emval_registeredMethods" ];

unexportedSymbols.forEach(unexportedRuntimeSymbol);

var calledRun;

dependenciesFulfilled = function runCaller() {
 if (!calledRun) run();
 if (!calledRun) dependenciesFulfilled = runCaller;
};

function stackCheckInit() {
 _emscripten_stack_init();
 writeStackCookie();
}

function run() {
 if (runDependencies > 0) {
  return;
 }
 stackCheckInit();
 preRun();
 if (runDependencies > 0) {
  return;
 }
 function doRun() {
  if (calledRun) return;
  calledRun = true;
  Module["calledRun"] = true;
  if (ABORT) return;
  initRuntime();
  readyPromiseResolve(Module);
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  assert(!Module["_main"], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout(function() {
   setTimeout(function() {
    Module["setStatus"]("");
   }, 1);
   doRun();
  }, 1);
 } else {
  doRun();
 }
 checkStackCookie();
}

if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}

run();


  return Module.ready
}

);
})();
export default Module;